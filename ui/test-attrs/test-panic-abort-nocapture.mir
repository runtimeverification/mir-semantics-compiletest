// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const it_works: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _8: [closure@ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2]; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _2 = StaticTestName(const "it_works"); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _4 = test::ShouldPanic::No;      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _8 = [closure@ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // closure
                                         // + def_id: DefId(0:6 ~ test_panic_abort_nocapture[51a6]::it_works::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:1: 21:2
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    }
}

fn it_works::{closure#0}(_1: &[closure@ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:15: 18:15

    bb0: {
        _2 = it_works() -> bb1;          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:15: 18:15
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // + literal: Const { ty: fn() {it_works}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:18:15: 18:15
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:2: 21:2
    }
}

fn it_works() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:15: 18:15
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _11: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _12: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _13: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let mut _15: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _16: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _17: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    scope 1 {
        debug left_val => _12;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _13;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _14: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _14;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _18 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_works, [], Some(promoted[3])) }
        _5 = _18;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
        _4 = _5;                         // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
        _17 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_works, [], Some(promoted[2])) }
        _8 = _17;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _16 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_works, [], Some(promoted[1])) }
        _10 = _16;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _15 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_works, [], Some(promoted[0])) }
        _11 = _15;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _11);       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_9.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_9.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:21:2: 21:2
    }
}

promoted[0] in it_works: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:23: 20:24

    bb0: {
        _1 = const 2_i32;                // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:23: 20:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in it_works: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:16: 20:21
    let mut _2: (i32, bool);             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:16: 20:21

    bb0: {
        _2 = CheckedAdd(const 1_i32, const 1_i32); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:16: 20:21
        _1 = move (_2.0: i32);           // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:20:16: 20:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in it_works: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in it_works: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32

    bb0: {
        _1 = [const "about to succeed\n"]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:19:14: 19:32
    }
}

const it_panics: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _8: [closure@ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2]; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _2 = StaticTestName(const "it_panics"); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _4 = test::ShouldPanic::Yes;     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _8 = [closure@ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // closure
                                         // + def_id: DefId(0:10 ~ test_panic_abort_nocapture[51a6]::it_panics::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:1: 28:2
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    }
}

fn it_panics::{closure#0}(_1: &[closure@ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:16: 25:16

    bb0: {
        _2 = it_panics() -> bb1;         // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:16: 25:16
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // + literal: Const { ty: fn() {it_panics}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:25:16: 25:16
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:28:2: 28:2
    }
}

fn it_panics() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:16: 25:16
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _11: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _12: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _13: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    scope 1 {
        debug left_val => _12;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _13;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _14: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _14;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _25 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_panics, [], Some(promoted[3])) }
        _5 = _25;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
        _4 = _5;                         // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_panics, [], Some(promoted[2])) }
        _8 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _23 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_panics, [], Some(promoted[1])) }
        _10 = _23;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_panics, [], Some(promoted[0])) }
        _11 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _11);       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_9.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_9.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _14 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<i32, i32>(move _16, move _17, move _19, move _21); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }
}

promoted[0] in it_panics: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:23: 27:24

    bb0: {
        _1 = const 4_i32;                // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:23: 27:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in it_panics: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:16: 27:21
    let mut _2: (i32, bool);             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:16: 27:21

    bb0: {
        _2 = CheckedAdd(const 1_i32, const 1_i32); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:16: 27:21
        _1 = move (_2.0: i32);           // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:27:16: 27:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in it_panics: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in it_panics: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30

    bb0: {
        _1 = [const "about to panic\n"]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:26:14: 26:30
    }
}

const it_fails: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _8: [closure@ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2]; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _2 = StaticTestName(const "it_fails"); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _4 = test::ShouldPanic::No;      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _8 = [closure@ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // closure
                                         // + def_id: DefId(0:14 ~ test_panic_abort_nocapture[51a6]::it_fails::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:1: 34:2
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    }
}

fn it_fails::{closure#0}(_1: &[closure@ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:15: 31:15

    bb0: {
        _2 = it_fails() -> bb1;          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:15: 31:15
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // + literal: Const { ty: fn() {it_fails}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:31:15: 31:15
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:34:2: 34:2
    }
}

fn it_fails() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:15: 31:15
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _9: (&i32, &i32);            // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _10: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _11: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _12: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
    let _13: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &i32;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _23: &i32;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    scope 1 {
        debug left_val => _12;           // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        debug right_val => _13;          // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _14: core::panicking::AssertKind; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        scope 2 {
            debug kind => _14;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
        }
    }

    bb0: {
        _25 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_fails, [], Some(promoted[3])) }
        _5 = _25;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
        _4 = _5;                         // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_fails, [], Some(promoted[2])) }
        _8 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _23 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_fails, [], Some(promoted[1])) }
        _10 = _23;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i32, val: Unevaluated(it_fails, [], Some(promoted[0])) }
        _11 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _9 = (move _10, move _11);       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _12 = (_9.0: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _13 = (_9.1: &i32);              // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _14 = const core::panicking::AssertKind::Eq; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _12;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _13;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<i32, i32>(move _16, move _17, move _19, move _21); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i32, &'b i32, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i32, i32>}, val: Value(<ZST>) }
    }
}

promoted[0] in it_fails: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:23: 33:24

    bb0: {
        _1 = const 4_i32;                // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:23: 33:24
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in it_fails: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i32;                     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:16: 33:21
    let mut _2: (i32, bool);             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:16: 33:21

    bb0: {
        _2 = CheckedAdd(const 1_i32, const 1_i32); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:16: 33:21
        _1 = move (_2.0: i32);           // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:33:16: 33:21
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in it_fails: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in it_fails: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29

    bb0: {
        _1 = [const "about to fail\n"];  // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:32:14: 32:29
    }
}

const it_writes_to_stdio: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _8: [closure@ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2]; // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _2 = StaticTestName(const "it_writes_to_stdio"); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _4 = test::ShouldPanic::No;      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _8 = [closure@ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2]; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // closure
                                         // + def_id: DefId(0:18 ~ test_panic_abort_nocapture[51a6]::it_writes_to_stdio::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:1: 41:2
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    }
}

fn it_writes_to_stdio::{closure#0}(_1: &[closure@ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:25: 37:25

    bb0: {
        _2 = it_writes_to_stdio() -> bb1; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:25: 37:25
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // + literal: Const { ty: fn() {it_writes_to_stdio}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:37:25: 37:25
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:2: 41:2
    }
}

fn it_writes_to_stdio() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:25: 37:25
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: ();                          // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:5: 39:55
    let mut _10: std::result::Result<(), std::io::Error>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
    let mut _11: &mut std::io::Stdout;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
    let mut _12: std::io::Stdout;        // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:14: 39:31
    let mut _13: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _14: &[&str];                // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    let mut _15: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    let _16: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    let mut _17: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let _20: ();                         // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:5: 40:55
    let mut _21: std::result::Result<(), std::io::Error>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
    let mut _22: &mut std::io::Stderr;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
    let mut _23: std::io::Stderr;        // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:14: 40:31
    let mut _24: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _25: &[&str];                // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    let mut _26: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    let _27: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    let mut _28: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _29: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let _30: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _31: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _32: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    let mut _33: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _34: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    let mut _35: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _36: &[&str; 1];             // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28

    bb0: {
        _36 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[5])) }
        _5 = _36;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
        _4 = _5;                         // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
        _35 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[4])) }
        _8 = _35;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = stdout() -> bb3;           // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:14: 39:31
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:39:14: 39:29
                                         // + literal: Const { ty: fn() -> Stdout {stdout}, val: Value(<ZST>) }
    }

    bb3: {
        _11 = &mut _12;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
        _34 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[3])) }
        _16 = _34;                       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
        _15 = _16;                       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
        _14 = move _15 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
        _33 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[2])) }
        _19 = _33;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _18 = _19;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _17 = move _18 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _13 = Arguments::<'_>::new_v1(move _14, move _17) -> bb4; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb4: {
        _10 = <Stdout as std::io::Write>::write_fmt(move _11, move _13) -> bb5; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:14: 558:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Stdout, Arguments<'b>) -> Result<(), std::io::Error> {<Stdout as std::io::Write>::write_fmt}, val: Value(<ZST>) }
    }

    bb5: {
        _9 = Result::<(), std::io::Error>::unwrap(move _10) -> bb6; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:5: 39:55
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:39:47: 39:53
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb6: {
        _23 = stderr() -> bb7;           // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:14: 40:31
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:40:14: 40:29
                                         // + literal: Const { ty: fn() -> Stderr {stderr}, val: Value(<ZST>) }
    }

    bb7: {
        _22 = &mut _23;                  // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
        _32 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[1])) }
        _27 = _32;                       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
        _26 = _27;                       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
        _25 = move _26 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
        _31 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(it_writes_to_stdio, [], Some(promoted[0])) }
        _30 = _31;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _29 = _30;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _28 = move _29 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _24 = Arguments::<'_>::new_v1(move _25, move _28) -> bb8; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _21 = <Stderr as std::io::Write>::write_fmt(move _22, move _24) -> bb9; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:9: 558:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:14: 558:23
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a mut Stderr, Arguments<'b>) -> Result<(), std::io::Error> {<Stderr as std::io::Write>::write_fmt}, val: Value(<ZST>) }
    }

    bb9: {
        _20 = Result::<(), std::io::Error>::unwrap(move _21) -> bb10; // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:5: 40:55
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:40:47: 40:53
                                         // + literal: Const { ty: fn(Result<(), std::io::Error>) {Result::<(), std::io::Error>::unwrap}, val: Value(<ZST>) }
    }

    bb10: {
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:41:2: 41:2
    }
}

promoted[0] in it_writes_to_stdio: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    }
}

promoted[1] in it_writes_to_stdio: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45

    bb0: {
        _1 = [const "testing321\n"];     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:40:33: 40:45
    }
}

promoted[2] in it_writes_to_stdio: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:558:24: 558:57
    }
}

promoted[3] in it_writes_to_stdio: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45

    bb0: {
        _1 = [const "testing123\n"];     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:39:33: 39:45
    }
}

promoted[4] in it_writes_to_stdio: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[5] in it_writes_to_stdio: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28

    bb0: {
        _1 = [const "hello, world\n"];   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
        return;                          // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:38:14: 38:28
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at no-location
    let mut _1: &[&test::TestDescAndFn]; // in scope 0 at no-location
    let mut _2: &[&test::TestDescAndFn; 4]; // in scope 0 at no-location
    let _3: &[&test::TestDescAndFn; 4];  // in scope 0 at no-location
    let mut _4: &[&test::TestDescAndFn; 4]; // in scope 0 at no-location

    bb0: {
        _4 = const _;                    // scope 0 at no-location
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &[&TestDescAndFn; 4], val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _4;                         // scope 0 at no-location
        _2 = _3;                         // scope 0 at no-location
        _1 = move _2 as &[&test::TestDescAndFn] (Pointer(Unsize)); // scope 0 at no-location
        _0 = test_main_static(move _1) -> bb1; // scope 0 at no-location
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b TestDescAndFn]) {test_main_static}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at no-location
    }
}

promoted[0] in main: &[&TestDescAndFn; 4] = {
    let mut _0: &[&test::TestDescAndFn; 4]; // return place in scope 0 at no-location
    let mut _1: [&test::TestDescAndFn; 4]; // in scope 0 at no-location
    let mut _2: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _3: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _4: test::TestDescAndFn;     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
    let mut _5: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _6: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _7: test::TestDescAndFn;     // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
    let mut _8: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _9: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _10: test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
    let mut _11: &test::TestDescAndFn;   // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _12: &test::TestDescAndFn;   // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
    let mut _13: test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2

    bb0: {
        _4 = const _;                    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(it_fails, [], None) }
        _3 = &_4;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _2 = &(*_3);                     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:31:1: 34:2
        _7 = const _;                    // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(it_panics, [], None) }
        _6 = &_7;                        // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _5 = &(*_6);                     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:25:1: 28:2
        _10 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(it_works, [], None) }
        _9 = &_10;                       // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _8 = &(*_9);                     // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:18:1: 21:2
        _13 = const _;                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(it_writes_to_stdio, [], None) }
        _12 = &_13;                      // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _11 = &(*_12);                   // scope 0 at ui/test-attrs/test-panic-abort-nocapture.rs:37:1: 41:2
        _1 = [move _2, move _5, move _8, move _11]; // scope 0 at no-location
        _0 = &_1;                        // scope 0 at no-location
        return;                          // scope 0 at no-location
    }
}
