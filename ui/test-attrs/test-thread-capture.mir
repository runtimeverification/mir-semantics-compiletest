// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const thready_pass: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _8: [closure@ui/test-attrs/test-thread-capture.rs:11:1: 20:2]; // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _2 = StaticTestName(const "thready_pass"); // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _4 = test::ShouldPanic::No;      // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _8 = [closure@ui/test-attrs/test-thread-capture.rs:11:1: 20:2]; // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // closure
                                         // + def_id: DefId(0:5 ~ test_thread_capture[00fa]::thready_pass::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:20:1: 20:2
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    }
}

fn thready_pass::{closure#0}(_1: &[closure@ui/test-attrs/test-thread-capture.rs:11:1: 20:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:19: 11:19

    bb0: {
        _2 = thready_pass() -> bb1;      // scope 0 at ui/test-attrs/test-thread-capture.rs:11:19: 11:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // + literal: Const { ty: fn() {thready_pass}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:11:19: 11:19
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:20:2: 20:2
    }
}

fn thready_pass() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:11:19: 11:19
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: ();                          // in scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 18:14
    let mut _10: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 17:12
    let mut _11: std::thread::JoinHandle<()>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 16:7
    let mut _12: [closure@ui/test-attrs/test-thread-capture.rs:13:24: 13:26]; // in scope 0 at ui/test-attrs/test-thread-capture.rs:13:24: 16:6
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    let mut _16: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    let _17: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _22: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    let mut _23: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19

    bb0: {
        _24 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:12:14: 12:19
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_pass, [], Some(promoted[3])) }
        _5 = _24;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
        _4 = _5;                         // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
        _23 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_pass, [], Some(promoted[2])) }
        _8 = _23;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = spawn::<[closure@ui/test-attrs/test-thread-capture.rs:13:24: 13:26], ()>(move _12) -> bb3; // scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 16:7
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:13:5: 13:23
                                         // + literal: Const { ty: fn([closure@ui/test-attrs/test-thread-capture.rs:13:24: 13:26]) -> JoinHandle<()> {spawn::<[closure@ui/test-attrs/test-thread-capture.rs:13:24: 13:26], ()>}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = JoinHandle::<()>::join(move _11) -> bb4; // scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 17:12
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:17:6: 17:10
                                         // + literal: Const { ty: fn(JoinHandle<()>) -> Result<(), Box<(dyn Any + Send + 'static)>> {JoinHandle::<()>::join}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = Result::<(), Box<dyn Any + Send>>::unwrap(move _10) -> bb5; // scope 0 at ui/test-attrs/test-thread-capture.rs:13:5: 18:14
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:18:6: 18:12
                                         // + literal: Const { ty: fn(Result<(), Box<dyn Any + Send>>) {Result::<(), Box<dyn Any + Send>>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _22 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:19:14: 19:19
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_pass, [], Some(promoted[1])) }
        _17 = _22;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
        _16 = _17;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
        _21 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_pass, [], Some(promoted[0])) }
        _20 = _21;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb6; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _print(move _14) -> bb7;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:20:2: 20:2
    }
}

promoted[0] in thready_pass: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in thready_pass: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19

    bb0: {
        _1 = [const "fum\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:19:14: 19:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:19:14: 19:19
    }
}

promoted[2] in thready_pass: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in thready_pass: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19

    bb0: {
        _1 = [const "fee\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:12:14: 12:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:12:14: 12:19
    }
}

fn thready_pass::{closure#0}(_1: [closure@ui/test-attrs/test-thread-capture.rs:13:24: 13:26]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:13:27: 13:27
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
    let mut _5: &[&str; 1];              // in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
    let _6: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _11: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[&str];                // in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    let mut _13: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    let _14: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _17: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23

    bb0: {
        _21 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:14:18: 14:23
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_pass::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[3])) }
        _6 = _21;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
        _5 = _6;                         // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
        _20 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_pass::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _9 = _20;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _print(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _19 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:15:18: 15:23
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_pass::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _14 = _19;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
        _13 = _14;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
        _12 = move _13 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
        _18 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_pass::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = _17;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = move _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = Arguments::<'_>::new_v1(move _12, move _15) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = _print(move _11) -> bb4;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:16:6: 16:6
    }
}

promoted[0] in thready_pass::{closure#0}: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in thready_pass::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23

    bb0: {
        _1 = [const "foe\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:15:18: 15:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:15:18: 15:23
    }
}

promoted[2] in thready_pass::{closure#0}: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in thready_pass::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23

    bb0: {
        _1 = [const "fie\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:14:18: 14:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:14:18: 14:23
    }
}

const thready_fail: TestDescAndFn = {
    let mut _0: test::TestDescAndFn;     // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _1: test::TestDesc;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _2: test::TestName;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _3: std::option::Option<&str>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _4: test::ShouldPanic;       // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _5: test::TestType;          // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _6: test::TestFn;            // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _7: fn() -> std::result::Result<(), std::string::String>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _8: [closure@ui/test-attrs/test-thread-capture.rs:23:1: 33:2]; // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageLive(_2);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _2 = StaticTestName(const "thready_fail"); // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        StorageLive(_3);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _3 = Option::<&str>::None;       // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageLive(_4);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _4 = test::ShouldPanic::No;      // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageLive(_5);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _5 = test::TestType::Unknown;    // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _1 = TestDesc { name: move _2, ignore: const false, ignore_message: move _3, should_panic: move _4, compile_fail: const false, no_run: const false, test_type: move _5 }; // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageDead(_5);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        StorageDead(_4);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        StorageDead(_3);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        StorageDead(_2);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        StorageLive(_6);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageLive(_7);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageLive(_8);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _8 = [closure@ui/test-attrs/test-thread-capture.rs:23:1: 33:2]; // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // closure
                                         // + def_id: DefId(0:10 ~ test_thread_capture[00fa]::thready_fail::{closure#0})
                                         // + substs: [
                                         //     i8,
                                         //     extern "rust-call" fn(()) -> std::result::Result<(), std::string::String>,
                                         //     (),
                                         // ]
        _7 = move _8 as fn() -> std::result::Result<(), std::string::String> (Pointer(ClosureFnPointer(Normal))); // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageDead(_8);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        _6 = StaticTestFn(move _7);      // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageDead(_7);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        _0 = TestDescAndFn { desc: move _1, testfn: move _6 }; // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        StorageDead(_6);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        StorageDead(_1);                 // scope 0 at ui/test-attrs/test-thread-capture.rs:33:1: 33:2
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    }
}

fn thready_fail::{closure#0}(_1: &[closure@ui/test-attrs/test-thread-capture.rs:23:1: 33:2]) -> Result<(), String> {
    let mut _0: std::result::Result<(), std::string::String>; // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _2: ();                      // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:19: 23:19

    bb0: {
        _2 = thready_fail() -> bb1;      // scope 0 at ui/test-attrs/test-thread-capture.rs:23:19: 23:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // + literal: Const { ty: fn() {thready_fail}, val: Value(<ZST>) }
    }

    bb1: {
        _0 = assert_test_result::<()>(move _2) -> bb2; // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:23:19: 23:19
                                         // + literal: Const { ty: fn(()) -> Result<(), String> {assert_test_result::<()>}, val: Value(<ZST>) }
    }

    bb2: {
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:33:2: 33:2
    }
}

fn thready_fail() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:23:19: 23:19
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
    let mut _4: &[&str; 1];              // in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
    let _5: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: ();                          // in scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 30:14
    let mut _10: std::result::Result<(), std::boxed::Box<dyn std::any::Any + std::marker::Send>>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 29:12
    let mut _11: std::thread::JoinHandle<()>; // in scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 28:7
    let mut _12: [closure@ui/test-attrs/test-thread-capture.rs:25:24: 25:26]; // in scope 0 at ui/test-attrs/test-thread-capture.rs:25:24: 28:6
    let _13: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _14: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _15: &[&str];                // in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    let mut _16: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    let _17: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    let mut _18: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: !;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    let mut _22: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _23: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    let mut _24: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _25: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19

    bb0: {
        _25 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:24:14: 24:19
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_fail, [], Some(promoted[3])) }
        _5 = _25;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
        _4 = _5;                         // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
        _24 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_fail, [], Some(promoted[2])) }
        _8 = _24;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = _print(move _2) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _11 = spawn::<[closure@ui/test-attrs/test-thread-capture.rs:25:24: 25:26], ()>(move _12) -> bb3; // scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 28:7
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:25:5: 25:23
                                         // + literal: Const { ty: fn([closure@ui/test-attrs/test-thread-capture.rs:25:24: 25:26]) -> JoinHandle<()> {spawn::<[closure@ui/test-attrs/test-thread-capture.rs:25:24: 25:26], ()>}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = JoinHandle::<()>::join(move _11) -> bb4; // scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 29:12
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:29:6: 29:10
                                         // + literal: Const { ty: fn(JoinHandle<()>) -> Result<(), Box<(dyn Any + Send + 'static)>> {JoinHandle::<()>::join}, val: Value(<ZST>) }
    }

    bb4: {
        _9 = Result::<(), Box<dyn Any + Send>>::unwrap(move _10) -> bb5; // scope 0 at ui/test-attrs/test-thread-capture.rs:25:5: 30:14
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:30:6: 30:12
                                         // + literal: Const { ty: fn(Result<(), Box<dyn Any + Send>>) {Result::<(), Box<dyn Any + Send>>::unwrap}, val: Value(<ZST>) }
    }

    bb5: {
        _23 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:31:14: 31:19
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_fail, [], Some(promoted[1])) }
        _17 = _23;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
        _16 = _17;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
        _15 = move _16 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
        _22 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_fail, [], Some(promoted[0])) }
        _20 = _22;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _19 = _20;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _18 = move _19 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _14 = Arguments::<'_>::new_v1(move _15, move _18) -> bb6; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        _13 = _print(move _14) -> bb7;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb7: {
        _21 = begin_panic::<&str>(const "explicit panic"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

promoted[0] in thready_fail: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in thready_fail: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19

    bb0: {
        _1 = [const "fum\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:31:14: 31:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:31:14: 31:19
    }
}

promoted[2] in thready_fail: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in thready_fail: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19

    bb0: {
        _1 = [const "fee\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:24:14: 24:19
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:24:14: 24:19
    }
}

fn thready_fail::{closure#0}(_1: [closure@ui/test-attrs/test-thread-capture.rs:25:24: 25:26]) -> () {
    let mut _0: ();                      // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:25:27: 25:27
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
    let mut _5: &[&str; 1];              // in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
    let _6: &[&str; 1];                  // in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _11: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _12: &[&str];                // in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    let mut _13: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    let _14: &[&str; 1];                 // in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    let mut _15: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _17: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _18: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _19: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    let mut _20: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[&str; 1];             // in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23

    bb0: {
        _21 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:26:18: 26:23
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_fail::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[3])) }
        _6 = _21;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
        _5 = _6;                         // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
        _20 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_fail::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _9 = _20;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _print(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _19 = const _;                   // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:27:18: 27:23
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(thready_fail::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _14 = _19;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
        _13 = _14;                       // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
        _12 = move _13 as &[&str] (Pointer(Unsize)); // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
        _18 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(thready_fail::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _17 = _18;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = _17;                       // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _15 = move _16 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = Arguments::<'_>::new_v1(move _12, move _15) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = _print(move _11) -> bb4;   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:28:6: 28:6
    }
}

promoted[0] in thready_fail::{closure#0}: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in thready_fail::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23

    bb0: {
        _1 = [const "foe\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:27:18: 27:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:27:18: 27:23
    }
}

promoted[2] in thready_fail::{closure#0}: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[3] in thready_fail::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
    let mut _1: [&str; 1];               // in scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23

    bb0: {
        _1 = [const "fie\n"];            // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:26:18: 26:23
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
        return;                          // scope 0 at ui/test-attrs/test-thread-capture.rs:26:18: 26:23
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at no-location
    let mut _1: &[&test::TestDescAndFn]; // in scope 0 at no-location
    let mut _2: &[&test::TestDescAndFn; 2]; // in scope 0 at no-location
    let _3: &[&test::TestDescAndFn; 2];  // in scope 0 at no-location
    let mut _4: &[&test::TestDescAndFn; 2]; // in scope 0 at no-location

    bb0: {
        _4 = const _;                    // scope 0 at no-location
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &[&TestDescAndFn; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _3 = _4;                         // scope 0 at no-location
        _2 = _3;                         // scope 0 at no-location
        _1 = move _2 as &[&test::TestDescAndFn] (Pointer(Unsize)); // scope 0 at no-location
        _0 = test_main_static(move _1) -> bb1; // scope 0 at no-location
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a [&'b TestDescAndFn]) {test_main_static}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at no-location
    }
}

promoted[0] in main: &[&TestDescAndFn; 2] = {
    let mut _0: &[&test::TestDescAndFn; 2]; // return place in scope 0 at no-location
    let mut _1: [&test::TestDescAndFn; 2]; // in scope 0 at no-location
    let mut _2: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _3: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _4: test::TestDescAndFn;     // in scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
    let mut _5: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _6: &test::TestDescAndFn;    // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
    let mut _7: test::TestDescAndFn;     // in scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2

    bb0: {
        _4 = const _;                    // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:23:1: 33:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(thready_fail, [], None) }
        _3 = &_4;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _2 = &(*_3);                     // scope 0 at ui/test-attrs/test-thread-capture.rs:23:1: 33:2
        _7 = const _;                    // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // mir::Constant
                                         // + span: ui/test-attrs/test-thread-capture.rs:11:1: 20:2
                                         // + literal: Const { ty: TestDescAndFn, val: Unevaluated(thready_pass, [], None) }
        _6 = &_7;                        // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _5 = &(*_6);                     // scope 0 at ui/test-attrs/test-thread-capture.rs:11:1: 20:2
        _1 = [move _2, move _5];         // scope 0 at no-location
        _0 = &_1;                        // scope 0 at no-location
        return;                          // scope 0 at no-location
    }
}
