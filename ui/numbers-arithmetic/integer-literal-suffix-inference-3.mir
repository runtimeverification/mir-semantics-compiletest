// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:2:11: 2:11
    let _1: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _2: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _3: &[&str];                 // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
    let mut _4: &[&str; 2];              // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
    let _5: &[&str; 2];                  // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
    let mut _6: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _7: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
    let mut _11: &usize;                 // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
    let _12: &usize;                     // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
    let _13: usize;                      // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
    let mut _14: &i32;                   // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
    let _15: &i32;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
    let mut _16: &i32;                   // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
    let mut _17: &[&str; 2];             // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18

    bb0: {
        _17 = const _;                   // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _5 = _17;                        // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
        _4 = _5;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
        _3 = move _4 as &[&str] (Pointer(Unsize)); // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
        _16 = const _;                   // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _15 = _16;                       // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
        _14 = _15;                       // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
        _13 = std::mem::size_of_val::<i32>(move _14) -> bb1; // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:41
                                         // + literal: Const { ty: for<'a> fn(&'a i32) -> usize {std::mem::size_of_val::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _12 = &_13;                      // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
        _11 = _12;                       // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
        _10 = core::fmt::ArgumentV1::<'_>::new_display::<usize>(move _11) -> bb2; // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:20: 3:45
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b usize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<usize>}, val: Value(<ZST>) }
    }

    bb2: {
        _9 = [move _10];                 // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = &_9;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = _8;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _6 = move _7 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _2 = Arguments::<'_>::new_v1(move _3, move _6) -> bb3; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _1 = _print(move _2) -> bb4;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:4:2: 4:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
    let mut _1: i32;                     // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:43: 3:44

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:43: 3:44
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:42: 3:44
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
    let mut _1: [&str; 2];               // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference-3.rs:3:14: 3:18
    }
}
