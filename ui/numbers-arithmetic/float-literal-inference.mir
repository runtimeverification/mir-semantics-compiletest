// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:6:15: 6:15
    let _1: f32;                         // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:7:9: 7:10
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
    let mut _5: &[&str; 2];              // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
    let _6: &[&str; 2];                  // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _11: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
    let mut _12: &f32;                   // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
    let _13: &f32;                       // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
    let _15: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _16: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[&str];                // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
    let mut _18: &[&str; 2];             // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
    let _19: &[&str; 2];                 // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
    let mut _20: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _21: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _22: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _23: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _24: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
    let mut _25: &f64;                   // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
    let _26: &f64;                       // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
    let _28: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _29: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: &[&str];                // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
    let mut _31: &[&str; 2];             // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
    let _32: &[&str; 2];                 // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
    let mut _33: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _34: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _35: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _36: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _37: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
    let mut _38: &f64;                   // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
    let _39: &f64;                       // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:7:9: 7:10
        let _14: f64;                    // in scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:9:9: 9:10
        let mut _42: &[&str; 2];         // in scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
        scope 2 {
            debug y => _14;              // in scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:9:9: 9:10
            let _27: S;                  // in scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:11:9: 11:10
            let mut _41: &[&str; 2];     // in scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
            scope 3 {
                debug z => _27;          // in scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:11:9: 11:10
                let mut _40: &[&str; 2]; // in scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
            }
        }
    }

    bb0: {
        _1 = const 4f32;                 // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:7:18: 7:21
        _42 = const _;                   // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[2])) }
        _6 = _42;                        // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
        _5 = _6;                         // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
        _13 = &_1;                       // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
        _12 = _13;                       // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
        _11 = core::fmt::ArgumentV1::<'_>::new_display::<f32>(move _12) -> bb1; // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:8:20: 8:21
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: for<'b> fn(&'b f32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<f32>}, val: Value(<ZST>) }
    }

    bb1: {
        _10 = [move _11];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = &_10;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb2; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb2: {
        _2 = _print(move _3) -> bb3;     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb3: {
        _14 = const 64f64;               // scope 1 at ui/numbers-arithmetic/float-literal-inference.rs:9:18: 9:22
        _41 = const _;                   // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _19 = _41;                       // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
        _18 = _19;                       // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
        _17 = move _18 as &[&str] (Pointer(Unsize)); // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
        _26 = &_14;                      // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
        _25 = _26;                       // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
        _24 = core::fmt::ArgumentV1::<'_>::new_display::<f64>(move _25) -> bb4; // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:10:20: 10:21
                                         // + user_ty: UserType(7)
                                         // + literal: Const { ty: for<'b> fn(&'b f64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<f64>}, val: Value(<ZST>) }
    }

    bb4: {
        _23 = [move _24];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _22 = &_23;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _21 = _22;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _20 = move _21 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _16 = Arguments::<'_>::new_v1(move _17, move _20) -> bb5; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(6)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = _print(move _16) -> bb6;   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb6: {
        _27 = const S {{ z: 1f64 }};     // scope 2 at ui/numbers-arithmetic/float-literal-inference.rs:11:13: 11:25
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:11:13: 11:25
                                         // + literal: Const { ty: S, val: Value(Scalar(0x3ff0000000000000)) }
        _40 = const _;                   // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _32 = _40;                       // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
        _31 = _32;                       // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
        _30 = move _31 as &[&str] (Pointer(Unsize)); // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
        _39 = &(_27.0: f64);             // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
        _38 = _39;                       // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
        _37 = core::fmt::ArgumentV1::<'_>::new_display::<f64>(move _38) -> bb7; // scope 3 at ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:12:20: 12:23
                                         // + user_ty: UserType(9)
                                         // + literal: Const { ty: for<'b> fn(&'b f64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<f64>}, val: Value(<ZST>) }
    }

    bb7: {
        _36 = [move _37];                // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _35 = &_36;                      // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _34 = _35;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _33 = move _34 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _29 = Arguments::<'_>::new_v1(move _30, move _33) -> bb8; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(8)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb8: {
        _28 = _print(move _29) -> bb9;   // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb9: {
        return;                          // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:13:2: 13:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
    let mut _1: [&str; 2];               // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
        return;                          // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:12:14: 12:18
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
    let mut _1: [&str; 2];               // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
        return;                          // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:10:14: 10:18
    }
}

promoted[2] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
    let mut _1: [&str; 2];               // in scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
        return;                          // scope 0 at ui/numbers-arithmetic/float-literal-inference.rs:8:14: 8:18
    }
}
