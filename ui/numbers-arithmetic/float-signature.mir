// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/float-signature.rs:4:15: 4:15
    let _1: f64;                         // in scope 0 at ui/numbers-arithmetic/float-signature.rs:6:9: 6:10
    let mut _3: f64;                     // in scope 0 at ui/numbers-arithmetic/float-signature.rs:7:22: 7:23
    let _4: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _5: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _6: &[&str];                 // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
    let mut _7: &[&str; 2];              // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
    let _8: &[&str; 2];                  // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
    let mut _9: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _10: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _11: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _12: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _13: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
    let mut _14: &f64;                   // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
    let _15: &f64;                       // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
    scope 1 {
        debug n => _1;                   // in scope 1 at ui/numbers-arithmetic/float-signature.rs:6:9: 6:10
        let _2: f64;                     // in scope 1 at ui/numbers-arithmetic/float-signature.rs:7:9: 7:10
        scope 2 {
            debug m => _2;               // in scope 2 at ui/numbers-arithmetic/float-signature.rs:7:9: 7:10
            let mut _16: &[&str; 2];     // in scope 2 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
        }
    }

    bb0: {
        _1 = const 0.10000000000000001f64; // scope 0 at ui/numbers-arithmetic/float-signature.rs:6:18: 6:21
        _3 = const 0.10000000000000001f64; // scope 1 at ui/numbers-arithmetic/float-signature.rs:7:22: 7:23
        _2 = foo(move _3) -> bb1;        // scope 1 at ui/numbers-arithmetic/float-signature.rs:7:18: 7:24
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-signature.rs:7:18: 7:21
                                         // + literal: Const { ty: fn(f64) -> f64 {foo}, val: Value(<ZST>) }
    }

    bb1: {
        _16 = const _;                   // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[0])) }
        _8 = _16;                        // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
        _7 = _8;                         // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
        _6 = move _7 as &[&str] (Pointer(Unsize)); // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
        _15 = &_2;                       // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
        _14 = _15;                       // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
        _13 = core::fmt::ArgumentV1::<'_>::new_display::<f64>(move _14) -> bb2; // scope 2 at ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-signature.rs:8:20: 8:21
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b f64) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<f64>}, val: Value(<ZST>) }
    }

    bb2: {
        _12 = [move _13];                // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _11 = &_12;                      // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _10 = _11;                       // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _9 = move _10 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _5 = Arguments::<'_>::new_v1(move _6, move _9) -> bb3; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = _print(move _5) -> bb4;     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb4: {
        return;                          // scope 0 at ui/numbers-arithmetic/float-signature.rs:9:2: 9:2
    }
}

promoted[0] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
    let mut _1: [&str; 2];               // in scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18

    bb0: {
        _1 = [const "", const "\n"];     // scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
        return;                          // scope 0 at ui/numbers-arithmetic/float-signature.rs:8:14: 8:18
    }
}

fn foo(_1: f64) -> f64 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/float-signature.rs:5:12: 5:13
    let mut _0: f64;                     // return place in scope 0 at ui/numbers-arithmetic/float-signature.rs:5:23: 5:26
    let mut _2: f64;                     // in scope 0 at ui/numbers-arithmetic/float-signature.rs:5:36: 5:37

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/float-signature.rs:5:36: 5:37
        _0 = Add(move _2, const 0.12345f64); // scope 0 at ui/numbers-arithmetic/float-signature.rs:5:36: 5:47
        return;                          // scope 0 at ui/numbers-arithmetic/float-signature.rs:5:50: 5:50
    }
}
