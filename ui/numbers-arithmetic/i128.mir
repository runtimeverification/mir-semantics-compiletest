// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/i128.rs:9:11: 9:11
    let _1: i128;                        // in scope 0 at ui/numbers-arithmetic/i128.rs:10:9: 10:10
    let mut _2: (&i128, &i128);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _3: &i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _4: &i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _5: i128;                        // in scope 0 at ui/numbers-arithmetic/i128.rs:11:19: 11:21
    let mut _6: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:11:20: 11:21
    let mut _9: bool;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _11: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _12: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _14: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _15: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _16: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _17: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _18: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _19: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _20: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: (&i128, &i128);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _23: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _24: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _27: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _28: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _29: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _30: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _32: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _33: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _34: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _35: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _36: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _37: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _38: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _40: (&i128, &i128);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _41: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _42: i128;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:15:16: 15:21
    let mut _43: (i128, bool);           // in scope 0 at ui/numbers-arithmetic/i128.rs:15:16: 15:21
    let mut _44: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _47: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _48: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _49: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _50: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _52: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _53: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _54: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _55: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _56: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _57: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _58: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _59: (&i128, &i128);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _60: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _61: i128;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:29
    let mut _62: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:25
    let mut _63: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:21
    let mut _64: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:17
    let mut _65: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:20: 16:21
    let mut _66: (i128, bool);           // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:21
    let mut _67: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:24: 16:25
    let mut _68: (i128, bool);           // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:25
    let mut _69: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:16:28: 16:29
    let mut _70: (i128, bool);           // in scope 0 at ui/numbers-arithmetic/i128.rs:16:16: 16:29
    let mut _71: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _74: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _75: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _76: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _77: i128;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _79: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _80: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _81: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _82: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _83: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _84: &i128;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _85: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _86: (&i128, &i128);         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _87: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _88: i128;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:17:16: 17:23
    let mut _89: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:16: 17:18
    let mut _90: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:17: 17:18
    let mut _91: bool;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:16: 17:18
    let mut _92: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:21: 17:23
    let mut _93: i128;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:22: 17:23
    let mut _94: bool;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:17:21: 17:23
    let mut _95: (i128, bool);           // in scope 0 at ui/numbers-arithmetic/i128.rs:17:16: 17:23
    let mut _96: &i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _99: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _100: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _101: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _102: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _104: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _105: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _106: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _107: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _108: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _109: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _110: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _111: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _112: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _113: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:33
    let mut _114: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:28
    let mut _115: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:23
    let mut _116: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:18
    let mut _117: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:17: 18:18
    let mut _118: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:18
    let mut _119: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:21: 18:23
    let mut _120: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:22: 18:23
    let mut _121: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:21: 18:23
    let mut _122: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:23
    let mut _123: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:26: 18:28
    let mut _124: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:27: 18:28
    let mut _125: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:26: 18:28
    let mut _126: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:28
    let mut _127: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:31: 18:33
    let mut _128: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:32: 18:33
    let mut _129: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:18:31: 18:33
    let mut _130: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:18:16: 18:33
    let mut _131: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _134: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _135: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _136: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _137: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _139: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _140: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _141: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _142: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _143: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _144: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _145: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _146: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _147: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _148: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:33
    let mut _149: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:28
    let mut _150: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:23
    let mut _151: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:18
    let mut _152: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:17: 19:18
    let mut _153: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:18
    let mut _154: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:21: 19:23
    let mut _155: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:22: 19:23
    let mut _156: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:21: 19:23
    let mut _157: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:23
    let mut _158: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:26: 19:28
    let mut _159: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:27: 19:28
    let mut _160: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:26: 19:28
    let mut _161: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:28
    let mut _162: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:31: 19:33
    let mut _163: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:32: 19:33
    let mut _164: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:19:31: 19:33
    let mut _165: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:19:16: 19:33
    let mut _166: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _169: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _170: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _171: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _172: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _174: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _175: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _176: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _177: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _178: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _179: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _180: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _182: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _183: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _184: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:21:16: 21:21
    let mut _185: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:21:16: 21:21
    let mut _186: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _189: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _190: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _191: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _192: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _194: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _195: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _196: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _197: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _198: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _199: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _200: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _201: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _202: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _203: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _204: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:22:19: 22:24
    let mut _205: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:22:19: 22:20
    let mut _206: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:22:23: 22:24
    let mut _207: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:22:19: 22:24
    let mut _210: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _211: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _212: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _213: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _215: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _216: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _217: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _218: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _219: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _220: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _221: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _222: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _223: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _224: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _225: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:23:59: 23:64
    let mut _226: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:23:59: 23:60
    let mut _227: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:23:63: 23:64
    let mut _228: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:23:59: 23:64
    let mut _231: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _232: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _233: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _234: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _236: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _237: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _238: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _239: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _240: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _241: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _242: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _243: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _244: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _245: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _246: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:25:16: 25:59
    let mut _247: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:25:16: 25:17
    let mut _248: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:25:16: 25:59
    let mut _251: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _252: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _253: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _254: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _256: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _257: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _258: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _259: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _260: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _261: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _262: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _263: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _264: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _265: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _266: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:26:57: 26:63
    let mut _267: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:26:57: 26:58
    let mut _270: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _271: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _272: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _273: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _275: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _276: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _277: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _278: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _279: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _280: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _281: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _282: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _283: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _284: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:27:16: 27:18
    let mut _285: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:17: 27:18
    let mut _286: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:16: 27:18
    let mut _287: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _288: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
    let mut _289: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:20: 27:21
    let mut _290: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
    let mut _291: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
    let mut _292: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
    let mut _295: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _296: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _297: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _298: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _300: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _301: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _302: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _303: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _304: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _305: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _306: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _307: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _308: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _309: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _310: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:28:38: 28:45
    let mut _311: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:28:38: 28:39
    let mut _312: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:28:38: 28:45
    let mut _315: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _316: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _317: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _318: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _320: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _321: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _322: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _323: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _324: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _325: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _326: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _327: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _328: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _329: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _330: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:29:60: 29:67
    let mut _331: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:29:60: 29:61
    let mut _332: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:29:60: 29:67
    let mut _335: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _336: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _337: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _338: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _340: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _341: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _342: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _343: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _344: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _345: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _346: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _347: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:30:5: 30:19
    let mut _348: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:30:13: 30:18
    let mut _349: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:30:13: 30:14
    let mut _350: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:30:17: 30:18
    let mut _351: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:30:5: 30:19
    let mut _352: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:31:5: 31:19
    let mut _353: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:31:13: 31:18
    let mut _354: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:31:13: 31:14
    let mut _355: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:31:17: 31:18
    let mut _356: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:31:5: 31:19
    let mut _357: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:32:5: 32:19
    let mut _358: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:32:13: 32:18
    let mut _359: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:32:13: 32:14
    let mut _360: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:32:17: 32:18
    let mut _361: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:32:5: 32:19
    let mut _362: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _363: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _364: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:33:16: 33:24
    let mut _365: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:33:16: 33:17
    let mut _366: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _369: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _370: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _371: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _372: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _374: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _375: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _376: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _377: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _378: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _379: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _380: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _381: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _382: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _383: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:34:16: 34:24
    let mut _384: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:34:16: 34:17
    let mut _385: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _388: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _389: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _390: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _391: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _393: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _394: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _395: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _396: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _397: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _398: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _399: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _400: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _401: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _402: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:35:16: 35:24
    let mut _403: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:35:16: 35:17
    let mut _404: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _407: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _408: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _409: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _410: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _412: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _413: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _414: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _415: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _416: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _417: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _418: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _419: (&u128, &u128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _420: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _421: u128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:36:16: 36:25
    let mut _422: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:36:16: 36:17
    let mut _423: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _426: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _427: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _428: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _429: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _431: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _432: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _433: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _434: &u128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _435: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _436: &u128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _437: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _438: (&u128, &u128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _439: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _440: u128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:37:16: 37:26
    let mut _441: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:37:16: 37:18
    let mut _442: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:37:17: 37:18
    let mut _443: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:37:16: 37:18
    let mut _444: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _447: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _448: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _449: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _450: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _452: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _453: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _454: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _455: &u128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _456: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _457: &u128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _458: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _459: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _460: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _461: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:38:16: 38:35
    let mut _462: f64;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:38:16: 38:27
    let mut _463: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:38:17: 38:19
    let mut _464: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:38:18: 38:19
    let mut _465: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:38:17: 38:19
    let mut _466: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _467: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:38:37: 38:39
    let mut _468: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:38:38: 38:39
    let mut _469: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:38:37: 38:39
    let mut _472: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _473: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _474: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _475: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _477: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _478: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _479: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _480: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _481: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _482: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _483: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _484: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _485: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _486: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:39:16: 39:35
    let mut _487: f32;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:39:16: 39:27
    let mut _488: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:39:17: 39:19
    let mut _489: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:39:18: 39:19
    let mut _490: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:39:17: 39:19
    let mut _491: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _492: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:39:37: 39:39
    let mut _493: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:39:38: 39:39
    let mut _494: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:39:37: 39:39
    let mut _497: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _498: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _499: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _500: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _502: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _503: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _504: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _505: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _506: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _507: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _508: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _509: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _510: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _511: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:40:16: 40:42
    let mut _512: f64;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:40:16: 40:34
    let mut _513: f64;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:40:17: 40:26
    let mut _514: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:17: 40:19
    let mut _515: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:18: 40:19
    let mut _516: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:17: 40:19
    let mut _517: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _518: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:40:44: 40:51
    let mut _519: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:44: 40:46
    let mut _520: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:45: 40:46
    let mut _521: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:40:44: 40:46
    let mut _522: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:40:44: 40:51
    let mut _525: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _526: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _527: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _528: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _530: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _531: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _532: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _533: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _534: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _535: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _536: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _537: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _538: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _539: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:41:16: 41:42
    let mut _540: f32;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:41:16: 41:34
    let mut _541: f32;                   // in scope 0 at ui/numbers-arithmetic/i128.rs:41:17: 41:26
    let mut _542: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:17: 41:19
    let mut _543: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:18: 41:19
    let mut _544: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:17: 41:19
    let mut _545: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _546: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:41:44: 41:51
    let mut _547: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:44: 41:46
    let mut _548: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:45: 41:46
    let mut _549: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:41:44: 41:46
    let mut _550: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:41:44: 41:51
    let mut _553: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _554: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _555: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _556: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _558: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _559: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _560: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _561: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _562: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _563: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _564: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _566: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _567: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _568: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _569: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:44:19: 44:21
    let mut _570: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:44:20: 44:21
    let mut _573: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _574: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _575: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _576: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _578: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _579: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _580: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _581: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _582: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _583: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _584: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _586: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _587: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _588: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _591: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _592: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _593: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _594: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _596: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _597: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _598: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _599: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _600: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _601: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _602: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _604: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _605: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _606: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:48:16: 48:21
    let mut _607: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:48:16: 48:17
    let mut _608: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:48:20: 48:21
    let mut _609: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:48:16: 48:21
    let mut _610: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _613: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _614: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _615: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _616: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _618: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _619: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _620: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _621: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _622: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _623: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _624: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _625: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _626: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _627: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:29
    let mut _628: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:25
    let mut _629: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:21
    let mut _630: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:17
    let mut _631: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:20: 49:21
    let mut _632: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:21
    let mut _633: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:24: 49:25
    let mut _634: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:25
    let mut _635: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:49:28: 49:29
    let mut _636: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:49:16: 49:29
    let mut _637: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _640: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _641: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _642: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _643: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _645: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _646: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _647: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _648: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _649: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _650: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _651: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _652: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _653: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _654: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:50:16: 50:23
    let mut _655: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:16: 50:18
    let mut _656: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:17: 50:18
    let mut _657: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:16: 50:18
    let mut _658: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:21: 50:23
    let mut _659: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:22: 50:23
    let mut _660: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:50:21: 50:23
    let mut _661: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:50:16: 50:23
    let mut _662: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _665: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _666: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _667: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _668: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _670: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _671: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _672: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _673: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _674: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _675: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _676: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _677: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _678: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _679: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:33
    let mut _680: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:28
    let mut _681: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:23
    let mut _682: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:18
    let mut _683: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:17: 51:18
    let mut _684: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:18
    let mut _685: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:21: 51:23
    let mut _686: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:22: 51:23
    let mut _687: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:21: 51:23
    let mut _688: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:23
    let mut _689: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:26: 51:28
    let mut _690: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:27: 51:28
    let mut _691: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:26: 51:28
    let mut _692: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:28
    let mut _693: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:31: 51:33
    let mut _694: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:32: 51:33
    let mut _695: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:51:31: 51:33
    let mut _696: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:51:16: 51:33
    let mut _697: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _700: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _701: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _702: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _703: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _705: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _706: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _707: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _708: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _709: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _710: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _711: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _712: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _713: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _714: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:33
    let mut _715: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:28
    let mut _716: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:23
    let mut _717: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:18
    let mut _718: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:17: 52:18
    let mut _719: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:18
    let mut _720: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:21: 52:23
    let mut _721: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:22: 52:23
    let mut _722: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:21: 52:23
    let mut _723: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:23
    let mut _724: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:26: 52:28
    let mut _725: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:27: 52:28
    let mut _726: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:26: 52:28
    let mut _727: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:28
    let mut _728: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:31: 52:33
    let mut _729: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:32: 52:33
    let mut _730: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:52:31: 52:33
    let mut _731: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:52:16: 52:33
    let mut _732: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _735: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _736: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _737: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _738: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _740: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _741: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _742: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _743: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _744: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _745: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _746: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _748: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _749: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _750: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:54:16: 54:21
    let mut _751: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:54:16: 54:17
    let mut _752: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:54:20: 54:21
    let mut _753: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:54:16: 54:21
    let mut _754: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _757: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _758: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _759: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _760: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _762: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _763: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _764: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _765: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _766: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _767: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _768: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _769: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _770: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _771: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _772: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:55:19: 55:24
    let mut _773: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:55:19: 55:20
    let mut _774: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:55:23: 55:24
    let mut _775: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:55:19: 55:24
    let mut _778: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _779: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _780: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _781: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _783: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _784: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _785: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _786: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _787: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _788: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _789: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _790: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _791: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _792: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _793: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:56:59: 56:64
    let mut _794: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:56:59: 56:60
    let mut _795: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:56:63: 56:64
    let mut _796: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:56:59: 56:64
    let mut _799: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _800: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _801: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _802: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _804: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _805: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _806: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _807: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _808: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _809: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _810: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _811: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _812: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _813: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _814: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:58:16: 58:59
    let mut _815: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:58:16: 58:17
    let mut _816: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:58:16: 58:59
    let mut _819: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _820: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _821: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _822: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _824: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _825: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _826: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _827: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _828: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _829: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _830: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _831: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _832: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _833: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _834: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:59:57: 59:63
    let mut _835: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:59:57: 59:58
    let mut _838: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _839: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _840: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _841: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _843: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _844: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _845: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _846: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _847: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _848: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _849: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _850: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _851: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _852: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:60:16: 60:18
    let mut _853: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:17: 60:18
    let mut _854: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:16: 60:18
    let mut _855: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _856: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
    let mut _857: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:20: 60:21
    let mut _858: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
    let mut _859: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
    let mut _860: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
    let mut _863: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _864: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _865: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _866: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _868: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _869: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _870: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _871: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _872: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _873: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _874: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _875: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _876: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _877: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _878: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:61:38: 61:45
    let mut _879: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:61:38: 61:39
    let mut _880: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:61:38: 61:45
    let mut _883: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _884: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _885: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _886: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _888: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _889: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _890: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _891: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _892: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _893: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _894: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _895: (&i128, &i128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _896: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _897: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _898: i128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:62:60: 62:67
    let mut _899: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:62:60: 62:61
    let mut _900: (i128, bool);          // in scope 0 at ui/numbers-arithmetic/i128.rs:62:60: 62:67
    let mut _903: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _904: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _905: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _906: i128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _908: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _909: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _910: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _911: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _912: &i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _913: &i128;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _914: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _915: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:63:5: 63:19
    let mut _916: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:63:13: 63:18
    let mut _917: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:63:13: 63:14
    let mut _918: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:63:17: 63:18
    let mut _919: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:63:5: 63:19
    let mut _920: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:64:5: 64:19
    let mut _921: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:64:13: 64:18
    let mut _922: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:64:13: 64:14
    let mut _923: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:64:17: 64:18
    let mut _924: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:64:5: 64:19
    let mut _925: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:65:5: 65:19
    let mut _926: bool;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:65:13: 65:18
    let mut _927: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:65:13: 65:14
    let mut _928: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:65:17: 65:18
    let mut _929: !;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:65:5: 65:19
    let mut _930: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _931: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _932: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:66:16: 66:24
    let mut _933: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:66:16: 66:17
    let mut _934: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _937: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _938: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _939: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _940: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _942: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _943: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _944: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _945: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _946: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _947: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _948: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _949: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _950: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _951: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:67:16: 67:24
    let mut _952: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:67:16: 67:17
    let mut _953: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _956: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _957: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _958: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _959: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _961: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _962: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _963: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _964: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _965: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _966: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _967: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _968: (&i64, &i64);          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _969: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _970: i64;                       // in scope 0 at ui/numbers-arithmetic/i128.rs:68:16: 68:24
    let mut _971: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:68:16: 68:17
    let mut _972: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _975: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _976: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _977: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _978: i64;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _980: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _981: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _982: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _983: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _984: &i64;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _985: &i64;                      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _986: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _987: (&u128, &u128);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _988: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _989: u128;                      // in scope 0 at ui/numbers-arithmetic/i128.rs:69:16: 69:25
    let mut _990: i128;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:69:16: 69:17
    let mut _991: &u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _994: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _995: bool;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _996: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _997: u128;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _999: !;                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1000: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1001: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1002: &u128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1003: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1004: &u128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1005: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1006: (&u128, &u128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1007: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1008: u128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:70:16: 70:26
    let mut _1009: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:70:16: 70:18
    let mut _1010: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:70:17: 70:18
    let mut _1011: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:70:16: 70:18
    let mut _1012: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1015: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1016: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1017: u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1018: u128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1020: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1021: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1022: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1023: &u128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1024: &u128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1025: &u128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1026: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1027: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1028: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1029: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:71:16: 71:35
    let mut _1030: f64;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:71:16: 71:27
    let mut _1031: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:71:17: 71:19
    let mut _1032: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:71:18: 71:19
    let mut _1033: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:71:17: 71:19
    let mut _1034: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1035: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:71:37: 71:39
    let mut _1036: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:71:38: 71:39
    let mut _1037: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:71:37: 71:39
    let mut _1040: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1041: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1042: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1043: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1045: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1046: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1047: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1048: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1049: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1050: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1051: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1052: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1053: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1054: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:72:16: 72:35
    let mut _1055: f32;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:72:16: 72:27
    let mut _1056: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:72:17: 72:19
    let mut _1057: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:72:18: 72:19
    let mut _1058: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:72:17: 72:19
    let mut _1059: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1060: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:72:37: 72:39
    let mut _1061: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:72:38: 72:39
    let mut _1062: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:72:37: 72:39
    let mut _1065: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1066: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1067: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1068: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1070: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1071: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1072: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1073: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1074: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1075: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1076: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1077: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1078: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1079: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:73:16: 73:42
    let mut _1080: f64;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:73:16: 73:34
    let mut _1081: f64;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:73:17: 73:26
    let mut _1082: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:17: 73:19
    let mut _1083: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:18: 73:19
    let mut _1084: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:17: 73:19
    let mut _1085: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1086: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:73:44: 73:51
    let mut _1087: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:44: 73:46
    let mut _1088: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:45: 73:46
    let mut _1089: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:73:44: 73:46
    let mut _1090: (i128, bool);         // in scope 0 at ui/numbers-arithmetic/i128.rs:73:44: 73:51
    let mut _1093: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1094: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1095: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1096: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1098: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1099: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1100: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1101: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1102: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1103: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1104: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1105: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1106: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1107: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:74:16: 74:42
    let mut _1108: f32;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:74:16: 74:34
    let mut _1109: f32;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:74:17: 74:26
    let mut _1110: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:17: 74:19
    let mut _1111: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:18: 74:19
    let mut _1112: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:17: 74:19
    let mut _1113: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1114: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:74:44: 74:51
    let mut _1115: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:44: 74:46
    let mut _1116: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:45: 74:46
    let mut _1117: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:74:44: 74:46
    let mut _1118: (i128, bool);         // in scope 0 at ui/numbers-arithmetic/i128.rs:74:44: 74:51
    let mut _1121: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1122: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1123: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1124: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1126: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1127: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1128: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1129: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1130: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1131: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1132: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1134: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:76:20: 76:29
    let mut _1135: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1136: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1137: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1138: std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _1140: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1141: &[&str];              // in scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
    let mut _1142: &[&str; 1];           // in scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
    let _1143: &[&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
    let mut _1144: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1145: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1146: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1147: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1148: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
    let mut _1149: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
    let _1150: &i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
    let mut _1153: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1154: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1155: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1156: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1158: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1159: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1160: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1161: &&str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1162: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1163: &std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1164: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1165: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1166: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1167: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1168: std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _1170: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1171: &[&str];              // in scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
    let mut _1172: &[&str; 1];           // in scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
    let _1173: &[&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
    let mut _1174: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1175: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1176: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1177: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1178: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
    let mut _1179: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
    let _1180: &i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
    let mut _1183: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1184: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1185: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1186: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1188: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1189: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1190: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1191: &&str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1192: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1193: &std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1194: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1195: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1196: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1197: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1198: std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _1200: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1201: &[&str];              // in scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
    let mut _1202: &[&str; 1];           // in scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
    let _1203: &[&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
    let mut _1204: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1205: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1206: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1207: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1208: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
    let mut _1209: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
    let _1210: &i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
    let mut _1213: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1214: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1215: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1216: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1218: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1219: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1220: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1221: &&str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1222: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1223: &std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1224: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1225: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1226: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1227: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1228: std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _1230: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1231: &[&str];              // in scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
    let mut _1232: &[&str; 1];           // in scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
    let _1233: &[&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
    let mut _1234: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1235: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1236: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1237: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1238: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
    let mut _1239: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
    let _1240: &i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
    let mut _1243: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1244: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1245: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1246: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1248: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1249: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1250: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1251: &&str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1252: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1253: &std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1254: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1255: (&&str, &std::string::String); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1256: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1257: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1258: std::string::String;      // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:117:23: 120:6
    let mut _1260: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1261: &[&str];              // in scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
    let mut _1262: &[&str; 1];           // in scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
    let _1263: &[&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
    let mut _1264: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1265: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1266: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let _1267: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
    let mut _1268: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
    let mut _1269: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
    let _1270: &i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
    let mut _1273: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1274: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1275: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1276: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1278: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1279: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1280: &&str;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1281: &&str;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1282: &std::string::String; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1283: &std::string::String;     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1284: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1285: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1286: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1287: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1288: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:85:19: 85:31
    let mut _1289: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:85:21: 85:30
    let mut _1290: &i128;                // in scope 0 at ui/numbers-arithmetic/i128.rs:85:21: 85:30
    let mut _1293: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1294: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1295: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1296: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1298: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1299: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1300: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1301: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1302: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1303: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1304: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1305: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1306: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1307: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:87:16: 87:36
    let mut _1308: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:16: 87:20
    let mut _1309: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:18: 87:19
    let mut _1310: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:16: 87:20
    let mut _1311: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:33: 87:35
    let mut _1312: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:34: 87:35
    let mut _1313: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:87:33: 87:35
    let mut _1314: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1317: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1318: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1319: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1320: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1322: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1323: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1324: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1325: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1326: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1327: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1328: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1329: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1330: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1331: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:88:16: 88:34
    let mut _1332: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:88:16: 88:19
    let mut _1333: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:88:32: 88:33
    let mut _1334: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1337: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1338: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1339: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1340: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1342: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1343: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1344: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1345: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1346: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1347: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1348: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1349: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1350: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1351: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:89:16: 89:34
    let mut _1352: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:89:16: 89:19
    let mut _1353: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:89:32: 89:33
    let mut _1354: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1357: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1358: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1359: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1360: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1362: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1363: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1364: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1365: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1366: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1367: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1368: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1371: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1372: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1373: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:92:16: 92:35
    let mut _1374: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:92:16: 92:17
    let mut _1375: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:92:30: 92:34
    let mut _1376: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1379: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1380: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1381: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1382: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1384: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1385: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1386: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1387: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1388: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1389: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1390: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1391: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1392: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1393: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:93:16: 93:32
    let mut _1394: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:93:16: 93:17
    let mut _1395: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:93:30: 93:31
    let mut _1396: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1399: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1400: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1401: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1402: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1404: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1405: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1406: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1407: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1408: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1409: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1410: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1411: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1412: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1413: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:94:16: 94:41
    let mut _1414: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:94:16: 94:26
    let mut _1415: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:94:18: 94:25
    let mut _1416: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:94:19: 94:20
    let mut _1417: (i128, bool);         // in scope 0 at ui/numbers-arithmetic/i128.rs:94:18: 94:25
    let mut _1418: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:94:16: 94:26
    let mut _1419: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1422: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1423: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1424: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1425: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1427: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1428: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1429: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1430: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1431: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1432: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1433: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1434: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1435: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1436: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:95:16: 95:32
    let mut _1437: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:95:16: 95:17
    let mut _1438: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:95:30: 95:31
    let mut _1439: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1442: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1443: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1444: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1445: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1447: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1448: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1449: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1450: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1451: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1452: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1453: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1454: (&std::option::Option<u128>, &std::option::Option<u128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1455: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1456: std::option::Option<u128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:96:16: 96:44
    let mut _1457: u128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:96:16: 96:24
    let mut _1458: u32;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:96:37: 96:43
    let mut _1459: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1462: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1463: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1464: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1465: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1467: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1468: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1469: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1470: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1471: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1472: &std::option::Option<u128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1473: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1474: (&std::option::Option<i128>, &std::option::Option<i128>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1475: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1476: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:97:16: 97:37
    let mut _1477: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:97:16: 97:17
    let mut _1478: u32;                  // in scope 0 at ui/numbers-arithmetic/i128.rs:97:30: 97:36
    let mut _1479: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1482: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1483: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1484: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1485: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1487: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1488: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1489: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1490: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1491: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1492: &std::option::Option<i128>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1493: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1494: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1495: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _1496: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    let mut _1497: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 100:63
    let mut _1498: i128;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:101:16: 101:62
    let mut _1499: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    let mut _1500: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    let mut _1501: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    let mut _1502: bool;                 // in scope 0 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    let mut _1503: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1506: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1507: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1508: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1509: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1511: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1512: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1513: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1514: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1515: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1516: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1517: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1518: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1519: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1520: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1521: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:53
    let mut _1522: std::slice::Iter<'_, i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
    let mut _1523: &[i128];              // in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
    let mut _1524: &[i128; 4];           // in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
    let mut _1527: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1528: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1529: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1530: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1532: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1533: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1534: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1535: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1536: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1537: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1538: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _1539: (&i128, &i128);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _1540: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1541: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _1542: i128;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:57
    let mut _1543: std::slice::Iter<'_, i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
    let mut _1544: &[i128];              // in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
    let mut _1545: &[i128; 4];           // in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
    let mut _1548: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _1549: bool;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _1550: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _1551: i128;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _1553: !;                        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _1554: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _1555: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _1556: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _1557: &i128;                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _1558: &i128;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _1559: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/numbers-arithmetic/i128.rs:10:9: 10:10
        let _7: &i128;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _8: &i128;                   // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let _21: i128;                   // in scope 1 at ui/numbers-arithmetic/i128.rs:12:9: 12:10
        let mut _1621: &i128;            // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        scope 2 {
            debug left_val => _7;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _8;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _13: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _13;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
        scope 4 {
            debug y => _21;              // in scope 4 at ui/numbers-arithmetic/i128.rs:12:9: 12:10
            let _25: &i128;              // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _26: &i128;              // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _39: i128;               // in scope 4 at ui/numbers-arithmetic/i128.rs:14:9: 14:10
            let mut _1620: &i128;        // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
            scope 5 {
                debug left_val => _25;   // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _26;  // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _31: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 6 {
                    debug kind => _31;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 7 {
                debug z => _39;          // in scope 7 at ui/numbers-arithmetic/i128.rs:14:9: 14:10
                let _45: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _46: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _72: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _73: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _97: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _98: &i128;          // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _132: &i128;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _133: &i128;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _167: &i128;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                let _168: &i128;         // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _181: i128;          // in scope 7 at ui/numbers-arithmetic/i128.rs:20:9: 20:10
                let mut _1615: &i128;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _1616: &i128;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _1617: &i128;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _1618: &i128;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                let mut _1619: &i128;    // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                scope 8 {
                    debug left_val => _45; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _46; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _51: core::panicking::AssertKind; // in scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 9 {
                        debug kind => _51; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 10 {
                    debug left_val => _72; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _73; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _78: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 11 {
                        debug kind => _78; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 12 {
                    debug left_val => _97; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _98; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _103: core::panicking::AssertKind; // in scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 13 {
                        debug kind => _103; // in scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 14 {
                    debug left_val => _132; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _133; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _138: core::panicking::AssertKind; // in scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 15 {
                        debug kind => _138; // in scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 16 {
                    debug left_val => _167; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    debug right_val => _168; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _173: core::panicking::AssertKind; // in scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    scope 17 {
                        debug kind => _173; // in scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                    }
                }
                scope 18 {
                    debug k => _181;     // in scope 18 at ui/numbers-arithmetic/i128.rs:20:9: 20:10
                    let _187: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _188: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _208: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _209: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _229: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _230: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _249: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _250: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _268: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _269: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _293: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _294: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _313: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _314: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _333: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _334: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _367: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _368: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _386: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _387: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _405: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _406: &i64;      // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _424: &u128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _425: &u128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _445: &u128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _446: &u128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _470: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _471: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _495: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _496: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _523: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _524: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _551: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _552: &i128;     // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let _565: i128;      // in scope 18 at ui/numbers-arithmetic/i128.rs:43:9: 43:10
                    let mut _1603: &u128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _1604: &u128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _1605: &i64; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _1606: &i64; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _1607: &i64; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    let mut _1608: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1609: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1610: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1611: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1612: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1613: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                    let mut _1614: &i128; // in scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 19 {
                        debug left_val => _187; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _188; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _193: core::panicking::AssertKind; // in scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 20 {
                            debug kind => _193; // in scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 21 {
                        debug left_val => _208; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _209; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _214: core::panicking::AssertKind; // in scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 22 {
                            debug kind => _214; // in scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 23 {
                        debug left_val => _229; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _230; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _235: core::panicking::AssertKind; // in scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 24 {
                            debug kind => _235; // in scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 25 {
                        debug left_val => _249; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _250; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _255: core::panicking::AssertKind; // in scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 26 {
                            debug kind => _255; // in scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 27 {
                        debug left_val => _268; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _269; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _274: core::panicking::AssertKind; // in scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 28 {
                            debug kind => _274; // in scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 29 {
                        debug left_val => _293; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _294; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _299: core::panicking::AssertKind; // in scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 30 {
                            debug kind => _299; // in scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 31 {
                        debug left_val => _313; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _314; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _319: core::panicking::AssertKind; // in scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 32 {
                            debug kind => _319; // in scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 33 {
                        debug left_val => _333; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _334; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _339: core::panicking::AssertKind; // in scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 34 {
                            debug kind => _339; // in scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 35 {
                        debug left_val => _367; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _368; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _373: core::panicking::AssertKind; // in scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 36 {
                            debug kind => _373; // in scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 37 {
                        debug left_val => _386; // in scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _387; // in scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _392: core::panicking::AssertKind; // in scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 38 {
                            debug kind => _392; // in scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 39 {
                        debug left_val => _405; // in scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _406; // in scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _411: core::panicking::AssertKind; // in scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 40 {
                            debug kind => _411; // in scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 41 {
                        debug left_val => _424; // in scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _425; // in scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _430: core::panicking::AssertKind; // in scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 42 {
                            debug kind => _430; // in scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 43 {
                        debug left_val => _445; // in scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _446; // in scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _451: core::panicking::AssertKind; // in scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 44 {
                            debug kind => _451; // in scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 45 {
                        debug left_val => _470; // in scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _471; // in scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _476: core::panicking::AssertKind; // in scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 46 {
                            debug kind => _476; // in scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 47 {
                        debug left_val => _495; // in scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _496; // in scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _501: core::panicking::AssertKind; // in scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 48 {
                            debug kind => _501; // in scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 49 {
                        debug left_val => _523; // in scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _524; // in scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _529: core::panicking::AssertKind; // in scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 50 {
                            debug kind => _529; // in scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 51 {
                        debug left_val => _551; // in scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _552; // in scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _557: core::panicking::AssertKind; // in scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 52 {
                            debug kind => _557; // in scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                    scope 53 {
                        debug x => _565; // in scope 53 at ui/numbers-arithmetic/i128.rs:43:9: 43:10
                        let _571: &i128; // in scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        let _572: &i128; // in scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _585: i128;  // in scope 53 at ui/numbers-arithmetic/i128.rs:45:9: 45:10
                        let mut _1602: &i128; // in scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                        scope 54 {
                            debug left_val => _571; // in scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            debug right_val => _572; // in scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _577: core::panicking::AssertKind; // in scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            scope 55 {
                                debug kind => _577; // in scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                            }
                        }
                        scope 56 {
                            debug y => _585; // in scope 56 at ui/numbers-arithmetic/i128.rs:45:9: 45:10
                            let _589: &i128; // in scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                            let _590: &i128; // in scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                            let _603: i128; // in scope 56 at ui/numbers-arithmetic/i128.rs:47:9: 47:10
                            let mut _1601: &i128; // in scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                            scope 57 {
                                debug left_val => _589; // in scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                debug right_val => _590; // in scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _595: core::panicking::AssertKind; // in scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                scope 58 {
                                    debug kind => _595; // in scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                }
                            }
                            scope 59 {
                                debug z => _603; // in scope 59 at ui/numbers-arithmetic/i128.rs:47:9: 47:10
                                let _611: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _612: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _638: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _639: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _663: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _664: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _698: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _699: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _733: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                let _734: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                let _747: i128; // in scope 59 at ui/numbers-arithmetic/i128.rs:53:9: 53:10
                                let mut _1596: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                let mut _1597: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                let mut _1598: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                let mut _1599: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                let mut _1600: &i128; // in scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                scope 60 {
                                    debug left_val => _611; // in scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _612; // in scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _617: core::panicking::AssertKind; // in scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 61 {
                                        debug kind => _617; // in scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                                scope 62 {
                                    debug left_val => _638; // in scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _639; // in scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _644: core::panicking::AssertKind; // in scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 63 {
                                        debug kind => _644; // in scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                                scope 64 {
                                    debug left_val => _663; // in scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _664; // in scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _669: core::panicking::AssertKind; // in scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 65 {
                                        debug kind => _669; // in scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                                scope 66 {
                                    debug left_val => _698; // in scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _699; // in scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _704: core::panicking::AssertKind; // in scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 67 {
                                        debug kind => _704; // in scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                                scope 68 {
                                    debug left_val => _733; // in scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    debug right_val => _734; // in scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _739: core::panicking::AssertKind; // in scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    scope 69 {
                                        debug kind => _739; // in scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                    }
                                }
                                scope 70 {
                                    debug k => _747; // in scope 70 at ui/numbers-arithmetic/i128.rs:53:9: 53:10
                                    let _755: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _756: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _776: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _777: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _797: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _798: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _817: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _818: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _836: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _837: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _861: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _862: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _881: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _882: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _901: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _902: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _935: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _936: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _954: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _955: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _973: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _974: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _992: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _993: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1013: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _1014: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1038: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _1039: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1063: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _1064: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1091: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _1092: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1119: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                    let _1120: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                    let _1133: i128; // in scope 70 at ui/numbers-arithmetic/i128.rs:76:9: 76:10
                                    let mut _1584: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    let mut _1585: &u128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    let mut _1586: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    let mut _1587: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    let mut _1588: &i64; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    let mut _1589: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1590: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1591: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1592: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1593: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1594: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                    let mut _1595: &i128; // in scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                    scope 71 {
                                        debug left_val => _755; // in scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _756; // in scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _761: core::panicking::AssertKind; // in scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 72 {
                                            debug kind => _761; // in scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 73 {
                                        debug left_val => _776; // in scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _777; // in scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _782: core::panicking::AssertKind; // in scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 74 {
                                            debug kind => _782; // in scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 75 {
                                        debug left_val => _797; // in scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _798; // in scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _803: core::panicking::AssertKind; // in scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 76 {
                                            debug kind => _803; // in scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 77 {
                                        debug left_val => _817; // in scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _818; // in scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _823: core::panicking::AssertKind; // in scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 78 {
                                            debug kind => _823; // in scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 79 {
                                        debug left_val => _836; // in scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _837; // in scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _842: core::panicking::AssertKind; // in scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 80 {
                                            debug kind => _842; // in scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 81 {
                                        debug left_val => _861; // in scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _862; // in scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _867: core::panicking::AssertKind; // in scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 82 {
                                            debug kind => _867; // in scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 83 {
                                        debug left_val => _881; // in scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _882; // in scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _887: core::panicking::AssertKind; // in scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 84 {
                                            debug kind => _887; // in scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 85 {
                                        debug left_val => _901; // in scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _902; // in scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _907: core::panicking::AssertKind; // in scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 86 {
                                            debug kind => _907; // in scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 87 {
                                        debug left_val => _935; // in scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _936; // in scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _941: core::panicking::AssertKind; // in scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 88 {
                                            debug kind => _941; // in scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 89 {
                                        debug left_val => _954; // in scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _955; // in scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _960: core::panicking::AssertKind; // in scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 90 {
                                            debug kind => _960; // in scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 91 {
                                        debug left_val => _973; // in scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _974; // in scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _979: core::panicking::AssertKind; // in scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 92 {
                                            debug kind => _979; // in scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 93 {
                                        debug left_val => _992; // in scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _993; // in scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _998: core::panicking::AssertKind; // in scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 94 {
                                            debug kind => _998; // in scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 95 {
                                        debug left_val => _1013; // in scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _1014; // in scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1019: core::panicking::AssertKind; // in scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 96 {
                                            debug kind => _1019; // in scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 97 {
                                        debug left_val => _1038; // in scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _1039; // in scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1044: core::panicking::AssertKind; // in scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 98 {
                                            debug kind => _1044; // in scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 99 {
                                        debug left_val => _1063; // in scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _1064; // in scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1069: core::panicking::AssertKind; // in scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 100 {
                                            debug kind => _1069; // in scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 101 {
                                        debug left_val => _1091; // in scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _1092; // in scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1097: core::panicking::AssertKind; // in scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 102 {
                                            debug kind => _1097; // in scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 103 {
                                        debug left_val => _1119; // in scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        debug right_val => _1120; // in scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1125: core::panicking::AssertKind; // in scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        scope 104 {
                                            debug kind => _1125; // in scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                        }
                                    }
                                    scope 105 {
                                        debug j => _1133; // in scope 105 at ui/numbers-arithmetic/i128.rs:76:9: 76:10
                                        let _1139: std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        let _1151: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1152: &std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1169: std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        let _1181: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1182: &std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1199: std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        let _1211: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1212: &std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1229: std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        let _1241: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1242: &std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1259: std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        let _1271: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1272: &std::string::String; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1291: &i128; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1292: &i128; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1315: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1316: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1335: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1336: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1355: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                        let _1356: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                        let _1369: i128; // in scope 105 at ui/numbers-arithmetic/i128.rs:90:9: 90:10
                                        let mut _1571: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                        let mut _1572: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                        let mut _1573: &std::option::Option<i128>; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                        let mut _1574: &[&str; 1]; // in scope 105 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
                                        let mut _1575: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                        let mut _1576: &[&str; 1]; // in scope 105 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
                                        let mut _1577: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                        let mut _1578: &[&str; 1]; // in scope 105 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
                                        let mut _1579: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                        let mut _1580: &[&str; 1]; // in scope 105 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
                                        let mut _1581: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                        let mut _1582: &[&str; 1]; // in scope 105 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
                                        let mut _1583: &&str; // in scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                        scope 106 {
                                            debug res => _1139; // in scope 106 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        }
                                        scope 107 {
                                            debug left_val => _1151; // in scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1152; // in scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1157: core::panicking::AssertKind; // in scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 108 {
                                                debug kind => _1157; // in scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 109 {
                                            debug res => _1169; // in scope 109 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        }
                                        scope 110 {
                                            debug left_val => _1181; // in scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1182; // in scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1187: core::panicking::AssertKind; // in scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 111 {
                                                debug kind => _1187; // in scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 112 {
                                            debug res => _1199; // in scope 112 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        }
                                        scope 113 {
                                            debug left_val => _1211; // in scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1212; // in scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1217: core::panicking::AssertKind; // in scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 114 {
                                                debug kind => _1217; // in scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 115 {
                                            debug res => _1229; // in scope 115 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        }
                                        scope 116 {
                                            debug left_val => _1241; // in scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1242; // in scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1247: core::panicking::AssertKind; // in scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 117 {
                                                debug kind => _1247; // in scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 118 {
                                            debug res => _1259; // in scope 118 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:13: 118:16
                                        }
                                        scope 119 {
                                            debug left_val => _1271; // in scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1272; // in scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1277: core::panicking::AssertKind; // in scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 120 {
                                                debug kind => _1277; // in scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 121 {
                                            debug left_val => _1291; // in scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1292; // in scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1297: core::panicking::AssertKind; // in scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 122 {
                                                debug kind => _1297; // in scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 123 {
                                            debug left_val => _1315; // in scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1316; // in scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1321: core::panicking::AssertKind; // in scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 124 {
                                                debug kind => _1321; // in scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 125 {
                                            debug left_val => _1335; // in scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1336; // in scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1341: core::panicking::AssertKind; // in scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 126 {
                                                debug kind => _1341; // in scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 127 {
                                            debug left_val => _1355; // in scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                            debug right_val => _1356; // in scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                            let _1361: core::panicking::AssertKind; // in scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            scope 128 {
                                                debug kind => _1361; // in scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                            }
                                        }
                                        scope 129 {
                                            debug l => _1369; // in scope 129 at ui/numbers-arithmetic/i128.rs:90:9: 90:10
                                            let _1370: i128; // in scope 129 at ui/numbers-arithmetic/i128.rs:91:9: 91:10
                                            scope 130 {
                                                debug o => _1370; // in scope 130 at ui/numbers-arithmetic/i128.rs:91:9: 91:10
                                                let _1377: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1378: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1397: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1398: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1420: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1421: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1440: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1441: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1460: &std::option::Option<u128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1461: &std::option::Option<u128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1480: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1481: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1504: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1505: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1525: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1526: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let _1546: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                let _1547: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                let mut _1560: &[i128; 4]; // in scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
                                                let mut _1561: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                                let mut _1562: &[i128; 4]; // in scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
                                                let mut _1563: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                                let mut _1564: &i128; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1565: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1566: &std::option::Option<u128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1567: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1568: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1569: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                let mut _1570: &std::option::Option<i128>; // in scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                                scope 131 {
                                                    debug left_val => _1377; // in scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1378; // in scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1383: core::panicking::AssertKind; // in scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 132 {
                                                        debug kind => _1383; // in scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 133 {
                                                    debug left_val => _1397; // in scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1398; // in scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1403: core::panicking::AssertKind; // in scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 134 {
                                                        debug kind => _1403; // in scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 135 {
                                                    debug left_val => _1420; // in scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1421; // in scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1426: core::panicking::AssertKind; // in scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 136 {
                                                        debug kind => _1426; // in scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 137 {
                                                    debug left_val => _1440; // in scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1441; // in scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1446: core::panicking::AssertKind; // in scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 138 {
                                                        debug kind => _1446; // in scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 139 {
                                                    debug left_val => _1460; // in scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1461; // in scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1466: core::panicking::AssertKind; // in scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 140 {
                                                        debug kind => _1466; // in scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 141 {
                                                    debug left_val => _1480; // in scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1481; // in scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1486: core::panicking::AssertKind; // in scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 142 {
                                                        debug kind => _1486; // in scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 143 {
                                                    debug left_val => _1504; // in scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1505; // in scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1510: core::panicking::AssertKind; // in scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 144 {
                                                        debug kind => _1510; // in scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 145 {
                                                    debug left_val => _1525; // in scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1526; // in scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1531: core::panicking::AssertKind; // in scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 146 {
                                                        debug kind => _1531; // in scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                                scope 147 {
                                                    debug left_val => _1546; // in scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                                                    debug right_val => _1547; // in scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                                                    let _1552: core::panicking::AssertKind; // in scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    scope 148 {
                                                        debug kind => _1552; // in scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const -1_i128;              // scope 0 at ui/numbers-arithmetic/i128.rs:10:19: 10:21
        _1621 = const _;                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[61])) }
        _3 = _1621;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _6 = const -1_i128;              // scope 1 at ui/numbers-arithmetic/i128.rs:11:20: 11:21
        _5 = Not(move _6);               // scope 1 at ui/numbers-arithmetic/i128.rs:11:19: 11:21
        _4 = &_5;                        // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _2 = (move _3, move _4);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _7 = (_2.0: &i128);              // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _8 = (_2.1: &i128);              // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _11 = const 0_i128;              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _12 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _10 = Eq(move _11, move _12);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _9 = Not(move _10);              // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _9) -> [0: bb2, otherwise: bb1]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _13 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _15 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _17 = _7;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _16 = _17;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _18 = _19;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _20 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _14 = core::panicking::assert_failed::<i128, i128>(move _15, move _16, move _18, move _20); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb2: {
        _21 = const -2_i128;             // scope 1 at ui/numbers-arithmetic/i128.rs:12:19: 12:21
        _1620 = const _;                 // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[60])) }
        _23 = _1620;                     // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _24 = &_21;                      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _22 = (move _23, move _24);      // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _25 = (_22.0: &i128);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _26 = (_22.1: &i128);            // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _29 = const -2_i128;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _30 = (*_26);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _28 = Eq(move _29, move _30);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _27 = Not(move _28);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _27) -> [0: bb4, otherwise: bb3]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb3: {
        _31 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _33 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _35 = _25;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _34 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _37 = _26;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _36 = _37;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _38 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _32 = core::panicking::assert_failed::<i128, i128>(move _33, move _34, move _36, move _38); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb4: {
        _39 = const 11259375_i128;       // scope 4 at ui/numbers-arithmetic/i128.rs:14:19: 14:28
        _43 = const (126773525390625_i128, false); // scope 7 at ui/numbers-arithmetic/i128.rs:15:16: 15:21
        _42 = move (_43.0: i128);        // scope 7 at ui/numbers-arithmetic/i128.rs:15:16: 15:21
        _41 = &_42;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1619 = const _;                 // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[59])) }
        _44 = _1619;                     // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _40 = (move _41, move _44);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _45 = (_40.0: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _46 = (_40.1: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _49 = (*_45);                    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _50 = const 126773525390625_i128; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _48 = Eq(move _49, move _50);    // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _47 = Not(move _48);             // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _47) -> [0: bb6, otherwise: bb5]; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb5: {
        _51 = const core::panicking::AssertKind::Eq; // scope 8 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _53 = const core::panicking::AssertKind::Eq; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _55 = _45;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _54 = _55;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _57 = _46;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _56 = _57;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _58 = Option::<Arguments<'_>>::None; // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _52 = core::panicking::assert_failed::<i128, i128>(move _53, move _54, move _56, move _58); // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb6: {
        _64 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:17
        _65 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:16:20: 16:21
        _66 = CheckedMul(_64, _65);      // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:21
        assert(!move (_66.1: bool), "attempt to compute `{} * {}`, which would overflow", move _64, move _65) -> bb7; // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:21
    }

    bb7: {
        _63 = move (_66.0: i128);        // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:21
        _67 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:16:24: 16:25
        _68 = CheckedMul(_63, _67);      // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:25
        assert(!move (_68.1: bool), "attempt to compute `{} * {}`, which would overflow", move _63, move _67) -> bb8; // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:25
    }

    bb8: {
        _62 = move (_68.0: i128);        // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:25
        _69 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:16:28: 16:29
        _70 = CheckedMul(_62, _69);      // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:29
        assert(!move (_70.1: bool), "attempt to compute `{} * {}`, which would overflow", move _62, move _69) -> bb9; // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:29
    }

    bb9: {
        _61 = move (_70.0: i128);        // scope 7 at ui/numbers-arithmetic/i128.rs:16:16: 16:29
        _60 = &_61;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1618 = const _;                 // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[58])) }
        _71 = _1618;                     // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _59 = (move _60, move _71);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _72 = (_59.0: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _73 = (_59.1: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _76 = (*_72);                    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _77 = const 16071526739967441558837890625_i128; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _75 = Eq(move _76, move _77);    // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _74 = Not(move _75);             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _74) -> [0: bb11, otherwise: bb10]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb10: {
        _78 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _80 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _82 = _72;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _81 = _82;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _84 = _73;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _83 = _84;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _85 = Option::<Arguments<'_>>::None; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _79 = core::panicking::assert_failed::<i128, i128>(move _80, move _81, move _83, move _85); // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb11: {
        _90 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:17:17: 17:18
        _91 = Eq(_90, const i128::MIN);  // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:18
        assert(!move _91, "attempt to negate `{}`, which would overflow", _90) -> bb12; // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:18
    }

    bb12: {
        _89 = Neg(move _90);             // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:18
        _93 = _39;                       // scope 7 at ui/numbers-arithmetic/i128.rs:17:22: 17:23
        _94 = Eq(_93, const i128::MIN);  // scope 7 at ui/numbers-arithmetic/i128.rs:17:21: 17:23
        assert(!move _94, "attempt to negate `{}`, which would overflow", _93) -> bb13; // scope 7 at ui/numbers-arithmetic/i128.rs:17:21: 17:23
    }

    bb13: {
        _92 = Neg(move _93);             // scope 7 at ui/numbers-arithmetic/i128.rs:17:21: 17:23
        _95 = CheckedMul(_89, _92);      // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:23
        assert(!move (_95.1: bool), "attempt to compute `{} * {}`, which would overflow", move _89, move _92) -> bb14; // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:23
    }

    bb14: {
        _88 = move (_95.0: i128);        // scope 7 at ui/numbers-arithmetic/i128.rs:17:16: 17:23
        _87 = &_88;                      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1617 = const _;                 // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[57])) }
        _96 = _1617;                     // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _86 = (move _87, move _96);      // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _97 = (_86.0: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _98 = (_86.1: &i128);            // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _101 = (*_97);                   // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _102 = const 126773525390625_i128; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _100 = Eq(move _101, move _102); // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _99 = Not(move _100);            // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _99) -> [0: bb16, otherwise: bb15]; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb15: {
        _103 = const core::panicking::AssertKind::Eq; // scope 12 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _105 = const core::panicking::AssertKind::Eq; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _107 = _97;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _106 = _107;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _109 = _98;                      // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _108 = _109;                     // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _110 = Option::<Arguments<'_>>::None; // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _104 = core::panicking::assert_failed::<i128, i128>(move _105, move _106, move _108, move _110); // scope 13 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb16: {
        _117 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:18:17: 18:18
        _118 = Eq(_117, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:18
        assert(!move _118, "attempt to negate `{}`, which would overflow", _117) -> bb17; // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:18
    }

    bb17: {
        _116 = Neg(move _117);           // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:18
        _120 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:18:22: 18:23
        _121 = Eq(_120, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:18:21: 18:23
        assert(!move _121, "attempt to negate `{}`, which would overflow", _120) -> bb18; // scope 7 at ui/numbers-arithmetic/i128.rs:18:21: 18:23
    }

    bb18: {
        _119 = Neg(move _120);           // scope 7 at ui/numbers-arithmetic/i128.rs:18:21: 18:23
        _122 = CheckedMul(_116, _119);   // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:23
        assert(!move (_122.1: bool), "attempt to compute `{} * {}`, which would overflow", move _116, move _119) -> bb19; // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:23
    }

    bb19: {
        _115 = move (_122.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:23
        _124 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:18:27: 18:28
        _125 = Eq(_124, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:18:26: 18:28
        assert(!move _125, "attempt to negate `{}`, which would overflow", _124) -> bb20; // scope 7 at ui/numbers-arithmetic/i128.rs:18:26: 18:28
    }

    bb20: {
        _123 = Neg(move _124);           // scope 7 at ui/numbers-arithmetic/i128.rs:18:26: 18:28
        _126 = CheckedMul(_115, _123);   // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:28
        assert(!move (_126.1: bool), "attempt to compute `{} * {}`, which would overflow", move _115, move _123) -> bb21; // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:28
    }

    bb21: {
        _114 = move (_126.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:28
        _128 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:18:32: 18:33
        _129 = Eq(_128, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:18:31: 18:33
        assert(!move _129, "attempt to negate `{}`, which would overflow", _128) -> bb22; // scope 7 at ui/numbers-arithmetic/i128.rs:18:31: 18:33
    }

    bb22: {
        _127 = Neg(move _128);           // scope 7 at ui/numbers-arithmetic/i128.rs:18:31: 18:33
        _130 = CheckedMul(_114, _127);   // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:33
        assert(!move (_130.1: bool), "attempt to compute `{} * {}`, which would overflow", move _114, move _127) -> bb23; // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:33
    }

    bb23: {
        _113 = move (_130.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:18:16: 18:33
        _112 = &_113;                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1616 = const _;                 // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[56])) }
        _131 = _1616;                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _111 = (move _112, move _131);   // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _132 = (_111.0: &i128);          // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _133 = (_111.1: &i128);          // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _136 = (*_132);                  // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _137 = const 16071526739967441558837890625_i128; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _135 = Eq(move _136, move _137); // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _134 = Not(move _135);           // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _134) -> [0: bb25, otherwise: bb24]; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb24: {
        _138 = const core::panicking::AssertKind::Eq; // scope 14 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _140 = const core::panicking::AssertKind::Eq; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _142 = _132;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _141 = _142;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _144 = _133;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _143 = _144;                     // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _145 = Option::<Arguments<'_>>::None; // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _139 = core::panicking::assert_failed::<i128, i128>(move _140, move _141, move _143, move _145); // scope 15 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb25: {
        _152 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:19:17: 19:18
        _153 = Eq(_152, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:18
        assert(!move _153, "attempt to negate `{}`, which would overflow", _152) -> bb26; // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:18
    }

    bb26: {
        _151 = Neg(move _152);           // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:18
        _155 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:19:22: 19:23
        _156 = Eq(_155, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:19:21: 19:23
        assert(!move _156, "attempt to negate `{}`, which would overflow", _155) -> bb27; // scope 7 at ui/numbers-arithmetic/i128.rs:19:21: 19:23
    }

    bb27: {
        _154 = Neg(move _155);           // scope 7 at ui/numbers-arithmetic/i128.rs:19:21: 19:23
        _157 = CheckedAdd(_151, _154);   // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:23
        assert(!move (_157.1: bool), "attempt to compute `{} + {}`, which would overflow", move _151, move _154) -> bb28; // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:23
    }

    bb28: {
        _150 = move (_157.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:23
        _159 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:19:27: 19:28
        _160 = Eq(_159, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:19:26: 19:28
        assert(!move _160, "attempt to negate `{}`, which would overflow", _159) -> bb29; // scope 7 at ui/numbers-arithmetic/i128.rs:19:26: 19:28
    }

    bb29: {
        _158 = Neg(move _159);           // scope 7 at ui/numbers-arithmetic/i128.rs:19:26: 19:28
        _161 = CheckedAdd(_150, _158);   // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:28
        assert(!move (_161.1: bool), "attempt to compute `{} + {}`, which would overflow", move _150, move _158) -> bb30; // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:28
    }

    bb30: {
        _149 = move (_161.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:28
        _163 = _39;                      // scope 7 at ui/numbers-arithmetic/i128.rs:19:32: 19:33
        _164 = Eq(_163, const i128::MIN); // scope 7 at ui/numbers-arithmetic/i128.rs:19:31: 19:33
        assert(!move _164, "attempt to negate `{}`, which would overflow", _163) -> bb31; // scope 7 at ui/numbers-arithmetic/i128.rs:19:31: 19:33
    }

    bb31: {
        _162 = Neg(move _163);           // scope 7 at ui/numbers-arithmetic/i128.rs:19:31: 19:33
        _165 = CheckedAdd(_149, _162);   // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:33
        assert(!move (_165.1: bool), "attempt to compute `{} + {}`, which would overflow", move _149, move _162) -> bb32; // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:33
    }

    bb32: {
        _148 = move (_165.0: i128);      // scope 7 at ui/numbers-arithmetic/i128.rs:19:16: 19:33
        _147 = &_148;                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1615 = const _;                 // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[55])) }
        _166 = _1615;                    // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _146 = (move _147, move _166);   // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _167 = (_146.0: &i128);          // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _168 = (_146.1: &i128);          // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _171 = (*_167);                  // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _172 = const -45037500_i128;     // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _170 = Eq(move _171, move _172); // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _169 = Not(move _170);           // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _169) -> [0: bb34, otherwise: bb33]; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb33: {
        _173 = const core::panicking::AssertKind::Eq; // scope 16 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _175 = const core::panicking::AssertKind::Eq; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _177 = _167;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _176 = _177;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _179 = _168;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _178 = _179;                     // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _180 = Option::<Arguments<'_>>::None; // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _174 = core::panicking::assert_failed::<i128, i128>(move _175, move _176, move _178, move _180); // scope 17 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb34: {
        _181 = const -1512366075204170947332355369683137040_i128; // scope 7 at ui/numbers-arithmetic/i128.rs:20:19: 20:60
        _185 = const (-3024732150408341894664710739366274080_i128, false); // scope 18 at ui/numbers-arithmetic/i128.rs:21:16: 21:21
        _184 = move (_185.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:21:16: 21:21
        _183 = &_184;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1614 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[54])) }
        _186 = _1614;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _182 = (move _183, move _186);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _187 = (_182.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _188 = (_182.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _191 = (*_187);                  // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _192 = const -3024732150408341894664710739366274080_i128; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _190 = Eq(move _191, move _192); // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _189 = Not(move _190);           // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _189) -> [0: bb36, otherwise: bb35]; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb35: {
        _193 = const core::panicking::AssertKind::Eq; // scope 19 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _195 = const core::panicking::AssertKind::Eq; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _197 = _187;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _196 = _197;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _199 = _188;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _198 = _199;                     // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _200 = Option::<Arguments<'_>>::None; // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _194 = core::panicking::assert_failed::<i128, i128>(move _195, move _196, move _198, move _200); // scope 20 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb36: {
        _1613 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[53])) }
        _202 = _1613;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _205 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:22:19: 22:20
        _206 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:22:23: 22:24
        _207 = CheckedSub(_205, _206);   // scope 18 at ui/numbers-arithmetic/i128.rs:22:19: 22:24
        assert(!move (_207.1: bool), "attempt to compute `{} - {}`, which would overflow", move _205, move _206) -> bb37; // scope 18 at ui/numbers-arithmetic/i128.rs:22:19: 22:24
    }

    bb37: {
        _204 = move (_207.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:22:19: 22:24
        _203 = &_204;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _201 = (move _202, move _203);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _208 = (_201.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _209 = (_201.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _212 = const 0_i128;             // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _213 = (*_209);                  // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _211 = Eq(move _212, move _213); // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _210 = Not(move _211);           // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _210) -> [0: bb39, otherwise: bb38]; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb38: {
        _214 = const core::panicking::AssertKind::Eq; // scope 21 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _216 = const core::panicking::AssertKind::Eq; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _218 = _208;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _217 = _218;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _220 = _209;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _219 = _220;                     // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _221 = Option::<Arguments<'_>>::None; // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _215 = core::panicking::assert_failed::<i128, i128>(move _216, move _217, move _219, move _221); // scope 22 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb39: {
        _1612 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[52])) }
        _223 = _1612;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _226 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:23:59: 23:60
        _227 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:23:63: 23:64
        _228 = CheckedAdd(_226, _227);   // scope 18 at ui/numbers-arithmetic/i128.rs:23:59: 23:64
        assert(!move (_228.1: bool), "attempt to compute `{} + {}`, which would overflow", move _226, move _227) -> bb40; // scope 18 at ui/numbers-arithmetic/i128.rs:23:59: 23:64
    }

    bb40: {
        _225 = move (_228.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:23:59: 23:64
        _224 = &_225;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _222 = (move _223, move _224);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _229 = (_222.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _230 = (_222.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _233 = const -1512366075204170947332355369671877665_i128; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _234 = (*_230);                  // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _232 = Eq(move _233, move _234); // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _231 = Not(move _232);           // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _231) -> [0: bb42, otherwise: bb41]; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb41: {
        _235 = const core::panicking::AssertKind::Eq; // scope 23 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _237 = const core::panicking::AssertKind::Eq; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _239 = _229;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _238 = _239;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _241 = _230;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _240 = _241;                     // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _242 = Option::<Arguments<'_>>::None; // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _236 = core::panicking::assert_failed::<i128, i128>(move _237, move _238, move _240, move _242); // scope 24 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb42: {
        _1611 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[51])) }
        _244 = _1611;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _247 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:25:16: 25:17
        _248 = CheckedAdd(_247, const 183138079419255074428548309402792464_i128); // scope 18 at ui/numbers-arithmetic/i128.rs:25:16: 25:59
        assert(!move (_248.1: bool), "attempt to compute `{} + {}`, which would overflow", move _247, const 183138079419255074428548309402792464_i128) -> bb43; // scope 18 at ui/numbers-arithmetic/i128.rs:25:16: 25:59
    }

    bb43: {
        _246 = move (_248.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:25:16: 25:59
        _245 = &_246;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _243 = (move _244, move _245);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _249 = (_243.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _250 = (_243.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _253 = const -1329227995784915872903807060280344576_i128; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _254 = (*_250);                  // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _252 = Eq(move _253, move _254); // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _251 = Not(move _252);           // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _251) -> [0: bb45, otherwise: bb44]; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb44: {
        _255 = const core::panicking::AssertKind::Eq; // scope 25 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _257 = const core::panicking::AssertKind::Eq; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _259 = _249;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _258 = _259;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _261 = _250;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _260 = _261;                     // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _262 = Option::<Arguments<'_>>::None; // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _256 = core::panicking::assert_failed::<i128, i128>(move _257, move _258, move _260, move _262); // scope 26 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb45: {
        _1610 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[50])) }
        _264 = _1610;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _267 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:26:57: 26:58
        _266 = Div(move _267, const 42_i128); // scope 18 at ui/numbers-arithmetic/i128.rs:26:57: 26:63
        _265 = &_266;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _263 = (move _264, move _265);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _268 = (_263.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _269 = (_263.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _272 = const -36008716076289784460294175468646120_i128; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _273 = (*_269);                  // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _271 = Eq(move _272, move _273); // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _270 = Not(move _271);           // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _270) -> [0: bb47, otherwise: bb46]; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb46: {
        _274 = const core::panicking::AssertKind::Eq; // scope 27 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _276 = const core::panicking::AssertKind::Eq; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _278 = _268;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _277 = _278;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _280 = _269;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _279 = _280;                     // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _281 = Option::<Arguments<'_>>::None; // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _275 = core::panicking::assert_failed::<i128, i128>(move _276, move _277, move _279, move _281); // scope 28 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb47: {
        _285 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:27:17: 27:18
        _286 = Eq(_285, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:27:16: 27:18
        assert(!move _286, "attempt to negate `{}`, which would overflow", _285) -> bb48; // scope 18 at ui/numbers-arithmetic/i128.rs:27:16: 27:18
    }

    bb48: {
        _284 = Neg(move _285);           // scope 18 at ui/numbers-arithmetic/i128.rs:27:16: 27:18
        _283 = &_284;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _289 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:21
        _290 = const true;               // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
        _291 = Eq(_289, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
        _292 = BitAnd(move _290, move _291); // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
        assert(!move _292, "attempt to compute `{} / {}`, which would overflow", _289, const -1_i128) -> bb49; // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
    }

    bb49: {
        _288 = Div(move _289, const -1_i128); // scope 18 at ui/numbers-arithmetic/i128.rs:27:20: 27:26
        _287 = &_288;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _282 = (move _283, move _287);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _293 = (_282.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _294 = (_282.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _297 = (*_293);                  // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _298 = (*_294);                  // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _296 = Eq(move _297, move _298); // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _295 = Not(move _296);           // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _295) -> [0: bb51, otherwise: bb50]; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb50: {
        _299 = const core::panicking::AssertKind::Eq; // scope 29 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _301 = const core::panicking::AssertKind::Eq; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _303 = _293;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _302 = _303;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _305 = _294;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _304 = _305;                     // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _306 = Option::<Arguments<'_>>::None; // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _300 = core::panicking::assert_failed::<i128, i128>(move _301, move _302, move _304, move _306); // scope 30 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb51: {
        _1609 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[49])) }
        _308 = _1609;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _311 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:28:38: 28:39
        _312 = CheckedShr(_311, const 65_i32); // scope 18 at ui/numbers-arithmetic/i128.rs:28:38: 28:45
        assert(!move (_312.1: bool), "attempt to shift right by `{}`, which would overflow", const 65_i32) -> bb52; // scope 18 at ui/numbers-arithmetic/i128.rs:28:38: 28:45
    }

    bb52: {
        _310 = move (_312.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:28:38: 28:45
        _309 = &_310;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _307 = (move _308, move _309);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _313 = (_307.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _314 = (_307.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _317 = const -40992764608243448_i128; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _318 = (*_314);                  // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _316 = Eq(move _317, move _318); // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _315 = Not(move _316);           // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _315) -> [0: bb54, otherwise: bb53]; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb53: {
        _319 = const core::panicking::AssertKind::Eq; // scope 31 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _321 = const core::panicking::AssertKind::Eq; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _323 = _313;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _322 = _323;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _325 = _314;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _324 = _325;                     // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _326 = Option::<Arguments<'_>>::None; // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _320 = core::panicking::assert_failed::<i128, i128>(move _321, move _322, move _324, move _326); // scope 32 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb54: {
        _1608 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[48])) }
        _328 = _1608;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _331 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:29:60: 29:61
        _332 = CheckedShl(_331, const 65_i32); // scope 18 at ui/numbers-arithmetic/i128.rs:29:60: 29:67
        assert(!move (_332.1: bool), "attempt to shift left by `{}`, which would overflow", const 65_i32) -> bb55; // scope 18 at ui/numbers-arithmetic/i128.rs:29:60: 29:67
    }

    bb55: {
        _330 = move (_332.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:29:60: 29:67
        _329 = &_330;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _327 = (move _328, move _329);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _333 = (_327.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _334 = (_327.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _337 = const 3024732150408341894828681797799247872_i128; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _338 = (*_334);                  // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _336 = Eq(move _337, move _338); // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _335 = Not(move _336);           // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _335) -> [0: bb57, otherwise: bb56]; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb56: {
        _339 = const core::panicking::AssertKind::Eq; // scope 33 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _341 = const core::panicking::AssertKind::Eq; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _343 = _333;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _342 = _343;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _345 = _334;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _344 = _345;                     // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _346 = Option::<Arguments<'_>>::None; // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _340 = core::panicking::assert_failed::<i128, i128>(move _341, move _342, move _344, move _346); // scope 34 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb57: {
        _349 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:30:13: 30:14
        _350 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:30:17: 30:18
        _348 = Lt(move _349, move _350); // scope 18 at ui/numbers-arithmetic/i128.rs:30:13: 30:18
        _347 = Not(move _348);           // scope 18 at ui/numbers-arithmetic/i128.rs:30:5: 30:19
        switchInt(move _347) -> [0: bb59, otherwise: bb58]; // scope 18 at ui/numbers-arithmetic/i128.rs:30:5: 30:19
    }

    bb58: {
        _351 = core::panicking::panic(const "assertion failed: k < z"); // scope 18 at ui/numbers-arithmetic/i128.rs:30:5: 30:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:30:5: 30:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb59: {
        _354 = _21;                      // scope 18 at ui/numbers-arithmetic/i128.rs:31:13: 31:14
        _355 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:31:17: 31:18
        _353 = Gt(move _354, move _355); // scope 18 at ui/numbers-arithmetic/i128.rs:31:13: 31:18
        _352 = Not(move _353);           // scope 18 at ui/numbers-arithmetic/i128.rs:31:5: 31:19
        switchInt(move _352) -> [0: bb61, otherwise: bb60]; // scope 18 at ui/numbers-arithmetic/i128.rs:31:5: 31:19
    }

    bb60: {
        _356 = core::panicking::panic(const "assertion failed: y > k"); // scope 18 at ui/numbers-arithmetic/i128.rs:31:5: 31:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:31:5: 31:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb61: {
        _359 = _21;                      // scope 18 at ui/numbers-arithmetic/i128.rs:32:13: 32:14
        _360 = _1;                       // scope 18 at ui/numbers-arithmetic/i128.rs:32:17: 32:18
        _358 = Lt(move _359, move _360); // scope 18 at ui/numbers-arithmetic/i128.rs:32:13: 32:18
        _357 = Not(move _358);           // scope 18 at ui/numbers-arithmetic/i128.rs:32:5: 32:19
        switchInt(move _357) -> [0: bb63, otherwise: bb62]; // scope 18 at ui/numbers-arithmetic/i128.rs:32:5: 32:19
    }

    bb62: {
        _361 = core::panicking::panic(const "assertion failed: y < x"); // scope 18 at ui/numbers-arithmetic/i128.rs:32:5: 32:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:32:5: 32:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb63: {
        _365 = _1;                       // scope 18 at ui/numbers-arithmetic/i128.rs:33:16: 33:17
        _364 = move _365 as i64 (IntToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:33:16: 33:24
        _363 = &_364;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1607 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[47])) }
        _366 = _1607;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _362 = (move _363, move _366);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _367 = (_362.0: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _368 = (_362.1: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _371 = (*_367);                  // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _372 = const -1_i64;             // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _370 = Eq(move _371, move _372); // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _369 = Not(move _370);           // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _369) -> [0: bb65, otherwise: bb64]; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb64: {
        _373 = const core::panicking::AssertKind::Eq; // scope 35 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _375 = const core::panicking::AssertKind::Eq; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _377 = _367;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _376 = _377;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _379 = _368;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _378 = _379;                     // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _380 = Option::<Arguments<'_>>::None; // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _374 = core::panicking::assert_failed::<i64, i64>(move _375, move _376, move _378, move _380); // scope 36 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb65: {
        _384 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:34:16: 34:17
        _383 = move _384 as i64 (IntToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:34:16: 34:24
        _382 = &_383;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1606 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[46])) }
        _385 = _1606;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _381 = (move _382, move _385);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _386 = (_381.0: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _387 = (_381.1: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _390 = (*_386);                  // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _391 = const 11259375_i64;       // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _389 = Eq(move _390, move _391); // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _388 = Not(move _389);           // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _388) -> [0: bb67, otherwise: bb66]; // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb66: {
        _392 = const core::panicking::AssertKind::Eq; // scope 37 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _394 = const core::panicking::AssertKind::Eq; // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _396 = _386;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _395 = _396;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _398 = _387;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _397 = _398;                     // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _399 = Option::<Arguments<'_>>::None; // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _393 = core::panicking::assert_failed::<i64, i64>(move _394, move _395, move _397, move _399); // scope 38 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb67: {
        _403 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:35:16: 35:17
        _402 = move _403 as i64 (IntToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:35:16: 35:24
        _401 = &_402;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1605 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[45])) }
        _404 = _1605;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _400 = (move _401, move _404);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _405 = (_400.0: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _406 = (_400.1: &i64);           // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _409 = (*_405);                  // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _410 = const 81985529216486896_i64; // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _408 = Eq(move _409, move _410); // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _407 = Not(move _408);           // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _407) -> [0: bb69, otherwise: bb68]; // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb68: {
        _411 = const core::panicking::AssertKind::Eq; // scope 39 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _413 = const core::panicking::AssertKind::Eq; // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _415 = _405;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _414 = _415;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _417 = _406;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _416 = _417;                     // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _418 = Option::<Arguments<'_>>::None; // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _412 = core::panicking::assert_failed::<i64, i64>(move _413, move _414, move _416, move _418); // scope 40 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb69: {
        _422 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:36:16: 36:17
        _421 = move _422 as u128 (IntToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:36:16: 36:25
        _420 = &_421;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1604 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u128, val: Unevaluated(main, [], Some(promoted[44])) }
        _423 = _1604;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _419 = (move _420, move _423);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _424 = (_419.0: &u128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _425 = (_419.1: &u128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _428 = (*_424);                  // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _429 = const 338770000845734292516042252062085074416_u128; // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _427 = Eq(move _428, move _429); // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _426 = Not(move _427);           // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _426) -> [0: bb71, otherwise: bb70]; // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb70: {
        _430 = const core::panicking::AssertKind::Eq; // scope 41 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _432 = const core::panicking::AssertKind::Eq; // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _434 = _424;                     // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _433 = _434;                     // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _436 = _425;                     // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _435 = _436;                     // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _437 = Option::<Arguments<'_>>::None; // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _431 = core::panicking::assert_failed::<u128, u128>(move _432, move _433, move _435, move _437); // scope 42 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u128, &'b u128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u128, u128>}, val: Value(<ZST>) }
    }

    bb71: {
        _442 = _181;                     // scope 18 at ui/numbers-arithmetic/i128.rs:37:17: 37:18
        _443 = Eq(_442, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:37:16: 37:18
        assert(!move _443, "attempt to negate `{}`, which would overflow", _442) -> bb72; // scope 18 at ui/numbers-arithmetic/i128.rs:37:16: 37:18
    }

    bb72: {
        _441 = Neg(move _442);           // scope 18 at ui/numbers-arithmetic/i128.rs:37:16: 37:18
        _440 = move _441 as u128 (IntToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:37:16: 37:26
        _439 = &_440;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1603 = const _;                 // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u128, val: Unevaluated(main, [], Some(promoted[43])) }
        _444 = _1603;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _438 = (move _439, move _444);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _445 = (_438.0: &u128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _446 = (_438.1: &u128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _449 = (*_445);                  // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _450 = const 1512366075204170947332355369683137040_u128; // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _448 = Eq(move _449, move _450); // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _447 = Not(move _448);           // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _447) -> [0: bb74, otherwise: bb73]; // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb73: {
        _451 = const core::panicking::AssertKind::Eq; // scope 43 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _453 = const core::panicking::AssertKind::Eq; // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _455 = _445;                     // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _454 = _455;                     // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _457 = _446;                     // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _456 = _457;                     // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _458 = Option::<Arguments<'_>>::None; // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _452 = core::panicking::assert_failed::<u128, u128>(move _453, move _454, move _456, move _458); // scope 44 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u128, &'b u128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u128, u128>}, val: Value(<ZST>) }
    }

    bb74: {
        _464 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:38:18: 38:19
        _465 = Eq(_464, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:38:17: 38:19
        assert(!move _465, "attempt to negate `{}`, which would overflow", _464) -> bb75; // scope 18 at ui/numbers-arithmetic/i128.rs:38:17: 38:19
    }

    bb75: {
        _463 = Neg(move _464);           // scope 18 at ui/numbers-arithmetic/i128.rs:38:17: 38:19
        _462 = move _463 as f64 (IntToFloat); // scope 18 at ui/numbers-arithmetic/i128.rs:38:16: 38:27
        _461 = move _462 as i128 (FloatToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:38:16: 38:35
        _460 = &_461;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _468 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:38:38: 38:39
        _469 = Eq(_468, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:38:37: 38:39
        assert(!move _469, "attempt to negate `{}`, which would overflow", _468) -> bb76; // scope 18 at ui/numbers-arithmetic/i128.rs:38:37: 38:39
    }

    bb76: {
        _467 = Neg(move _468);           // scope 18 at ui/numbers-arithmetic/i128.rs:38:37: 38:39
        _466 = &_467;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _459 = (move _460, move _466);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _470 = (_459.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _471 = (_459.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _474 = (*_470);                  // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _475 = (*_471);                  // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _473 = Eq(move _474, move _475); // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _472 = Not(move _473);           // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _472) -> [0: bb78, otherwise: bb77]; // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb77: {
        _476 = const core::panicking::AssertKind::Eq; // scope 45 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _478 = const core::panicking::AssertKind::Eq; // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _480 = _470;                     // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _479 = _480;                     // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _482 = _471;                     // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _481 = _482;                     // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _483 = Option::<Arguments<'_>>::None; // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _477 = core::panicking::assert_failed::<i128, i128>(move _478, move _479, move _481, move _483); // scope 46 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb78: {
        _489 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:39:18: 39:19
        _490 = Eq(_489, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:39:17: 39:19
        assert(!move _490, "attempt to negate `{}`, which would overflow", _489) -> bb79; // scope 18 at ui/numbers-arithmetic/i128.rs:39:17: 39:19
    }

    bb79: {
        _488 = Neg(move _489);           // scope 18 at ui/numbers-arithmetic/i128.rs:39:17: 39:19
        _487 = move _488 as f32 (IntToFloat); // scope 18 at ui/numbers-arithmetic/i128.rs:39:16: 39:27
        _486 = move _487 as i128 (FloatToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:39:16: 39:35
        _485 = &_486;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _493 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:39:38: 39:39
        _494 = Eq(_493, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:39:37: 39:39
        assert(!move _494, "attempt to negate `{}`, which would overflow", _493) -> bb80; // scope 18 at ui/numbers-arithmetic/i128.rs:39:37: 39:39
    }

    bb80: {
        _492 = Neg(move _493);           // scope 18 at ui/numbers-arithmetic/i128.rs:39:37: 39:39
        _491 = &_492;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _484 = (move _485, move _491);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _495 = (_484.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _496 = (_484.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _499 = (*_495);                  // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _500 = (*_496);                  // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _498 = Eq(move _499, move _500); // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _497 = Not(move _498);           // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _497) -> [0: bb82, otherwise: bb81]; // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb81: {
        _501 = const core::panicking::AssertKind::Eq; // scope 47 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _503 = const core::panicking::AssertKind::Eq; // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _505 = _495;                     // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _504 = _505;                     // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _507 = _496;                     // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _506 = _507;                     // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _508 = Option::<Arguments<'_>>::None; // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _502 = core::panicking::assert_failed::<i128, i128>(move _503, move _504, move _506, move _508); // scope 48 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb82: {
        _515 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:40:18: 40:19
        _516 = Eq(_515, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:40:17: 40:19
        assert(!move _516, "attempt to negate `{}`, which would overflow", _515) -> bb83; // scope 18 at ui/numbers-arithmetic/i128.rs:40:17: 40:19
    }

    bb83: {
        _514 = Neg(move _515);           // scope 18 at ui/numbers-arithmetic/i128.rs:40:17: 40:19
        _513 = move _514 as f64 (IntToFloat); // scope 18 at ui/numbers-arithmetic/i128.rs:40:17: 40:26
        _512 = Mul(move _513, const 16f64); // scope 18 at ui/numbers-arithmetic/i128.rs:40:16: 40:34
        _511 = move _512 as i128 (FloatToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:40:16: 40:42
        _510 = &_511;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _520 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:40:45: 40:46
        _521 = Eq(_520, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:46
        assert(!move _521, "attempt to negate `{}`, which would overflow", _520) -> bb84; // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:46
    }

    bb84: {
        _519 = Neg(move _520);           // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:46
        _522 = CheckedMul(_519, const 16_i128); // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:51
        assert(!move (_522.1: bool), "attempt to compute `{} * {}`, which would overflow", move _519, const 16_i128) -> bb85; // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:51
    }

    bb85: {
        _518 = move (_522.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:40:44: 40:51
        _517 = &_518;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _509 = (move _510, move _517);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _523 = (_509.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _524 = (_509.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _527 = (*_523);                  // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _528 = (*_524);                  // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _526 = Eq(move _527, move _528); // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _525 = Not(move _526);           // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _525) -> [0: bb87, otherwise: bb86]; // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb86: {
        _529 = const core::panicking::AssertKind::Eq; // scope 49 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _531 = const core::panicking::AssertKind::Eq; // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _533 = _523;                     // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _532 = _533;                     // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _535 = _524;                     // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _534 = _535;                     // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _536 = Option::<Arguments<'_>>::None; // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _530 = core::panicking::assert_failed::<i128, i128>(move _531, move _532, move _534, move _536); // scope 50 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb87: {
        _543 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:41:18: 41:19
        _544 = Eq(_543, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:41:17: 41:19
        assert(!move _544, "attempt to negate `{}`, which would overflow", _543) -> bb88; // scope 18 at ui/numbers-arithmetic/i128.rs:41:17: 41:19
    }

    bb88: {
        _542 = Neg(move _543);           // scope 18 at ui/numbers-arithmetic/i128.rs:41:17: 41:19
        _541 = move _542 as f32 (IntToFloat); // scope 18 at ui/numbers-arithmetic/i128.rs:41:17: 41:26
        _540 = Mul(move _541, const 16f32); // scope 18 at ui/numbers-arithmetic/i128.rs:41:16: 41:34
        _539 = move _540 as i128 (FloatToInt); // scope 18 at ui/numbers-arithmetic/i128.rs:41:16: 41:42
        _538 = &_539;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _548 = _39;                      // scope 18 at ui/numbers-arithmetic/i128.rs:41:45: 41:46
        _549 = Eq(_548, const i128::MIN); // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:46
        assert(!move _549, "attempt to negate `{}`, which would overflow", _548) -> bb89; // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:46
    }

    bb89: {
        _547 = Neg(move _548);           // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:46
        _550 = CheckedMul(_547, const 16_i128); // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:51
        assert(!move (_550.1: bool), "attempt to compute `{} * {}`, which would overflow", move _547, const 16_i128) -> bb90; // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:51
    }

    bb90: {
        _546 = move (_550.0: i128);      // scope 18 at ui/numbers-arithmetic/i128.rs:41:44: 41:51
        _545 = &_546;                    // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _537 = (move _538, move _545);   // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _551 = (_537.0: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _552 = (_537.1: &i128);          // scope 18 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _555 = (*_551);                  // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _556 = (*_552);                  // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _554 = Eq(move _555, move _556); // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _553 = Not(move _554);           // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _553) -> [0: bb92, otherwise: bb91]; // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb91: {
        _557 = const core::panicking::AssertKind::Eq; // scope 51 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _559 = const core::panicking::AssertKind::Eq; // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _561 = _551;                     // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _560 = _561;                     // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _563 = _552;                     // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _562 = _563;                     // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _564 = Option::<Arguments<'_>>::None; // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _558 = core::panicking::assert_failed::<i128, i128>(move _559, move _560, move _562, move _564); // scope 52 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb92: {
        _565 = test::black_box::<i128>(const -1_i128) -> bb93; // scope 18 at ui/numbers-arithmetic/i128.rs:43:19: 43:24
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:43:19: 43:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb93: {
        _1602 = const _;                 // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[42])) }
        _567 = _1602;                    // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _570 = _565;                     // scope 53 at ui/numbers-arithmetic/i128.rs:44:20: 44:21
        _569 = Not(move _570);           // scope 53 at ui/numbers-arithmetic/i128.rs:44:19: 44:21
        _568 = &_569;                    // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _566 = (move _567, move _568);   // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _571 = (_566.0: &i128);          // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _572 = (_566.1: &i128);          // scope 53 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _575 = const 0_i128;             // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _576 = (*_572);                  // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _574 = Eq(move _575, move _576); // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _573 = Not(move _574);           // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _573) -> [0: bb95, otherwise: bb94]; // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb94: {
        _577 = const core::panicking::AssertKind::Eq; // scope 54 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _579 = const core::panicking::AssertKind::Eq; // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _581 = _571;                     // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _580 = _581;                     // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _583 = _572;                     // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _582 = _583;                     // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _584 = Option::<Arguments<'_>>::None; // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _578 = core::panicking::assert_failed::<i128, i128>(move _579, move _580, move _582, move _584); // scope 55 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb95: {
        _585 = test::black_box::<i128>(const -2_i128) -> bb96; // scope 53 at ui/numbers-arithmetic/i128.rs:45:19: 45:24
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:45:19: 45:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb96: {
        _1601 = const _;                 // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[41])) }
        _587 = _1601;                    // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _588 = &_585;                    // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _586 = (move _587, move _588);   // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _589 = (_586.0: &i128);          // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _590 = (_586.1: &i128);          // scope 56 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _593 = const -2_i128;            // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _594 = (*_590);                  // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _592 = Eq(move _593, move _594); // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _591 = Not(move _592);           // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _591) -> [0: bb98, otherwise: bb97]; // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb97: {
        _595 = const core::panicking::AssertKind::Eq; // scope 57 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _597 = const core::panicking::AssertKind::Eq; // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _599 = _589;                     // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _598 = _599;                     // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _601 = _590;                     // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _600 = _601;                     // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _602 = Option::<Arguments<'_>>::None; // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _596 = core::panicking::assert_failed::<i128, i128>(move _597, move _598, move _600, move _602); // scope 58 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb98: {
        _603 = test::black_box::<i128>(const 11259375_i128) -> bb99; // scope 56 at ui/numbers-arithmetic/i128.rs:47:19: 47:31
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:47:19: 47:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb99: {
        _607 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:48:16: 48:17
        _608 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:48:20: 48:21
        _609 = CheckedMul(_607, _608);   // scope 59 at ui/numbers-arithmetic/i128.rs:48:16: 48:21
        assert(!move (_609.1: bool), "attempt to compute `{} * {}`, which would overflow", move _607, move _608) -> bb100; // scope 59 at ui/numbers-arithmetic/i128.rs:48:16: 48:21
    }

    bb100: {
        _606 = move (_609.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:48:16: 48:21
        _605 = &_606;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1600 = const _;                 // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[40])) }
        _610 = _1600;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _604 = (move _605, move _610);   // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _611 = (_604.0: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _612 = (_604.1: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _615 = (*_611);                  // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _616 = const 126773525390625_i128; // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _614 = Eq(move _615, move _616); // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _613 = Not(move _614);           // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _613) -> [0: bb102, otherwise: bb101]; // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb101: {
        _617 = const core::panicking::AssertKind::Eq; // scope 60 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _619 = const core::panicking::AssertKind::Eq; // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _621 = _611;                     // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _620 = _621;                     // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _623 = _612;                     // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _622 = _623;                     // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _624 = Option::<Arguments<'_>>::None; // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _618 = core::panicking::assert_failed::<i128, i128>(move _619, move _620, move _622, move _624); // scope 61 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb102: {
        _630 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:17
        _631 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:49:20: 49:21
        _632 = CheckedMul(_630, _631);   // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:21
        assert(!move (_632.1: bool), "attempt to compute `{} * {}`, which would overflow", move _630, move _631) -> bb103; // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:21
    }

    bb103: {
        _629 = move (_632.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:21
        _633 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:49:24: 49:25
        _634 = CheckedMul(_629, _633);   // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:25
        assert(!move (_634.1: bool), "attempt to compute `{} * {}`, which would overflow", move _629, move _633) -> bb104; // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:25
    }

    bb104: {
        _628 = move (_634.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:25
        _635 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:49:28: 49:29
        _636 = CheckedMul(_628, _635);   // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:29
        assert(!move (_636.1: bool), "attempt to compute `{} * {}`, which would overflow", move _628, move _635) -> bb105; // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:29
    }

    bb105: {
        _627 = move (_636.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:49:16: 49:29
        _626 = &_627;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1599 = const _;                 // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[39])) }
        _637 = _1599;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _625 = (move _626, move _637);   // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _638 = (_625.0: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _639 = (_625.1: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _642 = (*_638);                  // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _643 = const 16071526739967441558837890625_i128; // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _641 = Eq(move _642, move _643); // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _640 = Not(move _641);           // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _640) -> [0: bb107, otherwise: bb106]; // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb106: {
        _644 = const core::panicking::AssertKind::Eq; // scope 62 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _646 = const core::panicking::AssertKind::Eq; // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _648 = _638;                     // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _647 = _648;                     // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _650 = _639;                     // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _649 = _650;                     // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _651 = Option::<Arguments<'_>>::None; // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _645 = core::panicking::assert_failed::<i128, i128>(move _646, move _647, move _649, move _651); // scope 63 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb107: {
        _656 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:50:17: 50:18
        _657 = Eq(_656, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:18
        assert(!move _657, "attempt to negate `{}`, which would overflow", _656) -> bb108; // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:18
    }

    bb108: {
        _655 = Neg(move _656);           // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:18
        _659 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:50:22: 50:23
        _660 = Eq(_659, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:50:21: 50:23
        assert(!move _660, "attempt to negate `{}`, which would overflow", _659) -> bb109; // scope 59 at ui/numbers-arithmetic/i128.rs:50:21: 50:23
    }

    bb109: {
        _658 = Neg(move _659);           // scope 59 at ui/numbers-arithmetic/i128.rs:50:21: 50:23
        _661 = CheckedMul(_655, _658);   // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:23
        assert(!move (_661.1: bool), "attempt to compute `{} * {}`, which would overflow", move _655, move _658) -> bb110; // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:23
    }

    bb110: {
        _654 = move (_661.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:50:16: 50:23
        _653 = &_654;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1598 = const _;                 // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[38])) }
        _662 = _1598;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _652 = (move _653, move _662);   // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _663 = (_652.0: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _664 = (_652.1: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _667 = (*_663);                  // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _668 = const 126773525390625_i128; // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _666 = Eq(move _667, move _668); // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _665 = Not(move _666);           // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _665) -> [0: bb112, otherwise: bb111]; // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb111: {
        _669 = const core::panicking::AssertKind::Eq; // scope 64 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _671 = const core::panicking::AssertKind::Eq; // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _673 = _663;                     // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _672 = _673;                     // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _675 = _664;                     // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _674 = _675;                     // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _676 = Option::<Arguments<'_>>::None; // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _670 = core::panicking::assert_failed::<i128, i128>(move _671, move _672, move _674, move _676); // scope 65 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb112: {
        _683 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:51:17: 51:18
        _684 = Eq(_683, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:18
        assert(!move _684, "attempt to negate `{}`, which would overflow", _683) -> bb113; // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:18
    }

    bb113: {
        _682 = Neg(move _683);           // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:18
        _686 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:51:22: 51:23
        _687 = Eq(_686, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:51:21: 51:23
        assert(!move _687, "attempt to negate `{}`, which would overflow", _686) -> bb114; // scope 59 at ui/numbers-arithmetic/i128.rs:51:21: 51:23
    }

    bb114: {
        _685 = Neg(move _686);           // scope 59 at ui/numbers-arithmetic/i128.rs:51:21: 51:23
        _688 = CheckedMul(_682, _685);   // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:23
        assert(!move (_688.1: bool), "attempt to compute `{} * {}`, which would overflow", move _682, move _685) -> bb115; // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:23
    }

    bb115: {
        _681 = move (_688.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:23
        _690 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:51:27: 51:28
        _691 = Eq(_690, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:51:26: 51:28
        assert(!move _691, "attempt to negate `{}`, which would overflow", _690) -> bb116; // scope 59 at ui/numbers-arithmetic/i128.rs:51:26: 51:28
    }

    bb116: {
        _689 = Neg(move _690);           // scope 59 at ui/numbers-arithmetic/i128.rs:51:26: 51:28
        _692 = CheckedMul(_681, _689);   // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:28
        assert(!move (_692.1: bool), "attempt to compute `{} * {}`, which would overflow", move _681, move _689) -> bb117; // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:28
    }

    bb117: {
        _680 = move (_692.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:28
        _694 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:51:32: 51:33
        _695 = Eq(_694, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:51:31: 51:33
        assert(!move _695, "attempt to negate `{}`, which would overflow", _694) -> bb118; // scope 59 at ui/numbers-arithmetic/i128.rs:51:31: 51:33
    }

    bb118: {
        _693 = Neg(move _694);           // scope 59 at ui/numbers-arithmetic/i128.rs:51:31: 51:33
        _696 = CheckedMul(_680, _693);   // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:33
        assert(!move (_696.1: bool), "attempt to compute `{} * {}`, which would overflow", move _680, move _693) -> bb119; // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:33
    }

    bb119: {
        _679 = move (_696.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:51:16: 51:33
        _678 = &_679;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1597 = const _;                 // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[37])) }
        _697 = _1597;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _677 = (move _678, move _697);   // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _698 = (_677.0: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _699 = (_677.1: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _702 = (*_698);                  // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _703 = const 16071526739967441558837890625_i128; // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _701 = Eq(move _702, move _703); // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _700 = Not(move _701);           // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _700) -> [0: bb121, otherwise: bb120]; // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb120: {
        _704 = const core::panicking::AssertKind::Eq; // scope 66 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _706 = const core::panicking::AssertKind::Eq; // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _708 = _698;                     // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _707 = _708;                     // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _710 = _699;                     // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _709 = _710;                     // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _711 = Option::<Arguments<'_>>::None; // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _705 = core::panicking::assert_failed::<i128, i128>(move _706, move _707, move _709, move _711); // scope 67 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb121: {
        _718 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:52:17: 52:18
        _719 = Eq(_718, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:18
        assert(!move _719, "attempt to negate `{}`, which would overflow", _718) -> bb122; // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:18
    }

    bb122: {
        _717 = Neg(move _718);           // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:18
        _721 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:52:22: 52:23
        _722 = Eq(_721, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:52:21: 52:23
        assert(!move _722, "attempt to negate `{}`, which would overflow", _721) -> bb123; // scope 59 at ui/numbers-arithmetic/i128.rs:52:21: 52:23
    }

    bb123: {
        _720 = Neg(move _721);           // scope 59 at ui/numbers-arithmetic/i128.rs:52:21: 52:23
        _723 = CheckedAdd(_717, _720);   // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:23
        assert(!move (_723.1: bool), "attempt to compute `{} + {}`, which would overflow", move _717, move _720) -> bb124; // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:23
    }

    bb124: {
        _716 = move (_723.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:23
        _725 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:52:27: 52:28
        _726 = Eq(_725, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:52:26: 52:28
        assert(!move _726, "attempt to negate `{}`, which would overflow", _725) -> bb125; // scope 59 at ui/numbers-arithmetic/i128.rs:52:26: 52:28
    }

    bb125: {
        _724 = Neg(move _725);           // scope 59 at ui/numbers-arithmetic/i128.rs:52:26: 52:28
        _727 = CheckedAdd(_716, _724);   // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:28
        assert(!move (_727.1: bool), "attempt to compute `{} + {}`, which would overflow", move _716, move _724) -> bb126; // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:28
    }

    bb126: {
        _715 = move (_727.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:28
        _729 = _603;                     // scope 59 at ui/numbers-arithmetic/i128.rs:52:32: 52:33
        _730 = Eq(_729, const i128::MIN); // scope 59 at ui/numbers-arithmetic/i128.rs:52:31: 52:33
        assert(!move _730, "attempt to negate `{}`, which would overflow", _729) -> bb127; // scope 59 at ui/numbers-arithmetic/i128.rs:52:31: 52:33
    }

    bb127: {
        _728 = Neg(move _729);           // scope 59 at ui/numbers-arithmetic/i128.rs:52:31: 52:33
        _731 = CheckedAdd(_715, _728);   // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:33
        assert(!move (_731.1: bool), "attempt to compute `{} + {}`, which would overflow", move _715, move _728) -> bb128; // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:33
    }

    bb128: {
        _714 = move (_731.0: i128);      // scope 59 at ui/numbers-arithmetic/i128.rs:52:16: 52:33
        _713 = &_714;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1596 = const _;                 // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[36])) }
        _732 = _1596;                    // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _712 = (move _713, move _732);   // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _733 = (_712.0: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _734 = (_712.1: &i128);          // scope 59 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _737 = (*_733);                  // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _738 = const -45037500_i128;     // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _736 = Eq(move _737, move _738); // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _735 = Not(move _736);           // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _735) -> [0: bb130, otherwise: bb129]; // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb129: {
        _739 = const core::panicking::AssertKind::Eq; // scope 68 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _741 = const core::panicking::AssertKind::Eq; // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _743 = _733;                     // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _742 = _743;                     // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _745 = _734;                     // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _744 = _745;                     // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _746 = Option::<Arguments<'_>>::None; // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _740 = core::panicking::assert_failed::<i128, i128>(move _741, move _742, move _744, move _746); // scope 69 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb130: {
        _747 = test::black_box::<i128>(const -1512366075204170947332355369683137040_i128) -> bb131; // scope 59 at ui/numbers-arithmetic/i128.rs:53:19: 53:63
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:53:19: 53:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb131: {
        _751 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:54:16: 54:17
        _752 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:54:20: 54:21
        _753 = CheckedAdd(_751, _752);   // scope 70 at ui/numbers-arithmetic/i128.rs:54:16: 54:21
        assert(!move (_753.1: bool), "attempt to compute `{} + {}`, which would overflow", move _751, move _752) -> bb132; // scope 70 at ui/numbers-arithmetic/i128.rs:54:16: 54:21
    }

    bb132: {
        _750 = move (_753.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:54:16: 54:21
        _749 = &_750;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1595 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[35])) }
        _754 = _1595;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _748 = (move _749, move _754);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _755 = (_748.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _756 = (_748.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _759 = (*_755);                  // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _760 = const -3024732150408341894664710739366274080_i128; // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _758 = Eq(move _759, move _760); // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _757 = Not(move _758);           // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _757) -> [0: bb134, otherwise: bb133]; // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb133: {
        _761 = const core::panicking::AssertKind::Eq; // scope 71 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _763 = const core::panicking::AssertKind::Eq; // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _765 = _755;                     // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _764 = _765;                     // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _767 = _756;                     // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _766 = _767;                     // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _768 = Option::<Arguments<'_>>::None; // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _762 = core::panicking::assert_failed::<i128, i128>(move _763, move _764, move _766, move _768); // scope 72 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb134: {
        _1594 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[34])) }
        _770 = _1594;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _773 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:55:19: 55:20
        _774 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:55:23: 55:24
        _775 = CheckedSub(_773, _774);   // scope 70 at ui/numbers-arithmetic/i128.rs:55:19: 55:24
        assert(!move (_775.1: bool), "attempt to compute `{} - {}`, which would overflow", move _773, move _774) -> bb135; // scope 70 at ui/numbers-arithmetic/i128.rs:55:19: 55:24
    }

    bb135: {
        _772 = move (_775.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:55:19: 55:24
        _771 = &_772;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _769 = (move _770, move _771);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _776 = (_769.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _777 = (_769.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _780 = const 0_i128;             // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _781 = (*_777);                  // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _779 = Eq(move _780, move _781); // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _778 = Not(move _779);           // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _778) -> [0: bb137, otherwise: bb136]; // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb136: {
        _782 = const core::panicking::AssertKind::Eq; // scope 73 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _784 = const core::panicking::AssertKind::Eq; // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _786 = _776;                     // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _785 = _786;                     // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _788 = _777;                     // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _787 = _788;                     // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _789 = Option::<Arguments<'_>>::None; // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _783 = core::panicking::assert_failed::<i128, i128>(move _784, move _785, move _787, move _789); // scope 74 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb137: {
        _1593 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[33])) }
        _791 = _1593;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _794 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:56:59: 56:60
        _795 = _603;                     // scope 70 at ui/numbers-arithmetic/i128.rs:56:63: 56:64
        _796 = CheckedAdd(_794, _795);   // scope 70 at ui/numbers-arithmetic/i128.rs:56:59: 56:64
        assert(!move (_796.1: bool), "attempt to compute `{} + {}`, which would overflow", move _794, move _795) -> bb138; // scope 70 at ui/numbers-arithmetic/i128.rs:56:59: 56:64
    }

    bb138: {
        _793 = move (_796.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:56:59: 56:64
        _792 = &_793;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _790 = (move _791, move _792);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _797 = (_790.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _798 = (_790.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _801 = const -1512366075204170947332355369671877665_i128; // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _802 = (*_798);                  // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _800 = Eq(move _801, move _802); // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _799 = Not(move _800);           // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _799) -> [0: bb140, otherwise: bb139]; // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb139: {
        _803 = const core::panicking::AssertKind::Eq; // scope 75 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _805 = const core::panicking::AssertKind::Eq; // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _807 = _797;                     // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _806 = _807;                     // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _809 = _798;                     // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _808 = _809;                     // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _810 = Option::<Arguments<'_>>::None; // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _804 = core::panicking::assert_failed::<i128, i128>(move _805, move _806, move _808, move _810); // scope 76 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb140: {
        _1592 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[32])) }
        _812 = _1592;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _815 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:58:16: 58:17
        _816 = CheckedAdd(_815, const 183138079419255074428548309402792464_i128); // scope 70 at ui/numbers-arithmetic/i128.rs:58:16: 58:59
        assert(!move (_816.1: bool), "attempt to compute `{} + {}`, which would overflow", move _815, const 183138079419255074428548309402792464_i128) -> bb141; // scope 70 at ui/numbers-arithmetic/i128.rs:58:16: 58:59
    }

    bb141: {
        _814 = move (_816.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:58:16: 58:59
        _813 = &_814;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _811 = (move _812, move _813);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _817 = (_811.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _818 = (_811.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _821 = const -1329227995784915872903807060280344576_i128; // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _822 = (*_818);                  // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _820 = Eq(move _821, move _822); // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _819 = Not(move _820);           // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _819) -> [0: bb143, otherwise: bb142]; // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb142: {
        _823 = const core::panicking::AssertKind::Eq; // scope 77 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _825 = const core::panicking::AssertKind::Eq; // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _827 = _817;                     // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _826 = _827;                     // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _829 = _818;                     // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _828 = _829;                     // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _830 = Option::<Arguments<'_>>::None; // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _824 = core::panicking::assert_failed::<i128, i128>(move _825, move _826, move _828, move _830); // scope 78 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb143: {
        _1591 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[31])) }
        _832 = _1591;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _835 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:59:57: 59:58
        _834 = Div(move _835, const 42_i128); // scope 70 at ui/numbers-arithmetic/i128.rs:59:57: 59:63
        _833 = &_834;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _831 = (move _832, move _833);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _836 = (_831.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _837 = (_831.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _840 = const -36008716076289784460294175468646120_i128; // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _841 = (*_837);                  // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _839 = Eq(move _840, move _841); // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _838 = Not(move _839);           // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _838) -> [0: bb145, otherwise: bb144]; // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb144: {
        _842 = const core::panicking::AssertKind::Eq; // scope 79 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _844 = const core::panicking::AssertKind::Eq; // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _846 = _836;                     // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _845 = _846;                     // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _848 = _837;                     // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _847 = _848;                     // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _849 = Option::<Arguments<'_>>::None; // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _843 = core::panicking::assert_failed::<i128, i128>(move _844, move _845, move _847, move _849); // scope 80 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb145: {
        _853 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:60:17: 60:18
        _854 = Eq(_853, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:60:16: 60:18
        assert(!move _854, "attempt to negate `{}`, which would overflow", _853) -> bb146; // scope 70 at ui/numbers-arithmetic/i128.rs:60:16: 60:18
    }

    bb146: {
        _852 = Neg(move _853);           // scope 70 at ui/numbers-arithmetic/i128.rs:60:16: 60:18
        _851 = &_852;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _857 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:21
        _858 = const true;               // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
        _859 = Eq(_857, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
        _860 = BitAnd(move _858, move _859); // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
        assert(!move _860, "attempt to compute `{} / {}`, which would overflow", _857, const -1_i128) -> bb147; // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
    }

    bb147: {
        _856 = Div(move _857, const -1_i128); // scope 70 at ui/numbers-arithmetic/i128.rs:60:20: 60:26
        _855 = &_856;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _850 = (move _851, move _855);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _861 = (_850.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _862 = (_850.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _865 = (*_861);                  // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _866 = (*_862);                  // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _864 = Eq(move _865, move _866); // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _863 = Not(move _864);           // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _863) -> [0: bb149, otherwise: bb148]; // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb148: {
        _867 = const core::panicking::AssertKind::Eq; // scope 81 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _869 = const core::panicking::AssertKind::Eq; // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _871 = _861;                     // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _870 = _871;                     // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _873 = _862;                     // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _872 = _873;                     // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _874 = Option::<Arguments<'_>>::None; // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _868 = core::panicking::assert_failed::<i128, i128>(move _869, move _870, move _872, move _874); // scope 82 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb149: {
        _1590 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[30])) }
        _876 = _1590;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _879 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:61:38: 61:39
        _880 = CheckedShr(_879, const 65_i32); // scope 70 at ui/numbers-arithmetic/i128.rs:61:38: 61:45
        assert(!move (_880.1: bool), "attempt to shift right by `{}`, which would overflow", const 65_i32) -> bb150; // scope 70 at ui/numbers-arithmetic/i128.rs:61:38: 61:45
    }

    bb150: {
        _878 = move (_880.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:61:38: 61:45
        _877 = &_878;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _875 = (move _876, move _877);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _881 = (_875.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _882 = (_875.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _885 = const -40992764608243448_i128; // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _886 = (*_882);                  // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _884 = Eq(move _885, move _886); // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _883 = Not(move _884);           // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _883) -> [0: bb152, otherwise: bb151]; // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb151: {
        _887 = const core::panicking::AssertKind::Eq; // scope 83 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _889 = const core::panicking::AssertKind::Eq; // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _891 = _881;                     // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _890 = _891;                     // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _893 = _882;                     // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _892 = _893;                     // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _894 = Option::<Arguments<'_>>::None; // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _888 = core::panicking::assert_failed::<i128, i128>(move _889, move _890, move _892, move _894); // scope 84 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb152: {
        _1589 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[29])) }
        _896 = _1589;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _899 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:62:60: 62:61
        _900 = CheckedShl(_899, const 65_i32); // scope 70 at ui/numbers-arithmetic/i128.rs:62:60: 62:67
        assert(!move (_900.1: bool), "attempt to shift left by `{}`, which would overflow", const 65_i32) -> bb153; // scope 70 at ui/numbers-arithmetic/i128.rs:62:60: 62:67
    }

    bb153: {
        _898 = move (_900.0: i128);      // scope 70 at ui/numbers-arithmetic/i128.rs:62:60: 62:67
        _897 = &_898;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _895 = (move _896, move _897);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _901 = (_895.0: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _902 = (_895.1: &i128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _905 = const 3024732150408341894828681797799247872_i128; // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _906 = (*_902);                  // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _904 = Eq(move _905, move _906); // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _903 = Not(move _904);           // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _903) -> [0: bb155, otherwise: bb154]; // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb154: {
        _907 = const core::panicking::AssertKind::Eq; // scope 85 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _909 = const core::panicking::AssertKind::Eq; // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _911 = _901;                     // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _910 = _911;                     // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _913 = _902;                     // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _912 = _913;                     // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _914 = Option::<Arguments<'_>>::None; // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _908 = core::panicking::assert_failed::<i128, i128>(move _909, move _910, move _912, move _914); // scope 86 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb155: {
        _917 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:63:13: 63:14
        _918 = _603;                     // scope 70 at ui/numbers-arithmetic/i128.rs:63:17: 63:18
        _916 = Lt(move _917, move _918); // scope 70 at ui/numbers-arithmetic/i128.rs:63:13: 63:18
        _915 = Not(move _916);           // scope 70 at ui/numbers-arithmetic/i128.rs:63:5: 63:19
        switchInt(move _915) -> [0: bb157, otherwise: bb156]; // scope 70 at ui/numbers-arithmetic/i128.rs:63:5: 63:19
    }

    bb156: {
        _919 = core::panicking::panic(const "assertion failed: k < z"); // scope 70 at ui/numbers-arithmetic/i128.rs:63:5: 63:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:63:5: 63:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb157: {
        _922 = _585;                     // scope 70 at ui/numbers-arithmetic/i128.rs:64:13: 64:14
        _923 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:64:17: 64:18
        _921 = Gt(move _922, move _923); // scope 70 at ui/numbers-arithmetic/i128.rs:64:13: 64:18
        _920 = Not(move _921);           // scope 70 at ui/numbers-arithmetic/i128.rs:64:5: 64:19
        switchInt(move _920) -> [0: bb159, otherwise: bb158]; // scope 70 at ui/numbers-arithmetic/i128.rs:64:5: 64:19
    }

    bb158: {
        _924 = core::panicking::panic(const "assertion failed: y > k"); // scope 70 at ui/numbers-arithmetic/i128.rs:64:5: 64:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:64:5: 64:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb159: {
        _927 = _585;                     // scope 70 at ui/numbers-arithmetic/i128.rs:65:13: 65:14
        _928 = _565;                     // scope 70 at ui/numbers-arithmetic/i128.rs:65:17: 65:18
        _926 = Lt(move _927, move _928); // scope 70 at ui/numbers-arithmetic/i128.rs:65:13: 65:18
        _925 = Not(move _926);           // scope 70 at ui/numbers-arithmetic/i128.rs:65:5: 65:19
        switchInt(move _925) -> [0: bb161, otherwise: bb160]; // scope 70 at ui/numbers-arithmetic/i128.rs:65:5: 65:19
    }

    bb160: {
        _929 = core::panicking::panic(const "assertion failed: y < x"); // scope 70 at ui/numbers-arithmetic/i128.rs:65:5: 65:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:65:5: 65:19
                                         // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: no-location
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }

    bb161: {
        _933 = _565;                     // scope 70 at ui/numbers-arithmetic/i128.rs:66:16: 66:17
        _932 = move _933 as i64 (IntToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:66:16: 66:24
        _931 = &_932;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1588 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[28])) }
        _934 = _1588;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _930 = (move _931, move _934);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _935 = (_930.0: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _936 = (_930.1: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _939 = (*_935);                  // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _940 = const -1_i64;             // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _938 = Eq(move _939, move _940); // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _937 = Not(move _938);           // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _937) -> [0: bb163, otherwise: bb162]; // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb162: {
        _941 = const core::panicking::AssertKind::Eq; // scope 87 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _943 = const core::panicking::AssertKind::Eq; // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _945 = _935;                     // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _944 = _945;                     // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _947 = _936;                     // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _946 = _947;                     // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _948 = Option::<Arguments<'_>>::None; // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _942 = core::panicking::assert_failed::<i64, i64>(move _943, move _944, move _946, move _948); // scope 88 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb163: {
        _952 = _603;                     // scope 70 at ui/numbers-arithmetic/i128.rs:67:16: 67:17
        _951 = move _952 as i64 (IntToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:67:16: 67:24
        _950 = &_951;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1587 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[27])) }
        _953 = _1587;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _949 = (move _950, move _953);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _954 = (_949.0: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _955 = (_949.1: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _958 = (*_954);                  // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _959 = const 11259375_i64;       // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _957 = Eq(move _958, move _959); // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _956 = Not(move _957);           // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _956) -> [0: bb165, otherwise: bb164]; // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb164: {
        _960 = const core::panicking::AssertKind::Eq; // scope 89 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _962 = const core::panicking::AssertKind::Eq; // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _964 = _954;                     // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _963 = _964;                     // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _966 = _955;                     // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _965 = _966;                     // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _967 = Option::<Arguments<'_>>::None; // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _961 = core::panicking::assert_failed::<i64, i64>(move _962, move _963, move _965, move _967); // scope 90 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb165: {
        _971 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:68:16: 68:17
        _970 = move _971 as i64 (IntToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:68:16: 68:24
        _969 = &_970;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1586 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i64, val: Unevaluated(main, [], Some(promoted[26])) }
        _972 = _1586;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _968 = (move _969, move _972);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _973 = (_968.0: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _974 = (_968.1: &i64);           // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _977 = (*_973);                  // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _978 = const 81985529216486896_i64; // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _976 = Eq(move _977, move _978); // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _975 = Not(move _976);           // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _975) -> [0: bb167, otherwise: bb166]; // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb166: {
        _979 = const core::panicking::AssertKind::Eq; // scope 91 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _981 = const core::panicking::AssertKind::Eq; // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _983 = _973;                     // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _982 = _983;                     // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _985 = _974;                     // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _984 = _985;                     // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _986 = Option::<Arguments<'_>>::None; // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _980 = core::panicking::assert_failed::<i64, i64>(move _981, move _982, move _984, move _986); // scope 92 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i64, &'b i64, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i64, i64>}, val: Value(<ZST>) }
    }

    bb167: {
        _990 = _747;                     // scope 70 at ui/numbers-arithmetic/i128.rs:69:16: 69:17
        _989 = move _990 as u128 (IntToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:69:16: 69:25
        _988 = &_989;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1585 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u128, val: Unevaluated(main, [], Some(promoted[25])) }
        _991 = _1585;                    // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _987 = (move _988, move _991);   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _992 = (_987.0: &u128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _993 = (_987.1: &u128);          // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _996 = (*_992);                  // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _997 = const 338770000845734292516042252062085074416_u128; // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _995 = Eq(move _996, move _997); // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _994 = Not(move _995);           // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _994) -> [0: bb169, otherwise: bb168]; // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb168: {
        _998 = const core::panicking::AssertKind::Eq; // scope 93 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1000 = const core::panicking::AssertKind::Eq; // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1002 = _992;                    // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1001 = _1002;                   // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1004 = _993;                    // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1003 = _1004;                   // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1005 = Option::<Arguments<'_>>::None; // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _999 = core::panicking::assert_failed::<u128, u128>(move _1000, move _1001, move _1003, move _1005); // scope 94 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u128, &'b u128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u128, u128>}, val: Value(<ZST>) }
    }

    bb169: {
        _1010 = _747;                    // scope 70 at ui/numbers-arithmetic/i128.rs:70:17: 70:18
        _1011 = Eq(_1010, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:70:16: 70:18
        assert(!move _1011, "attempt to negate `{}`, which would overflow", _1010) -> bb170; // scope 70 at ui/numbers-arithmetic/i128.rs:70:16: 70:18
    }

    bb170: {
        _1009 = Neg(move _1010);         // scope 70 at ui/numbers-arithmetic/i128.rs:70:16: 70:18
        _1008 = move _1009 as u128 (IntToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:70:16: 70:26
        _1007 = &_1008;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1584 = const _;                 // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &u128, val: Unevaluated(main, [], Some(promoted[24])) }
        _1012 = _1584;                   // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1006 = (move _1007, move _1012); // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1013 = (_1006.0: &u128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1014 = (_1006.1: &u128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1017 = (*_1013);                // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1018 = const 1512366075204170947332355369683137040_u128; // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1016 = Eq(move _1017, move _1018); // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1015 = Not(move _1016);         // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1015) -> [0: bb172, otherwise: bb171]; // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb171: {
        _1019 = const core::panicking::AssertKind::Eq; // scope 95 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1021 = const core::panicking::AssertKind::Eq; // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1023 = _1013;                   // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1022 = _1023;                   // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1025 = _1014;                   // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1024 = _1025;                   // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1026 = Option::<Arguments<'_>>::None; // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1020 = core::panicking::assert_failed::<u128, u128>(move _1021, move _1022, move _1024, move _1026); // scope 96 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a u128, &'b u128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<u128, u128>}, val: Value(<ZST>) }
    }

    bb172: {
        _1032 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:71:18: 71:19
        _1033 = Eq(_1032, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:71:17: 71:19
        assert(!move _1033, "attempt to negate `{}`, which would overflow", _1032) -> bb173; // scope 70 at ui/numbers-arithmetic/i128.rs:71:17: 71:19
    }

    bb173: {
        _1031 = Neg(move _1032);         // scope 70 at ui/numbers-arithmetic/i128.rs:71:17: 71:19
        _1030 = move _1031 as f64 (IntToFloat); // scope 70 at ui/numbers-arithmetic/i128.rs:71:16: 71:27
        _1029 = move _1030 as i128 (FloatToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:71:16: 71:35
        _1028 = &_1029;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1036 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:71:38: 71:39
        _1037 = Eq(_1036, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:71:37: 71:39
        assert(!move _1037, "attempt to negate `{}`, which would overflow", _1036) -> bb174; // scope 70 at ui/numbers-arithmetic/i128.rs:71:37: 71:39
    }

    bb174: {
        _1035 = Neg(move _1036);         // scope 70 at ui/numbers-arithmetic/i128.rs:71:37: 71:39
        _1034 = &_1035;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1027 = (move _1028, move _1034); // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1038 = (_1027.0: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1039 = (_1027.1: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1042 = (*_1038);                // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1043 = (*_1039);                // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1041 = Eq(move _1042, move _1043); // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1040 = Not(move _1041);         // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1040) -> [0: bb176, otherwise: bb175]; // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb175: {
        _1044 = const core::panicking::AssertKind::Eq; // scope 97 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1046 = const core::panicking::AssertKind::Eq; // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1048 = _1038;                   // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1047 = _1048;                   // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1050 = _1039;                   // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1049 = _1050;                   // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1051 = Option::<Arguments<'_>>::None; // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1045 = core::panicking::assert_failed::<i128, i128>(move _1046, move _1047, move _1049, move _1051); // scope 98 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb176: {
        _1057 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:72:18: 72:19
        _1058 = Eq(_1057, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:72:17: 72:19
        assert(!move _1058, "attempt to negate `{}`, which would overflow", _1057) -> bb177; // scope 70 at ui/numbers-arithmetic/i128.rs:72:17: 72:19
    }

    bb177: {
        _1056 = Neg(move _1057);         // scope 70 at ui/numbers-arithmetic/i128.rs:72:17: 72:19
        _1055 = move _1056 as f32 (IntToFloat); // scope 70 at ui/numbers-arithmetic/i128.rs:72:16: 72:27
        _1054 = move _1055 as i128 (FloatToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:72:16: 72:35
        _1053 = &_1054;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1061 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:72:38: 72:39
        _1062 = Eq(_1061, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:72:37: 72:39
        assert(!move _1062, "attempt to negate `{}`, which would overflow", _1061) -> bb178; // scope 70 at ui/numbers-arithmetic/i128.rs:72:37: 72:39
    }

    bb178: {
        _1060 = Neg(move _1061);         // scope 70 at ui/numbers-arithmetic/i128.rs:72:37: 72:39
        _1059 = &_1060;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1052 = (move _1053, move _1059); // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1063 = (_1052.0: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1064 = (_1052.1: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1067 = (*_1063);                // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1068 = (*_1064);                // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1066 = Eq(move _1067, move _1068); // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1065 = Not(move _1066);         // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1065) -> [0: bb180, otherwise: bb179]; // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb179: {
        _1069 = const core::panicking::AssertKind::Eq; // scope 99 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1071 = const core::panicking::AssertKind::Eq; // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1073 = _1063;                   // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1072 = _1073;                   // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1075 = _1064;                   // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1074 = _1075;                   // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1076 = Option::<Arguments<'_>>::None; // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1070 = core::panicking::assert_failed::<i128, i128>(move _1071, move _1072, move _1074, move _1076); // scope 100 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb180: {
        _1083 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:73:18: 73:19
        _1084 = Eq(_1083, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:73:17: 73:19
        assert(!move _1084, "attempt to negate `{}`, which would overflow", _1083) -> bb181; // scope 70 at ui/numbers-arithmetic/i128.rs:73:17: 73:19
    }

    bb181: {
        _1082 = Neg(move _1083);         // scope 70 at ui/numbers-arithmetic/i128.rs:73:17: 73:19
        _1081 = move _1082 as f64 (IntToFloat); // scope 70 at ui/numbers-arithmetic/i128.rs:73:17: 73:26
        _1080 = Mul(move _1081, const 16f64); // scope 70 at ui/numbers-arithmetic/i128.rs:73:16: 73:34
        _1079 = move _1080 as i128 (FloatToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:73:16: 73:42
        _1078 = &_1079;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1088 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:73:45: 73:46
        _1089 = Eq(_1088, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:46
        assert(!move _1089, "attempt to negate `{}`, which would overflow", _1088) -> bb182; // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:46
    }

    bb182: {
        _1087 = Neg(move _1088);         // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:46
        _1090 = CheckedMul(_1087, const 16_i128); // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:51
        assert(!move (_1090.1: bool), "attempt to compute `{} * {}`, which would overflow", move _1087, const 16_i128) -> bb183; // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:51
    }

    bb183: {
        _1086 = move (_1090.0: i128);    // scope 70 at ui/numbers-arithmetic/i128.rs:73:44: 73:51
        _1085 = &_1086;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1077 = (move _1078, move _1085); // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1091 = (_1077.0: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1092 = (_1077.1: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1095 = (*_1091);                // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1096 = (*_1092);                // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1094 = Eq(move _1095, move _1096); // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1093 = Not(move _1094);         // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1093) -> [0: bb185, otherwise: bb184]; // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb184: {
        _1097 = const core::panicking::AssertKind::Eq; // scope 101 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1099 = const core::panicking::AssertKind::Eq; // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1101 = _1091;                   // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1100 = _1101;                   // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1103 = _1092;                   // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1102 = _1103;                   // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1104 = Option::<Arguments<'_>>::None; // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1098 = core::panicking::assert_failed::<i128, i128>(move _1099, move _1100, move _1102, move _1104); // scope 102 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb185: {
        _1111 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:74:18: 74:19
        _1112 = Eq(_1111, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:74:17: 74:19
        assert(!move _1112, "attempt to negate `{}`, which would overflow", _1111) -> bb186; // scope 70 at ui/numbers-arithmetic/i128.rs:74:17: 74:19
    }

    bb186: {
        _1110 = Neg(move _1111);         // scope 70 at ui/numbers-arithmetic/i128.rs:74:17: 74:19
        _1109 = move _1110 as f32 (IntToFloat); // scope 70 at ui/numbers-arithmetic/i128.rs:74:17: 74:26
        _1108 = Mul(move _1109, const 16f32); // scope 70 at ui/numbers-arithmetic/i128.rs:74:16: 74:34
        _1107 = move _1108 as i128 (FloatToInt); // scope 70 at ui/numbers-arithmetic/i128.rs:74:16: 74:42
        _1106 = &_1107;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1116 = _603;                    // scope 70 at ui/numbers-arithmetic/i128.rs:74:45: 74:46
        _1117 = Eq(_1116, const i128::MIN); // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:46
        assert(!move _1117, "attempt to negate `{}`, which would overflow", _1116) -> bb187; // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:46
    }

    bb187: {
        _1115 = Neg(move _1116);         // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:46
        _1118 = CheckedMul(_1115, const 16_i128); // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:51
        assert(!move (_1118.1: bool), "attempt to compute `{} * {}`, which would overflow", move _1115, const 16_i128) -> bb188; // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:51
    }

    bb188: {
        _1114 = move (_1118.0: i128);    // scope 70 at ui/numbers-arithmetic/i128.rs:74:44: 74:51
        _1113 = &_1114;                  // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1105 = (move _1106, move _1113); // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1119 = (_1105.0: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1120 = (_1105.1: &i128);        // scope 70 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1123 = (*_1119);                // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1124 = (*_1120);                // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1122 = Eq(move _1123, move _1124); // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1121 = Not(move _1122);         // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1121) -> [0: bb190, otherwise: bb189]; // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb189: {
        _1125 = const core::panicking::AssertKind::Eq; // scope 103 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1127 = const core::panicking::AssertKind::Eq; // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1129 = _1119;                   // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1128 = _1129;                   // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1131 = _1120;                   // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1130 = _1131;                   // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1132 = Option::<Arguments<'_>>::None; // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1126 = core::panicking::assert_failed::<i128, i128>(move _1127, move _1128, move _1130, move _1132); // scope 104 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb190: {
        _1134 = const 147573952589676412928_i128; // scope 70 at ui/numbers-arithmetic/i128.rs:76:20: 76:29
        _1133 = Neg(move _1134);         // scope 70 at ui/numbers-arithmetic/i128.rs:76:19: 76:29
        _1583 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[23])) }
        _1136 = _1583;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1582 = const _;                 // scope 105 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:77:50: 77:54
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[22])) }
        _1143 = _1582;                   // scope 105 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
        _1142 = _1143;                   // scope 105 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
        _1141 = move _1142 as &[&str] (Pointer(Unsize)); // scope 105 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
        _1150 = &_1133;                  // scope 105 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
        _1149 = _1150;                   // scope 105 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
        _1148 = core::fmt::ArgumentV1::<'_>::new_display::<i128>(move _1149) -> bb191; // scope 105 at ui/numbers-arithmetic/i128.rs:77:56: 77:57
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:77:56: 77:57
                                         // + user_ty: UserType(19)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i128>}, val: Value(<ZST>) }
    }

    bb191: {
        _1147 = [move _1148];            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1146 = &_1147;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1145 = _1146;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1144 = move _1145 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1140 = Arguments::<'_>::new_v1(move _1141, move _1144) -> bb192; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(18)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb192: {
        _1139 = format(move _1140) -> bb193; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb193: {
        _1138 = move _1139;              // scope 106 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _1137 = &_1138;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1135 = (move _1136, move _1137); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1151 = (_1135.0: &&str);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1152 = (_1135.1: &std::string::String); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1155 = _1151;                   // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1156 = _1152;                   // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1154 = <&str as PartialEq<String>>::eq(move _1155, move _1156) -> [return: bb194, unwind: bb293]; // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb194: {
        _1153 = Not(move _1154);         // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1153) -> [0: bb196, otherwise: bb195]; // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb195: {
        _1157 = const core::panicking::AssertKind::Eq; // scope 107 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1159 = const core::panicking::AssertKind::Eq; // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1161 = _1151;                   // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1160 = _1161;                   // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1163 = _1152;                   // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1162 = _1163;                   // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1164 = Option::<Arguments<'_>>::None; // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1158 = core::panicking::assert_failed::<&str, String>(move _1159, move _1160, move _1162, move _1164) -> bb293; // scope 108 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb196: {
        drop(_1138) -> bb197;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb197: {
        _1581 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[21])) }
        _1166 = _1581;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1580 = const _;                 // scope 105 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:78:60: 78:66
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[20])) }
        _1173 = _1580;                   // scope 105 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
        _1172 = _1173;                   // scope 105 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
        _1171 = move _1172 as &[&str] (Pointer(Unsize)); // scope 105 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
        _1180 = &_1133;                  // scope 105 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
        _1179 = _1180;                   // scope 105 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
        _1178 = core::fmt::ArgumentV1::<'_>::new_lower_hex::<i128>(move _1179) -> bb198; // scope 105 at ui/numbers-arithmetic/i128.rs:78:68: 78:69
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:78:68: 78:69
                                         // + user_ty: UserType(21)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_lower_hex::<i128>}, val: Value(<ZST>) }
    }

    bb198: {
        _1177 = [move _1178];            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1176 = &_1177;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1175 = _1176;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1174 = move _1175 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1170 = Arguments::<'_>::new_v1(move _1171, move _1174) -> bb199; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(20)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb199: {
        _1169 = format(move _1170) -> bb200; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb200: {
        _1168 = move _1169;              // scope 109 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _1167 = &_1168;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1165 = (move _1166, move _1167); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1181 = (_1165.0: &&str);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1182 = (_1165.1: &std::string::String); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1185 = _1181;                   // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1186 = _1182;                   // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1184 = <&str as PartialEq<String>>::eq(move _1185, move _1186) -> [return: bb201, unwind: bb292]; // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb201: {
        _1183 = Not(move _1184);         // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1183) -> [0: bb203, otherwise: bb202]; // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb202: {
        _1187 = const core::panicking::AssertKind::Eq; // scope 110 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1189 = const core::panicking::AssertKind::Eq; // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1191 = _1181;                   // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1190 = _1191;                   // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1193 = _1182;                   // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1192 = _1193;                   // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1194 = Option::<Arguments<'_>>::None; // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1188 = core::panicking::assert_failed::<&str, String>(move _1189, move _1190, move _1192, move _1194) -> bb292; // scope 111 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb203: {
        drop(_1168) -> bb204;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb204: {
        _1579 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[19])) }
        _1196 = _1579;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1578 = const _;                 // scope 105 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:79:71: 79:77
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[18])) }
        _1203 = _1578;                   // scope 105 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
        _1202 = _1203;                   // scope 105 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
        _1201 = move _1202 as &[&str] (Pointer(Unsize)); // scope 105 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
        _1210 = &_1133;                  // scope 105 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
        _1209 = _1210;                   // scope 105 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
        _1208 = core::fmt::ArgumentV1::<'_>::new_octal::<i128>(move _1209) -> bb205; // scope 105 at ui/numbers-arithmetic/i128.rs:79:79: 79:80
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:79:79: 79:80
                                         // + user_ty: UserType(23)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_octal::<i128>}, val: Value(<ZST>) }
    }

    bb205: {
        _1207 = [move _1208];            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1206 = &_1207;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1205 = _1206;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1204 = move _1205 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1200 = Arguments::<'_>::new_v1(move _1201, move _1204) -> bb206; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(22)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb206: {
        _1199 = format(move _1200) -> bb207; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb207: {
        _1198 = move _1199;              // scope 112 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _1197 = &_1198;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1195 = (move _1196, move _1197); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1211 = (_1195.0: &&str);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1212 = (_1195.1: &std::string::String); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1215 = _1211;                   // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1216 = _1212;                   // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1214 = <&str as PartialEq<String>>::eq(move _1215, move _1216) -> [return: bb208, unwind: bb291]; // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb208: {
        _1213 = Not(move _1214);         // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1213) -> [0: bb210, otherwise: bb209]; // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb209: {
        _1217 = const core::panicking::AssertKind::Eq; // scope 113 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1219 = const core::panicking::AssertKind::Eq; // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1221 = _1211;                   // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1220 = _1221;                   // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1223 = _1212;                   // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1222 = _1223;                   // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1224 = Option::<Arguments<'_>>::None; // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1218 = core::panicking::assert_failed::<&str, String>(move _1219, move _1220, move _1222, move _1224) -> bb291; // scope 114 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb210: {
        drop(_1198) -> bb211;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb211: {
        _1577 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[17])) }
        _1226 = _1577;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1576 = const _;                 // scope 105 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:82:24: 82:30
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[16])) }
        _1233 = _1576;                   // scope 105 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
        _1232 = _1233;                   // scope 105 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
        _1231 = move _1232 as &[&str] (Pointer(Unsize)); // scope 105 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
        _1240 = &_1133;                  // scope 105 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
        _1239 = _1240;                   // scope 105 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
        _1238 = core::fmt::ArgumentV1::<'_>::new_binary::<i128>(move _1239) -> bb212; // scope 105 at ui/numbers-arithmetic/i128.rs:82:32: 82:33
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:82:32: 82:33
                                         // + user_ty: UserType(25)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_binary::<i128>}, val: Value(<ZST>) }
    }

    bb212: {
        _1237 = [move _1238];            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1236 = &_1237;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1235 = _1236;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1234 = move _1235 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1230 = Arguments::<'_>::new_v1(move _1231, move _1234) -> bb213; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(24)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb213: {
        _1229 = format(move _1230) -> bb214; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb214: {
        _1228 = move _1229;              // scope 115 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _1227 = &_1228;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1225 = (move _1226, move _1227); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1241 = (_1225.0: &&str);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1242 = (_1225.1: &std::string::String); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1245 = _1241;                   // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1246 = _1242;                   // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1244 = <&str as PartialEq<String>>::eq(move _1245, move _1246) -> [return: bb215, unwind: bb290]; // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb215: {
        _1243 = Not(move _1244);         // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1243) -> [0: bb217, otherwise: bb216]; // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb216: {
        _1247 = const core::panicking::AssertKind::Eq; // scope 116 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1249 = const core::panicking::AssertKind::Eq; // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1251 = _1241;                   // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1250 = _1251;                   // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1253 = _1242;                   // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1252 = _1253;                   // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1254 = Option::<Arguments<'_>>::None; // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1248 = core::panicking::assert_failed::<&str, String>(move _1249, move _1250, move _1252, move _1254) -> bb290; // scope 117 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb217: {
        drop(_1228) -> bb218;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb218: {
        _1575 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &&str, val: Unevaluated(main, [], Some(promoted[15])) }
        _1256 = _1575;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1574 = const _;                 // scope 105 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:83:50: 83:56
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(main, [], Some(promoted[14])) }
        _1263 = _1574;                   // scope 105 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
        _1262 = _1263;                   // scope 105 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
        _1261 = move _1262 as &[&str] (Pointer(Unsize)); // scope 105 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
        _1270 = &_1133;                  // scope 105 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
        _1269 = _1270;                   // scope 105 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
        _1268 = core::fmt::ArgumentV1::<'_>::new_debug::<i128>(move _1269) -> bb219; // scope 105 at ui/numbers-arithmetic/i128.rs:83:58: 83:59
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:83:58: 83:59
                                         // + user_ty: UserType(27)
                                         // + literal: Const { ty: for<'b> fn(&'b i128) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i128>}, val: Value(<ZST>) }
    }

    bb219: {
        _1267 = [move _1268];            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1266 = &_1267;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1265 = _1266;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1264 = move _1265 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
        _1260 = Arguments::<'_>::new_v1(move _1261, move _1264) -> bb220; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:39: 118:79
                                         // + user_ty: UserType(26)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb220: {
        _1259 = format(move _1260) -> bb221; // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:80
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:118:19: 118:38
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> String {format}, val: Value(<ZST>) }
    }

    bb221: {
        _1258 = move _1259;              // scope 118 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/alloc/src/macros.rs:119:9: 119:12
        _1257 = &_1258;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1255 = (move _1256, move _1257); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1271 = (_1255.0: &&str);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1272 = (_1255.1: &std::string::String); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1275 = _1271;                   // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1276 = _1272;                   // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1274 = <&str as PartialEq<String>>::eq(move _1275, move _1276) -> [return: bb222, unwind: bb289]; // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &str, &'b String) -> bool {<&str as PartialEq<String>>::eq}, val: Value(<ZST>) }
    }

    bb222: {
        _1273 = Not(move _1274);         // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1273) -> [0: bb224, otherwise: bb223]; // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb223: {
        _1277 = const core::panicking::AssertKind::Eq; // scope 119 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1279 = const core::panicking::AssertKind::Eq; // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1281 = _1271;                   // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1280 = _1281;                   // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1283 = _1272;                   // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1282 = _1283;                   // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1284 = Option::<Arguments<'_>>::None; // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1278 = core::panicking::assert_failed::<&str, String>(move _1279, move _1280, move _1282, move _1284) -> bb289; // scope 120 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &str, &'b String, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&str, String>}, val: Value(<ZST>) }
    }

    bb224: {
        drop(_1258) -> bb225;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb225: {
        _1286 = &_565;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1290 = &_565;                   // scope 105 at ui/numbers-arithmetic/i128.rs:85:21: 85:30
        _1289 = (*_1290);                // scope 105 at ui/numbers-arithmetic/i128.rs:85:21: 85:30
        _1288 = test::black_box::<i128>(move _1289) -> bb226; // scope 105 at ui/numbers-arithmetic/i128.rs:85:19: 85:31
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:85:19: 85:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb226: {
        _1287 = &_1288;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1285 = (move _1286, move _1287); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1291 = (_1285.0: &i128);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1292 = (_1285.1: &i128);        // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1295 = (*_1291);                // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1296 = (*_1292);                // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1294 = Eq(move _1295, move _1296); // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1293 = Not(move _1294);         // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1293) -> [0: bb228, otherwise: bb227]; // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb227: {
        _1297 = const core::panicking::AssertKind::Eq; // scope 121 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1299 = const core::panicking::AssertKind::Eq; // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1301 = _1291;                   // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1300 = _1301;                   // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1303 = _1292;                   // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1302 = _1303;                   // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1304 = Option::<Arguments<'_>>::None; // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1298 = core::panicking::assert_failed::<i128, i128>(move _1299, move _1300, move _1302, move _1304); // scope 122 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb228: {
        _1309 = _603;                    // scope 105 at ui/numbers-arithmetic/i128.rs:87:18: 87:19
        _1310 = Eq(_1309, const i128::MIN); // scope 105 at ui/numbers-arithmetic/i128.rs:87:16: 87:20
        assert(!move _1310, "attempt to negate `{}`, which would overflow", _1309) -> bb229; // scope 105 at ui/numbers-arithmetic/i128.rs:87:16: 87:20
    }

    bb229: {
        _1308 = Neg(move _1309);         // scope 105 at ui/numbers-arithmetic/i128.rs:87:16: 87:20
        _1312 = _603;                    // scope 105 at ui/numbers-arithmetic/i128.rs:87:34: 87:35
        _1313 = Eq(_1312, const i128::MIN); // scope 105 at ui/numbers-arithmetic/i128.rs:87:33: 87:35
        assert(!move _1313, "attempt to negate `{}`, which would overflow", _1312) -> bb230; // scope 105 at ui/numbers-arithmetic/i128.rs:87:33: 87:35
    }

    bb230: {
        _1311 = Neg(move _1312);         // scope 105 at ui/numbers-arithmetic/i128.rs:87:33: 87:35
        _1307 = core::num::<impl i128>::checked_mul(move _1308, move _1311) -> bb231; // scope 105 at ui/numbers-arithmetic/i128.rs:87:16: 87:36
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:87:21: 87:32
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_mul}, val: Value(<ZST>) }
    }

    bb231: {
        _1306 = &_1307;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1573 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[13])) }
        _1314 = _1573;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1305 = (move _1306, move _1314); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1315 = (_1305.0: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1316 = (_1305.1: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1319 = _1315;                   // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1320 = _1316;                   // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1318 = <Option<i128> as PartialEq>::eq(move _1319, move _1320) -> bb232; // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb232: {
        _1317 = Not(move _1318);         // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1317) -> [0: bb234, otherwise: bb233]; // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb233: {
        _1321 = const core::panicking::AssertKind::Eq; // scope 123 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1323 = const core::panicking::AssertKind::Eq; // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1325 = _1315;                   // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1324 = _1325;                   // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1327 = _1316;                   // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1326 = _1327;                   // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1328 = Option::<Arguments<'_>>::None; // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1322 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1323, move _1324, move _1326, move _1328); // scope 124 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb234: {
        _1332 = _603;                    // scope 105 at ui/numbers-arithmetic/i128.rs:88:16: 88:19
        _1333 = _603;                    // scope 105 at ui/numbers-arithmetic/i128.rs:88:32: 88:33
        _1331 = core::num::<impl i128>::checked_mul(move _1332, move _1333) -> bb235; // scope 105 at ui/numbers-arithmetic/i128.rs:88:16: 88:34
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:88:20: 88:31
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_mul}, val: Value(<ZST>) }
    }

    bb235: {
        _1330 = &_1331;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1572 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[12])) }
        _1334 = _1572;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1329 = (move _1330, move _1334); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1335 = (_1329.0: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1336 = (_1329.1: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1339 = _1335;                   // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1340 = _1336;                   // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1338 = <Option<i128> as PartialEq>::eq(move _1339, move _1340) -> bb236; // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb236: {
        _1337 = Not(move _1338);         // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1337) -> [0: bb238, otherwise: bb237]; // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb237: {
        _1341 = const core::panicking::AssertKind::Eq; // scope 125 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1343 = const core::panicking::AssertKind::Eq; // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1345 = _1335;                   // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1344 = _1345;                   // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1347 = _1336;                   // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1346 = _1347;                   // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1348 = Option::<Arguments<'_>>::None; // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1342 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1343, move _1344, move _1346, move _1348); // scope 126 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb238: {
        _1352 = _747;                    // scope 105 at ui/numbers-arithmetic/i128.rs:89:16: 89:19
        _1353 = _747;                    // scope 105 at ui/numbers-arithmetic/i128.rs:89:32: 89:33
        _1351 = core::num::<impl i128>::checked_mul(move _1352, move _1353) -> bb239; // scope 105 at ui/numbers-arithmetic/i128.rs:89:16: 89:34
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:89:20: 89:31
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_mul}, val: Value(<ZST>) }
    }

    bb239: {
        _1350 = &_1351;                  // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1571 = const _;                 // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[11])) }
        _1354 = _1571;                   // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1349 = (move _1350, move _1354); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1355 = (_1349.0: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1356 = (_1349.1: &std::option::Option<i128>); // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1359 = _1355;                   // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1360 = _1356;                   // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1358 = <Option<i128> as PartialEq>::eq(move _1359, move _1360) -> bb240; // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb240: {
        _1357 = Not(move _1358);         // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1357) -> [0: bb242, otherwise: bb241]; // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb241: {
        _1361 = const core::panicking::AssertKind::Eq; // scope 127 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1363 = const core::panicking::AssertKind::Eq; // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1365 = _1355;                   // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1364 = _1365;                   // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1367 = _1356;                   // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1366 = _1367;                   // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1368 = Option::<Arguments<'_>>::None; // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1362 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1363, move _1364, move _1366, move _1368); // scope 128 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb242: {
        _1369 = test::black_box::<i128>(const _) -> bb243; // scope 105 at ui/numbers-arithmetic/i128.rs:90:19: 90:31
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:90:19: 90:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb243: {
        _1370 = test::black_box::<i128>(const 17_i128) -> bb244; // scope 129 at ui/numbers-arithmetic/i128.rs:91:19: 91:24
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:91:19: 91:20
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb244: {
        _1374 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:92:16: 92:17
        _1375 = test::black_box::<i128>(const 2_i128) -> bb245; // scope 130 at ui/numbers-arithmetic/i128.rs:92:30: 92:34
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:92:30: 92:31
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb245: {
        _1373 = core::num::<impl i128>::checked_sub(move _1374, move _1375) -> bb246; // scope 130 at ui/numbers-arithmetic/i128.rs:92:16: 92:35
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:92:18: 92:29
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_sub}, val: Value(<ZST>) }
    }

    bb246: {
        _1372 = &_1373;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1570 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[10])) }
        _1376 = _1570;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1371 = (move _1372, move _1376); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1377 = (_1371.0: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1378 = (_1371.1: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1381 = _1377;                   // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1382 = _1378;                   // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1380 = <Option<i128> as PartialEq>::eq(move _1381, move _1382) -> bb247; // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb247: {
        _1379 = Not(move _1380);         // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1379) -> [0: bb249, otherwise: bb248]; // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb248: {
        _1383 = const core::panicking::AssertKind::Eq; // scope 131 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1385 = const core::panicking::AssertKind::Eq; // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1387 = _1377;                   // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1386 = _1387;                   // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1389 = _1378;                   // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1388 = _1389;                   // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1390 = Option::<Arguments<'_>>::None; // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1384 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1385, move _1386, move _1388, move _1390); // scope 132 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb249: {
        _1394 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:93:16: 93:17
        _1395 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:93:30: 93:31
        _1393 = core::num::<impl i128>::checked_add(move _1394, move _1395) -> bb250; // scope 130 at ui/numbers-arithmetic/i128.rs:93:16: 93:32
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:93:18: 93:29
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_add}, val: Value(<ZST>) }
    }

    bb250: {
        _1392 = &_1393;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1569 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[9])) }
        _1396 = _1569;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1391 = (move _1392, move _1396); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1397 = (_1391.0: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1398 = (_1391.1: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1401 = _1397;                   // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1402 = _1398;                   // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1400 = <Option<i128> as PartialEq>::eq(move _1401, move _1402) -> bb251; // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb251: {
        _1399 = Not(move _1400);         // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1399) -> [0: bb253, otherwise: bb252]; // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb252: {
        _1403 = const core::panicking::AssertKind::Eq; // scope 133 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1405 = const core::panicking::AssertKind::Eq; // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1407 = _1397;                   // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1406 = _1407;                   // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1409 = _1398;                   // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1408 = _1409;                   // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1410 = Option::<Arguments<'_>>::None; // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1404 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1405, move _1406, move _1408, move _1410); // scope 134 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb253: {
        _1416 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:94:19: 94:20
        _1417 = CheckedAdd(_1416, const 1_i128); // scope 130 at ui/numbers-arithmetic/i128.rs:94:18: 94:25
        assert(!move (_1417.1: bool), "attempt to compute `{} + {}`, which would overflow", move _1416, const 1_i128) -> bb254; // scope 130 at ui/numbers-arithmetic/i128.rs:94:18: 94:25
    }

    bb254: {
        _1415 = move (_1417.0: i128);    // scope 130 at ui/numbers-arithmetic/i128.rs:94:18: 94:25
        _1418 = Eq(_1415, const i128::MIN); // scope 130 at ui/numbers-arithmetic/i128.rs:94:16: 94:26
        assert(!move _1418, "attempt to negate `{}`, which would overflow", _1415) -> bb255; // scope 130 at ui/numbers-arithmetic/i128.rs:94:16: 94:26
    }

    bb255: {
        _1414 = Neg(move _1415);         // scope 130 at ui/numbers-arithmetic/i128.rs:94:16: 94:26
        _1413 = core::num::<impl i128>::checked_add(move _1414, const 2_i128) -> bb256; // scope 130 at ui/numbers-arithmetic/i128.rs:94:16: 94:41
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:94:27: 94:38
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_add}, val: Value(<ZST>) }
    }

    bb256: {
        _1412 = &_1413;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1568 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[8])) }
        _1419 = _1568;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1411 = (move _1412, move _1419); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1420 = (_1411.0: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1421 = (_1411.1: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1424 = _1420;                   // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1425 = _1421;                   // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1423 = <Option<i128> as PartialEq>::eq(move _1424, move _1425) -> bb257; // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb257: {
        _1422 = Not(move _1423);         // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1422) -> [0: bb259, otherwise: bb258]; // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb258: {
        _1426 = const core::panicking::AssertKind::Eq; // scope 135 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1428 = const core::panicking::AssertKind::Eq; // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1430 = _1420;                   // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1429 = _1430;                   // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1432 = _1421;                   // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1431 = _1432;                   // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1433 = Option::<Arguments<'_>>::None; // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1427 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1428, move _1429, move _1431, move _1433); // scope 136 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb259: {
        _1437 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:95:16: 95:17
        _1438 = _1369;                   // scope 130 at ui/numbers-arithmetic/i128.rs:95:30: 95:31
        _1436 = core::num::<impl i128>::checked_sub(move _1437, move _1438) -> bb260; // scope 130 at ui/numbers-arithmetic/i128.rs:95:16: 95:32
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:95:18: 95:29
                                         // + literal: Const { ty: fn(i128, i128) -> Option<i128> {core::num::<impl i128>::checked_sub}, val: Value(<ZST>) }
    }

    bb260: {
        _1435 = &_1436;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1567 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[7])) }
        _1439 = _1567;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1434 = (move _1435, move _1439); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1440 = (_1434.0: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1441 = (_1434.1: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1444 = _1440;                   // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1445 = _1441;                   // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1443 = <Option<i128> as PartialEq>::eq(move _1444, move _1445) -> bb261; // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb261: {
        _1442 = Not(move _1443);         // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1442) -> [0: bb263, otherwise: bb262]; // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb262: {
        _1446 = const core::panicking::AssertKind::Eq; // scope 137 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1448 = const core::panicking::AssertKind::Eq; // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1450 = _1440;                   // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1449 = _1450;                   // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1452 = _1441;                   // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1451 = _1452;                   // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1453 = Option::<Arguments<'_>>::None; // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1447 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1448, move _1449, move _1451, move _1453); // scope 138 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb263: {
        _1457 = test::black_box::<u128>(const 1_u128) -> bb264; // scope 130 at ui/numbers-arithmetic/i128.rs:96:16: 96:24
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:96:16: 96:17
                                         // + literal: Const { ty: fn(u128) -> u128 {test::black_box::<u128>}, val: Value(<ZST>) }
    }

    bb264: {
        _1458 = test::black_box::<u32>(const 127_u32) -> bb265; // scope 130 at ui/numbers-arithmetic/i128.rs:96:37: 96:43
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:96:37: 96:38
                                         // + literal: Const { ty: fn(u32) -> u32 {test::black_box::<u32>}, val: Value(<ZST>) }
    }

    bb265: {
        _1456 = core::num::<impl u128>::checked_shl(move _1457, move _1458) -> bb266; // scope 130 at ui/numbers-arithmetic/i128.rs:96:16: 96:44
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:96:25: 96:36
                                         // + literal: Const { ty: fn(u128, u32) -> Option<u128> {core::num::<impl u128>::checked_shl}, val: Value(<ZST>) }
    }

    bb266: {
        _1455 = &_1456;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1566 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<u128>, val: Unevaluated(main, [], Some(promoted[6])) }
        _1459 = _1566;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1454 = (move _1455, move _1459); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1460 = (_1454.0: &std::option::Option<u128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1461 = (_1454.1: &std::option::Option<u128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1464 = _1460;                   // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1465 = _1461;                   // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1463 = <Option<u128> as PartialEq>::eq(move _1464, move _1465) -> bb267; // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<u128>, &'b Option<u128>) -> bool {<Option<u128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb267: {
        _1462 = Not(move _1463);         // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1462) -> [0: bb269, otherwise: bb268]; // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb268: {
        _1466 = const core::panicking::AssertKind::Eq; // scope 139 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1468 = const core::panicking::AssertKind::Eq; // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1470 = _1460;                   // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1469 = _1470;                   // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1472 = _1461;                   // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1471 = _1472;                   // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1473 = Option::<Arguments<'_>>::None; // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1467 = core::panicking::assert_failed::<Option<u128>, Option<u128>>(move _1468, move _1469, move _1471, move _1473); // scope 140 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<u128>, &'b Option<u128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<u128>, Option<u128>>}, val: Value(<ZST>) }
    }

    bb269: {
        _1477 = _1370;                   // scope 130 at ui/numbers-arithmetic/i128.rs:97:16: 97:17
        _1478 = test::black_box::<u32>(const 128_u32) -> bb270; // scope 130 at ui/numbers-arithmetic/i128.rs:97:30: 97:36
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:97:30: 97:31
                                         // + literal: Const { ty: fn(u32) -> u32 {test::black_box::<u32>}, val: Value(<ZST>) }
    }

    bb270: {
        _1476 = core::num::<impl i128>::checked_shl(move _1477, move _1478) -> bb271; // scope 130 at ui/numbers-arithmetic/i128.rs:97:16: 97:37
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:97:18: 97:29
                                         // + literal: Const { ty: fn(i128, u32) -> Option<i128> {core::num::<impl i128>::checked_shl}, val: Value(<ZST>) }
    }

    bb271: {
        _1475 = &_1476;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1565 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &Option<i128>, val: Unevaluated(main, [], Some(promoted[5])) }
        _1479 = _1565;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1474 = (move _1475, move _1479); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1480 = (_1474.0: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1481 = (_1474.1: &std::option::Option<i128>); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1484 = _1480;                   // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1485 = _1481;                   // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1483 = <Option<i128> as PartialEq>::eq(move _1484, move _1485) -> bb272; // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a Option<i128>, &'b Option<i128>) -> bool {<Option<i128> as PartialEq>::eq}, val: Value(<ZST>) }
    }

    bb272: {
        _1482 = Not(move _1483);         // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1482) -> [0: bb274, otherwise: bb273]; // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb273: {
        _1486 = const core::panicking::AssertKind::Eq; // scope 141 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1488 = const core::panicking::AssertKind::Eq; // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1490 = _1480;                   // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1489 = _1490;                   // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1492 = _1481;                   // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1491 = _1492;                   // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1493 = Option::<Arguments<'_>>::None; // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1487 = core::panicking::assert_failed::<Option<i128>, Option<i128>>(move _1488, move _1489, move _1491, move _1493); // scope 142 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a Option<i128>, &'b Option<i128>, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<Option<i128>, Option<i128>>}, val: Value(<ZST>) }
    }

    bb274: {
        _1497 = test::black_box::<i128>(const -87559967289969187895646876466835277875_i128) -> bb275; // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 100:63
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:100:16: 100:17
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb275: {
        _1498 = test::black_box::<i128>(const 84285771033834995895337664386045050880_i128) -> bb276; // scope 130 at ui/numbers-arithmetic/i128.rs:101:16: 101:62
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:101:16: 101:17
                                         // + literal: Const { ty: fn(i128) -> i128 {test::black_box::<i128>}, val: Value(<ZST>) }
    }

    bb276: {
        _1499 = Eq(_1498, const 0_i128); // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
        assert(!move _1499, "attempt to divide `{}` by zero", _1497) -> bb277; // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    }

    bb277: {
        _1500 = Eq(_1498, const -1_i128); // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
        _1501 = Eq(_1497, const i128::MIN); // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
        _1502 = BitAnd(move _1500, move _1501); // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
        assert(!move _1502, "attempt to compute `{} / {}`, which would overflow", _1497, _1498) -> bb278; // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
    }

    bb278: {
        _1496 = Div(move _1497, move _1498); // scope 130 at ui/numbers-arithmetic/i128.rs:100:16: 101:62
        _1495 = &_1496;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1564 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[4])) }
        _1503 = _1564;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1494 = (move _1495, move _1503); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1504 = (_1494.0: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1505 = (_1494.1: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1508 = (*_1504);                // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1509 = const -1_i128;           // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1507 = Eq(move _1508, move _1509); // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1506 = Not(move _1507);         // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1506) -> [0: bb280, otherwise: bb279]; // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb279: {
        _1510 = const core::panicking::AssertKind::Eq; // scope 143 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1512 = const core::panicking::AssertKind::Eq; // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1514 = _1504;                   // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1513 = _1514;                   // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1516 = _1505;                   // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1515 = _1516;                   // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1517 = Option::<Arguments<'_>>::None; // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1511 = core::panicking::assert_failed::<i128, i128>(move _1512, move _1513, move _1515, move _1517); // scope 144 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb280: {
        _1563 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[3])) }
        _1519 = _1563;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1562 = const _;                 // scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:105:24: 105:47
                                         // + literal: Const { ty: &[i128; 4], val: Unevaluated(main, [], Some(promoted[2])) }
        _1524 = _1562;                   // scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
        _1523 = move _1524 as &[i128] (Pointer(Unsize)); // scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
        _1522 = core::slice::<impl [i128]>::iter(move _1523) -> bb281; // scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:105:41: 105:45
                                         // + literal: Const { ty: for<'a> fn(&'a [i128]) -> std::slice::Iter<'a, i128> {core::slice::<impl [i128]>::iter}, val: Value(<ZST>) }
    }

    bb281: {
        _1521 = <std::slice::Iter<'_, i128> as Iterator>::sum::<i128>(move _1522) -> bb282; // scope 130 at ui/numbers-arithmetic/i128.rs:105:24: 105:53
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:105:48: 105:51
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i128>) -> i128 {<std::slice::Iter<'_, i128> as Iterator>::sum::<i128>}, val: Value(<ZST>) }
    }

    bb282: {
        _1520 = &_1521;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1518 = (move _1519, move _1520); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1525 = (_1518.0: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1526 = (_1518.1: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1529 = const 10_i128;           // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1530 = (*_1526);                // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1528 = Eq(move _1529, move _1530); // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1527 = Not(move _1528);         // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1527) -> [0: bb284, otherwise: bb283]; // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb283: {
        _1531 = const core::panicking::AssertKind::Eq; // scope 145 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1533 = const core::panicking::AssertKind::Eq; // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1535 = _1525;                   // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1534 = _1535;                   // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1537 = _1526;                   // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1536 = _1537;                   // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1538 = Option::<Arguments<'_>>::None; // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1532 = core::panicking::assert_failed::<i128, i128>(move _1533, move _1534, move _1536, move _1538); // scope 146 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb284: {
        _1561 = const _;                 // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
                                         // + literal: Const { ty: &i128, val: Unevaluated(main, [], Some(promoted[1])) }
        _1540 = _1561;                   // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _1560 = const _;                 // scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:106:24: 106:47
                                         // + literal: Const { ty: &[i128; 4], val: Unevaluated(main, [], Some(promoted[0])) }
        _1545 = _1560;                   // scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
        _1544 = move _1545 as &[i128] (Pointer(Unsize)); // scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
        _1543 = core::slice::<impl [i128]>::iter(move _1544) -> bb285; // scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:106:41: 106:45
                                         // + literal: Const { ty: for<'a> fn(&'a [i128]) -> std::slice::Iter<'a, i128> {core::slice::<impl [i128]>::iter}, val: Value(<ZST>) }
    }

    bb285: {
        _1542 = <std::slice::Iter<'_, i128> as Iterator>::product::<i128>(move _1543) -> bb286; // scope 130 at ui/numbers-arithmetic/i128.rs:106:24: 106:57
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:106:48: 106:55
                                         // + literal: Const { ty: fn(std::slice::Iter<'_, i128>) -> i128 {<std::slice::Iter<'_, i128> as Iterator>::product::<i128>}, val: Value(<ZST>) }
    }

    bb286: {
        _1541 = &_1542;                  // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1539 = (move _1540, move _1541); // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _1546 = (_1539.0: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _1547 = (_1539.1: &i128);        // scope 130 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _1550 = const 24_i128;           // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _1551 = (*_1547);                // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _1549 = Eq(move _1550, move _1551); // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _1548 = Not(move _1549);         // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _1548) -> [0: bb288, otherwise: bb287]; // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb287: {
        _1552 = const core::panicking::AssertKind::Eq; // scope 147 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1554 = const core::panicking::AssertKind::Eq; // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _1556 = _1546;                   // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1555 = _1556;                   // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _1558 = _1547;                   // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1557 = _1558;                   // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _1559 = Option::<Arguments<'_>>::None; // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _1553 = core::panicking::assert_failed::<i128, i128>(move _1554, move _1555, move _1557, move _1559); // scope 148 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a i128, &'b i128, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<i128, i128>}, val: Value(<ZST>) }
    }

    bb288: {
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:107:2: 107:2
    }

    bb289 (cleanup): {
        drop(_1258) -> bb294;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb290 (cleanup): {
        drop(_1228) -> bb294;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb291 (cleanup): {
        drop(_1198) -> bb294;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb292 (cleanup): {
        drop(_1168) -> bb294;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb293 (cleanup): {
        drop(_1138) -> bb294;            // scope 105 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:48:9: 48:10
    }

    bb294 (cleanup): {
        resume;                          // scope 0 at ui/numbers-arithmetic/i128.rs:9:1: 107:2
    }
}

promoted[0] in main: &[i128; 4] = {
    let mut _0: &[i128; 4];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
    let mut _1: [i128; 4];               // in scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:40

    bb0: {
        _1 = [const 1_i128, const 2_i128, const 3_i128, const 4_i128]; // scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:40
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:106:24: 106:47
    }
}

promoted[1] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:106:16: 106:22

    bb0: {
        _1 = const 24_i128;              // scope 0 at ui/numbers-arithmetic/i128.rs:106:16: 106:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[2] in main: &[i128; 4] = {
    let mut _0: &[i128; 4];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
    let mut _1: [i128; 4];               // in scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:40

    bb0: {
        _1 = [const 1_i128, const 2_i128, const 3_i128, const 4_i128]; // scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:40
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:105:24: 105:47
    }
}

promoted[3] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:105:16: 105:22

    bb0: {
        _1 = const 10_i128;              // scope 0 at ui/numbers-arithmetic/i128.rs:105:16: 105:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[4] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:102:16: 102:22

    bb0: {
        _1 = const -1_i128;              // scope 0 at ui/numbers-arithmetic/i128.rs:102:16: 102:22
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[5] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:97:39: 97:43

    bb0: {
        _1 = Option::<i128>::None;       // scope 0 at ui/numbers-arithmetic/i128.rs:97:39: 97:43
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[6] in main: &Option<u128> = {
    let mut _0: &std::option::Option<u128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<u128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:96:46: 96:60
    let mut _2: u128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:96:51: 96:59
    let mut _3: (u128, bool);            // in scope 0 at ui/numbers-arithmetic/i128.rs:96:51: 96:59

    bb0: {
        _3 = CheckedShl(const 1_u128, const 127_i32); // scope 0 at ui/numbers-arithmetic/i128.rs:96:51: 96:59
        _2 = move (_3.0: u128);          // scope 0 at ui/numbers-arithmetic/i128.rs:96:51: 96:59
        _1 = Option::<u128>::Some(move _2); // scope 0 at ui/numbers-arithmetic/i128.rs:96:46: 96:60
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[7] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:95:34: 95:41

    bb0: {
        _1 = Option::<i128>::Some(const 0_i128); // scope 0 at ui/numbers-arithmetic/i128.rs:95:34: 95:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[8] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:94:43: 94:47

    bb0: {
        _1 = Option::<i128>::None;       // scope 0 at ui/numbers-arithmetic/i128.rs:94:43: 94:47
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[9] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:93:34: 93:38

    bb0: {
        _1 = Option::<i128>::None;       // scope 0 at ui/numbers-arithmetic/i128.rs:93:34: 93:38
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[10] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:92:37: 92:41

    bb0: {
        _1 = Option::<i128>::None;       // scope 0 at ui/numbers-arithmetic/i128.rs:92:37: 92:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[11] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:89:36: 89:40

    bb0: {
        _1 = Option::<i128>::None;       // scope 0 at ui/numbers-arithmetic/i128.rs:89:36: 89:40
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[12] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:88:36: 88:58

    bb0: {
        _1 = Option::<i128>::Some(const 126773525390625_i128); // scope 0 at ui/numbers-arithmetic/i128.rs:88:36: 88:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[13] in main: &Option<i128> = {
    let mut _0: &std::option::Option<i128>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: std::option::Option<i128>; // in scope 0 at ui/numbers-arithmetic/i128.rs:87:38: 87:60

    bb0: {
        _1 = Option::<i128>::Some(const 126773525390625_i128); // scope 0 at ui/numbers-arithmetic/i128.rs:87:38: 87:60
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[14] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
    let mut _1: [&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:83:50: 83:56
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:83:50: 83:56
    }
}

promoted[15] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:83:16: 83:40

    bb0: {
        _1 = const "-147573952589676412928"; // scope 0 at ui/numbers-arithmetic/i128.rs:83:16: 83:40
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:83:16: 83:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[16] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
    let mut _1: [&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:82:24: 82:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:82:24: 82:30
    }
}

promoted[17] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:80:16: 81:85

    bb0: {
        _1 = const "11111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000"; // scope 0 at ui/numbers-arithmetic/i128.rs:80:16: 81:85
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:80:16: 81:85
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[18] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
    let mut _1: [&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:79:71: 79:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:79:71: 79:77
    }
}

promoted[19] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:79:16: 79:61

    bb0: {
        _1 = const "3777777777777777777760000000000000000000000"; // scope 0 at ui/numbers-arithmetic/i128.rs:79:16: 79:61
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:79:16: 79:61
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[20] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
    let mut _1: [&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:78:60: 78:66
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:78:60: 78:66
    }
}

promoted[21] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:78:16: 78:50

    bb0: {
        _1 = const "fffffffffffffff80000000000000000"; // scope 0 at ui/numbers-arithmetic/i128.rs:78:16: 78:50
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:78:16: 78:50
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[22] in main: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
    let mut _1: [&str; 1];               // in scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54

    bb0: {
        _1 = [const ""];                 // scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:77:50: 77:54
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
        return;                          // scope 0 at ui/numbers-arithmetic/i128.rs:77:50: 77:54
    }
}

promoted[23] in main: &&str = {
    let mut _0: &&str;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: &str;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:77:16: 77:40

    bb0: {
        _1 = const "-147573952589676412928"; // scope 0 at ui/numbers-arithmetic/i128.rs:77:16: 77:40
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/i128.rs:77:16: 77:40
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[24] in main: &u128 = {
    let mut _0: &u128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:70:28: 70:68

    bb0: {
        _1 = const 1512366075204170947332355369683137040_u128; // scope 0 at ui/numbers-arithmetic/i128.rs:70:28: 70:68
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[25] in main: &u128 = {
    let mut _0: &u128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:69:27: 69:68

    bb0: {
        _1 = const 338770000845734292516042252062085074416_u128; // scope 0 at ui/numbers-arithmetic/i128.rs:69:27: 69:68
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[26] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:68:26: 68:48

    bb0: {
        _1 = const 81985529216486896_i64; // scope 0 at ui/numbers-arithmetic/i128.rs:68:26: 68:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[27] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:67:26: 67:35

    bb0: {
        _1 = const 11259375_i64;         // scope 0 at ui/numbers-arithmetic/i128.rs:67:26: 67:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[28] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:66:26: 66:28

    bb0: {
        _1 = const -1_i64;               // scope 0 at ui/numbers-arithmetic/i128.rs:66:26: 66:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[29] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:62:16: 62:58

    bb0: {
        _1 = const 3024732150408341894828681797799247872_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:62:16: 62:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[30] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:61:16: 61:36

    bb0: {
        _1 = const -40992764608243448_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:61:16: 61:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[31] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:59:16: 59:55

    bb0: {
        _1 = const -36008716076289784460294175468646120_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:59:16: 59:55
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[32] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:57:16: 57:57

    bb0: {
        _1 = const -1329227995784915872903807060280344576_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:57:16: 57:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[33] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:56:16: 56:57

    bb0: {
        _1 = const -1512366075204170947332355369671877665_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:56:16: 56:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[34] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:55:16: 55:17

    bb0: {
        _1 = const 0_i128;               // scope 0 at ui/numbers-arithmetic/i128.rs:55:16: 55:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[35] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:54:23: 54:64

    bb0: {
        _1 = const -3024732150408341894664710739366274080_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:54:23: 54:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[36] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:52:35: 52:46

    bb0: {
        _1 = const -45037500_i128;       // scope 0 at ui/numbers-arithmetic/i128.rs:52:35: 52:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[37] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:51:35: 51:66

    bb0: {
        _1 = const 16071526739967441558837890625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:51:35: 51:66
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[38] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:50:25: 50:41

    bb0: {
        _1 = const 126773525390625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:50:25: 50:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[39] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:49:31: 49:62

    bb0: {
        _1 = const 16071526739967441558837890625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:49:31: 49:62
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[40] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:48:23: 48:39

    bb0: {
        _1 = const 126773525390625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:48:23: 48:39
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[41] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:46:16: 46:18

    bb0: {
        _1 = Not(const 1_i128);          // scope 0 at ui/numbers-arithmetic/i128.rs:46:16: 46:18
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[42] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:44:16: 44:17

    bb0: {
        _1 = const 0_i128;               // scope 0 at ui/numbers-arithmetic/i128.rs:44:16: 44:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[43] in main: &u128 = {
    let mut _0: &u128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:37:28: 37:68

    bb0: {
        _1 = const 1512366075204170947332355369683137040_u128; // scope 0 at ui/numbers-arithmetic/i128.rs:37:28: 37:68
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[44] in main: &u128 = {
    let mut _0: &u128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:36:27: 36:68

    bb0: {
        _1 = const 338770000845734292516042252062085074416_u128; // scope 0 at ui/numbers-arithmetic/i128.rs:36:27: 36:68
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[45] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:35:26: 35:48

    bb0: {
        _1 = const 81985529216486896_i64; // scope 0 at ui/numbers-arithmetic/i128.rs:35:26: 35:48
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[46] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:34:26: 34:35

    bb0: {
        _1 = const 11259375_i64;         // scope 0 at ui/numbers-arithmetic/i128.rs:34:26: 34:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[47] in main: &i64 = {
    let mut _0: &i64;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i64;                     // in scope 0 at ui/numbers-arithmetic/i128.rs:33:26: 33:28

    bb0: {
        _1 = const -1_i64;               // scope 0 at ui/numbers-arithmetic/i128.rs:33:26: 33:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[48] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:29:16: 29:58

    bb0: {
        _1 = const 3024732150408341894828681797799247872_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:29:16: 29:58
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[49] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:28:16: 28:36

    bb0: {
        _1 = const -40992764608243448_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:28:16: 28:36
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[50] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:26:16: 26:55

    bb0: {
        _1 = const -36008716076289784460294175468646120_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:26:16: 26:55
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[51] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:24:16: 24:57

    bb0: {
        _1 = const -1329227995784915872903807060280344576_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:24:16: 24:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[52] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:23:16: 23:57

    bb0: {
        _1 = const -1512366075204170947332355369671877665_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:23:16: 23:57
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[53] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:22:16: 22:17

    bb0: {
        _1 = const 0_i128;               // scope 0 at ui/numbers-arithmetic/i128.rs:22:16: 22:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[54] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:21:23: 21:64

    bb0: {
        _1 = const -3024732150408341894664710739366274080_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:21:23: 21:64
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[55] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:19:35: 19:46

    bb0: {
        _1 = const -45037500_i128;       // scope 0 at ui/numbers-arithmetic/i128.rs:19:35: 19:46
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[56] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:18:35: 18:66

    bb0: {
        _1 = const 16071526739967441558837890625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:18:35: 18:66
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[57] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:17:25: 17:41

    bb0: {
        _1 = const 126773525390625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:17:25: 17:41
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[58] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:16:31: 16:62

    bb0: {
        _1 = const 16071526739967441558837890625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:16:31: 16:62
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[59] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:15:23: 15:39

    bb0: {
        _1 = const 126773525390625_i128; // scope 0 at ui/numbers-arithmetic/i128.rs:15:23: 15:39
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[60] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:13:16: 13:18

    bb0: {
        _1 = Not(const 1_i128);          // scope 0 at ui/numbers-arithmetic/i128.rs:13:16: 13:18
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}

promoted[61] in main: &i128 = {
    let mut _0: &i128;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let mut _1: i128;                    // in scope 0 at ui/numbers-arithmetic/i128.rs:11:16: 11:17

    bb0: {
        _1 = const 0_i128;               // scope 0 at ui/numbers-arithmetic/i128.rs:11:16: 11:17
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    }
}
