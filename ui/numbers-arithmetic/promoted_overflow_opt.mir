// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:5:11: 5:11
    let _1: &u32;                        // in scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:9: 6:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:9: 6:10
        let _2: &u32;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _3: &u32;                    // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        scope 2 {
            debug left_val => _2;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _3;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _4: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _4;        // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:9: 6:10
        StorageLive(_2);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        StorageLive(_3);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        StorageDead(_3);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:47:13: 47:14
        StorageDead(_2);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:47:13: 47:14
        StorageDead(_1);                 // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:8:1: 8:2
        return;                          // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:8:2: 8:2
    }
}

promoted[0] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: u32;                     // in scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:7:20: 7:28

    bb0: {
        _1 = const _;                    // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:7:20: 7:28
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &u32 = {
    let mut _0: &u32;                    // return place in scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:13: 6:24
    let mut _1: u32;                     // in scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:14: 6:24

    bb0: {
        _1 = Sub(const 0_u32, const 1_u32); // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:14: 6:24
        _0 = &_1;                        // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:13: 6:24
        return;                          // scope 0 at ui/numbers-arithmetic/promoted_overflow_opt.rs:6:13: 6:24
    }
}
