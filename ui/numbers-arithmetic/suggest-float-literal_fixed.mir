// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn add_integer_to_f32(_1: f32) -> f32 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:5:23: 5:24
    let mut _0: f32;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:5:34: 5:37
    let mut _2: f32;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:6:5: 6:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:6:5: 6:6
        _0 = Add(move _2, const 100f32); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:6:5: 6:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:7:2: 7:2
    }
}

fn add_integer_to_f64(_1: f64) -> f64 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:9:23: 9:24
    let mut _0: f64;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:9:34: 9:37
    let mut _2: f64;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:10:5: 10:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:10:5: 10:6
        _0 = Add(move _2, const 100f64); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:10:5: 10:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:11:2: 11:2
    }
}

fn subtract_integer_from_f32(_1: f32) -> f32 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:13:30: 13:31
    let mut _0: f32;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:13:41: 13:44
    let mut _2: f32;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:14:5: 14:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:14:5: 14:6
        _0 = Sub(move _2, const 100f32); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:14:5: 14:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:15:2: 15:2
    }
}

fn subtract_integer_from_f64(_1: f64) -> f64 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:17:30: 17:31
    let mut _0: f64;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:17:41: 17:44
    let mut _2: f64;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:18:5: 18:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:18:5: 18:6
        _0 = Sub(move _2, const 100f64); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:18:5: 18:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:19:2: 19:2
    }
}

fn multiply_f32_by_integer(_1: f32) -> f32 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:21:28: 21:29
    let mut _0: f32;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:21:39: 21:42
    let mut _2: f32;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:22:5: 22:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:22:5: 22:6
        _0 = Mul(move _2, const 100f32); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:22:5: 22:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:23:2: 23:2
    }
}

fn multiply_f64_by_integer(_1: f64) -> f64 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:25:28: 25:29
    let mut _0: f64;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:25:39: 25:42
    let mut _2: f64;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:26:5: 26:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:26:5: 26:6
        _0 = Mul(move _2, const 100f64); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:26:5: 26:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:27:2: 27:2
    }
}

fn divide_f32_by_integer(_1: f32) -> f32 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:29:26: 29:27
    let mut _0: f32;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:29:37: 29:40
    let mut _2: f32;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:30:5: 30:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:30:5: 30:6
        _0 = Div(move _2, const 100f32); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:30:5: 30:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:31:2: 31:2
    }
}

fn divide_f64_by_integer(_1: f64) -> f64 {
    debug x => _1;                       // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:33:26: 33:27
    let mut _0: f64;                     // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:33:37: 33:40
    let mut _2: f64;                     // in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:34:5: 34:6

    bb0: {
        _2 = _1;                         // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:34:5: 34:6
        _0 = Div(move _2, const 100f64); // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:34:5: 34:14
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:35:2: 35:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:37:11: 37:11

    bb0: {
        return;                          // scope 0 at ui/numbers-arithmetic/suggest-float-literal_fixed.rs:37:13: 37:13
    }
}
