// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();
    let _2: i8;
    let _3: i8;
    let _5: i16;
    let _6: i16;
    let _8: i32;
    let _9: i32;
    let _11: i64;
    let _12: i64;
    let _14: usize;
    let _15: usize;
    let _17: u8;
    let _18: u8;
    let _20: u16;
    let _21: u16;
    let _23: u32;
    let _24: u32;
    let _26: u64;
    let _27: u64;
    scope 1 {
        debug _i => const i8::MIN;
        let _1: i8;
        scope 2 {
            debug j => const i8::MIN;
            scope 3 {
                debug _i => const i16::MIN;
                let _4: i16;
                scope 4 {
                    debug j => const i16::MIN;
                    scope 5 {
                        debug _i => const i32::MIN;
                        let _7: i32;
                        scope 6 {
                            debug j => const i32::MIN;
                            scope 7 {
                                debug _i => const i64::MIN;
                                let _10: i64;
                                scope 8 {
                                    debug j => const i64::MIN;
                                    scope 9 {
                                        debug _i => const 1_usize;
                                        let _13: usize;
                                        scope 10 {
                                            debug j => const 1_usize;
                                            scope 11 {
                                                debug _i => const u8::MAX;
                                                let _16: u8;
                                                scope 12 {
                                                    debug j => const u8::MAX;
                                                    scope 13 {
                                                        debug _i => const u16::MAX;
                                                        let _19: u16;
                                                        scope 14 {
                                                            debug j => const u16::MAX;
                                                            scope 15 {
                                                                debug _i => const u32::MAX;
                                                                let _22: u32;
                                                                scope 16 {
                                                                    debug j => const u32::MAX;
                                                                    scope 17 {
                                                                        debug _i => const u64::MAX;
                                                                        let _25: u64;
                                                                        scope 18 {
                                                                            debug j => const u64::MAX;
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const i8::MIN;
        _2 = id_i8(_1) -> [return: bb1, unwind continue];
    }

    bb1: {
        _3 = id_i8(const i8::MIN) -> [return: bb2, unwind continue];
    }

    bb2: {
        _4 = const i16::MIN;
        _5 = id_i16(_4) -> [return: bb3, unwind continue];
    }

    bb3: {
        _6 = id_i16(const i16::MIN) -> [return: bb4, unwind continue];
    }

    bb4: {
        _7 = const i32::MIN;
        _8 = id_i32(_7) -> [return: bb5, unwind continue];
    }

    bb5: {
        _9 = id_i32(const i32::MIN) -> [return: bb6, unwind continue];
    }

    bb6: {
        _10 = const i64::MIN;
        _11 = id_i64(_10) -> [return: bb7, unwind continue];
    }

    bb7: {
        _12 = id_i64(const i64::MIN) -> [return: bb8, unwind continue];
    }

    bb8: {
        _13 = const 1_usize;
        _14 = id_uint(_13) -> [return: bb9, unwind continue];
    }

    bb9: {
        _15 = id_uint(const 1_usize) -> [return: bb10, unwind continue];
    }

    bb10: {
        _16 = const u8::MAX;
        _17 = id_u8(_16) -> [return: bb11, unwind continue];
    }

    bb11: {
        _18 = id_u8(const u8::MAX) -> [return: bb12, unwind continue];
    }

    bb12: {
        _19 = const u16::MAX;
        _20 = id_u16(_19) -> [return: bb13, unwind continue];
    }

    bb13: {
        _21 = id_u16(const u16::MAX) -> [return: bb14, unwind continue];
    }

    bb14: {
        _22 = const u32::MAX;
        _23 = id_u32(_22) -> [return: bb15, unwind continue];
    }

    bb15: {
        _24 = id_u32(const u32::MAX) -> [return: bb16, unwind continue];
    }

    bb16: {
        _25 = const u64::MAX;
        _26 = id_u64(_25) -> [return: bb17, unwind continue];
    }

    bb17: {
        _27 = id_u64(const u64::MAX) -> [return: bb18, unwind continue];
    }

    bb18: {
        return;
    }
}

fn id_i8(_1: i8) -> i8 {
    debug n => _1;
    let mut _0: i8;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_i16(_1: i16) -> i16 {
    debug n => _1;
    let mut _0: i16;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_i32(_1: i32) -> i32 {
    debug n => _1;
    let mut _0: i32;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_i64(_1: i64) -> i64 {
    debug n => _1;
    let mut _0: i64;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_uint(_1: usize) -> usize {
    debug n => _1;
    let mut _0: usize;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_u8(_1: u8) -> u8 {
    debug n => _1;
    let mut _0: u8;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_u16(_1: u16) -> u16 {
    debug n => _1;
    let mut _0: u16;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_u32(_1: u32) -> u32 {
    debug n => _1;
    let mut _0: u32;

    bb0: {
        _0 = _1;
        return;
    }
}

fn id_u64(_1: u64) -> u64 {
    debug n => _1;
    let mut _0: u64;

    bb0: {
        _0 = _1;
        return;
    }
}
