// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:4:15: 4:15
    let _1: i8;                          // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:16:9: 16:11
    let _3: i8;                          // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:18:5: 18:13
    let mut _4: i8;                      // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:18:11: 18:12
    let _5: i8;                          // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:19:5: 19:16
    let _8: i16;                         // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:23:5: 23:14
    let mut _9: i16;                     // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:23:12: 23:13
    let _10: i16;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:24:5: 24:20
    let _13: i32;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:28:5: 28:14
    let mut _14: i32;                    // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:28:12: 28:13
    let _15: i32;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:29:5: 29:27
    let _18: i64;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:33:5: 33:14
    let mut _19: i64;                    // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:33:12: 33:13
    let _20: i64;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:34:5: 34:39
    let _23: usize;                      // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:38:5: 38:15
    let mut _24: usize;                  // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:38:13: 38:14
    let _25: usize;                      // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:39:5: 39:15
    let _28: u8;                         // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:43:5: 43:13
    let mut _29: u8;                     // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:43:11: 43:12
    let _30: u8;                         // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:44:5: 44:15
    let _33: u16;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:48:5: 48:14
    let mut _34: u16;                    // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:48:12: 48:13
    let _35: u16;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:49:5: 49:19
    let _38: u32;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:53:5: 53:14
    let mut _39: u32;                    // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:53:12: 53:13
    let _40: u32;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:54:5: 54:26
    let _43: u64;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:58:5: 58:14
    let mut _44: u64;                    // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:58:12: 58:13
    let _45: u64;                        // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:59:5: 59:39
    scope 1 {
        debug _i => _1;                  // in scope 1 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:16:9: 16:11
        let _2: i8;                      // in scope 1 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:17:9: 17:10
        scope 2 {
            debug j => _2;               // in scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:17:9: 17:10
            let _6: i16;                 // in scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:21:9: 21:11
            scope 3 {
                debug _i => _6;          // in scope 3 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:21:9: 21:11
                let _7: i16;             // in scope 3 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:22:9: 22:10
                scope 4 {
                    debug j => _7;       // in scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:22:9: 22:10
                    let _11: i32;        // in scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:26:9: 26:11
                    scope 5 {
                        debug _i => _11; // in scope 5 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:26:9: 26:11
                        let _12: i32;    // in scope 5 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:27:9: 27:10
                        scope 6 {
                            debug j => _12; // in scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:27:9: 27:10
                            let _16: i64; // in scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:31:9: 31:11
                            scope 7 {
                                debug _i => _16; // in scope 7 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:31:9: 31:11
                                let _17: i64; // in scope 7 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:32:9: 32:10
                                scope 8 {
                                    debug j => _17; // in scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:32:9: 32:10
                                    let _21: usize; // in scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:36:9: 36:11
                                    scope 9 {
                                        debug _i => _21; // in scope 9 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:36:9: 36:11
                                        let _22: usize; // in scope 9 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:37:9: 37:10
                                        scope 10 {
                                            debug j => _22; // in scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:37:9: 37:10
                                            let _26: u8; // in scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:41:9: 41:11
                                            scope 11 {
                                                debug _i => _26; // in scope 11 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:41:9: 41:11
                                                let _27: u8; // in scope 11 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:42:9: 42:10
                                                scope 12 {
                                                    debug j => _27; // in scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:42:9: 42:10
                                                    let _31: u16; // in scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:46:9: 46:11
                                                    scope 13 {
                                                        debug _i => _31; // in scope 13 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:46:9: 46:11
                                                        let _32: u16; // in scope 13 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:47:9: 47:10
                                                        scope 14 {
                                                            debug j => _32; // in scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:47:9: 47:10
                                                            let _36: u32; // in scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:51:9: 51:11
                                                            scope 15 {
                                                                debug _i => _36; // in scope 15 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:51:9: 51:11
                                                                let _37: u32; // in scope 15 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:52:9: 52:10
                                                                scope 16 {
                                                                    debug j => _37; // in scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:52:9: 52:10
                                                                    let _41: u64; // in scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:56:9: 56:11
                                                                    scope 17 {
                                                                        debug _i => _41; // in scope 17 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:56:9: 56:11
                                                                        let _42: u64; // in scope 17 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:57:9: 57:10
                                                                        scope 18 {
                                                                            debug j => _42; // in scope 18 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:57:9: 57:10
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const i8::MIN;              // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:16:18: 16:22
        _2 = const i8::MIN;              // scope 1 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:17:13: 17:17
        _4 = const i8::MIN;              // scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:18:11: 18:12
        _3 = id_i8(move _4) -> bb1;      // scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:18:5: 18:13
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:18:5: 18:10
                                         // + literal: Const { ty: fn(i8) -> i8 {id_i8}, val: Value(<ZST>) }
    }

    bb1: {
        _5 = id_i8(const i8::MIN) -> bb2; // scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:19:5: 19:16
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:19:5: 19:10
                                         // + literal: Const { ty: fn(i8) -> i8 {id_i8}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = const i16::MIN;             // scope 2 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:21:19: 21:26
        _7 = const i16::MIN;             // scope 3 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:22:13: 22:20
        _9 = const i16::MIN;             // scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:23:12: 23:13
        _8 = id_i16(move _9) -> bb3;     // scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:23:5: 23:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:23:5: 23:11
                                         // + literal: Const { ty: fn(i16) -> i16 {id_i16}, val: Value(<ZST>) }
    }

    bb3: {
        _10 = id_i16(const i16::MIN) -> bb4; // scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:24:5: 24:20
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:24:5: 24:11
                                         // + literal: Const { ty: fn(i16) -> i16 {id_i16}, val: Value(<ZST>) }
    }

    bb4: {
        _11 = const i32::MIN;            // scope 4 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:26:19: 26:33
        _12 = const i32::MIN;            // scope 5 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:27:13: 27:27
        _14 = const i32::MIN;            // scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:28:12: 28:13
        _13 = id_i32(move _14) -> bb5;   // scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:28:5: 28:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:28:5: 28:11
                                         // + literal: Const { ty: fn(i32) -> i32 {id_i32}, val: Value(<ZST>) }
    }

    bb5: {
        _15 = id_i32(const i32::MIN) -> bb6; // scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:29:5: 29:27
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:29:5: 29:11
                                         // + literal: Const { ty: fn(i32) -> i32 {id_i32}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = const i64::MIN;            // scope 6 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:31:19: 31:45
        _17 = const i64::MIN;            // scope 7 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:32:13: 32:39
        _19 = const i64::MIN;            // scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:33:12: 33:13
        _18 = id_i64(move _19) -> bb7;   // scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:33:5: 33:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:33:5: 33:11
                                         // + literal: Const { ty: fn(i64) -> i64 {id_i64}, val: Value(<ZST>) }
    }

    bb7: {
        _20 = id_i64(const i64::MIN) -> bb8; // scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:34:5: 34:39
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:34:5: 34:11
                                         // + literal: Const { ty: fn(i64) -> i64 {id_i64}, val: Value(<ZST>) }
    }

    bb8: {
        _21 = const 1_usize;             // scope 8 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:36:21: 36:22
        _22 = const 1_usize;             // scope 9 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:37:13: 37:14
        _24 = const 1_usize;             // scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:38:13: 38:14
        _23 = id_uint(move _24) -> bb9;  // scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:38:5: 38:15
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:38:5: 38:12
                                         // + literal: Const { ty: fn(usize) -> usize {id_uint}, val: Value(<ZST>) }
    }

    bb9: {
        _25 = id_uint(const 1_usize) -> bb10; // scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:39:5: 39:15
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:39:5: 39:12
                                         // + literal: Const { ty: fn(usize) -> usize {id_uint}, val: Value(<ZST>) }
    }

    bb10: {
        _26 = const u8::MAX;             // scope 10 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:41:18: 41:21
        _27 = const u8::MAX;             // scope 11 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:42:13: 42:16
        _29 = const u8::MAX;             // scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:43:11: 43:12
        _28 = id_u8(move _29) -> bb11;   // scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:43:5: 43:13
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:43:5: 43:10
                                         // + literal: Const { ty: fn(u8) -> u8 {id_u8}, val: Value(<ZST>) }
    }

    bb11: {
        _30 = id_u8(const u8::MAX) -> bb12; // scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:44:5: 44:15
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:44:5: 44:10
                                         // + literal: Const { ty: fn(u8) -> u8 {id_u8}, val: Value(<ZST>) }
    }

    bb12: {
        _31 = const u16::MAX;            // scope 12 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:46:19: 46:25
        _32 = const u16::MAX;            // scope 13 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:47:13: 47:19
        _34 = const u16::MAX;            // scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:48:12: 48:13
        _33 = id_u16(move _34) -> bb13;  // scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:48:5: 48:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:48:5: 48:11
                                         // + literal: Const { ty: fn(u16) -> u16 {id_u16}, val: Value(<ZST>) }
    }

    bb13: {
        _35 = id_u16(const u16::MAX) -> bb14; // scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:49:5: 49:19
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:49:5: 49:11
                                         // + literal: Const { ty: fn(u16) -> u16 {id_u16}, val: Value(<ZST>) }
    }

    bb14: {
        _36 = const u32::MAX;            // scope 14 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:51:19: 51:32
        _37 = const u32::MAX;            // scope 15 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:52:13: 52:26
        _39 = const u32::MAX;            // scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:53:12: 53:13
        _38 = id_u32(move _39) -> bb15;  // scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:53:5: 53:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:53:5: 53:11
                                         // + literal: Const { ty: fn(u32) -> u32 {id_u32}, val: Value(<ZST>) }
    }

    bb15: {
        _40 = id_u32(const u32::MAX) -> bb16; // scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:54:5: 54:26
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:54:5: 54:11
                                         // + literal: Const { ty: fn(u32) -> u32 {id_u32}, val: Value(<ZST>) }
    }

    bb16: {
        _41 = const u64::MAX;            // scope 16 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:56:19: 56:45
        _42 = const u64::MAX;            // scope 17 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:57:13: 57:39
        _44 = const u64::MAX;            // scope 18 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:58:12: 58:13
        _43 = id_u64(move _44) -> bb17;  // scope 18 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:58:5: 58:14
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:58:5: 58:11
                                         // + literal: Const { ty: fn(u64) -> u64 {id_u64}, val: Value(<ZST>) }
    }

    bb17: {
        _45 = id_u64(const u64::MAX) -> bb18; // scope 18 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:59:5: 59:39
                                         // mir::Constant
                                         // + span: ui/numbers-arithmetic/integer-literal-suffix-inference.rs:59:5: 59:11
                                         // + literal: Const { ty: fn(u64) -> u64 {id_u64}, val: Value(<ZST>) }
    }

    bb18: {
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:60:2: 60:2
    }
}

fn id_i8(_1: i8) -> i8 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:5:14: 5:15
    let mut _0: i8;                      // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:5:24: 5:26

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:5:29: 5:30
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:5:32: 5:32
    }
}

fn id_i16(_1: i16) -> i16 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:6:15: 6:16
    let mut _0: i16;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:6:26: 6:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:6:32: 6:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:6:35: 6:35
    }
}

fn id_i32(_1: i32) -> i32 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:7:15: 7:16
    let mut _0: i32;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:7:26: 7:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:7:32: 7:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:7:35: 7:35
    }
}

fn id_i64(_1: i64) -> i64 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:8:15: 8:16
    let mut _0: i64;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:8:26: 8:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:8:32: 8:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:8:35: 8:35
    }
}

fn id_uint(_1: usize) -> usize {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:10:16: 10:17
    let mut _0: usize;                   // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:10:29: 10:34

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:10:37: 10:38
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:10:40: 10:40
    }
}

fn id_u8(_1: u8) -> u8 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:11:14: 11:15
    let mut _0: u8;                      // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:11:24: 11:26

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:11:29: 11:30
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:11:32: 11:32
    }
}

fn id_u16(_1: u16) -> u16 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:12:15: 12:16
    let mut _0: u16;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:12:26: 12:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:12:32: 12:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:12:35: 12:35
    }
}

fn id_u32(_1: u32) -> u32 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:13:15: 13:16
    let mut _0: u32;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:13:26: 13:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:13:32: 13:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:13:35: 13:35
    }
}

fn id_u64(_1: u64) -> u64 {
    debug n => _1;                       // in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:14:15: 14:16
    let mut _0: u64;                     // return place in scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:14:26: 14:29

    bb0: {
        _0 = _1;                         // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:14:32: 14:33
        return;                          // scope 0 at ui/numbers-arithmetic/integer-literal-suffix-inference.rs:14:35: 14:35
    }
}
