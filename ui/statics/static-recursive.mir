// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static mut S: *const u8 = {
    let mut _0: *const u8;               // return place in scope 0 at ui/statics/static-recursive.rs:2:15: 2:24
    let mut _1: *const *const u8;        // in scope 0 at ui/statics/static-recursive.rs:2:36: 2:58
    let _2: &*const u8;                  // in scope 0 at ui/statics/static-recursive.rs:2:36: 2:38
    let _3: *mut *const u8;              // in scope 0 at ui/statics/static-recursive.rs:2:37: 2:38
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at ui/statics/static-recursive.rs:2:36: 2:58
        StorageLive(_2);                 // scope 1 at ui/statics/static-recursive.rs:2:36: 2:38
        StorageLive(_3);                 // scope 1 at ui/statics/static-recursive.rs:2:37: 2:38
        _3 = const {alloc1: *mut *const u8}; // scope 1 at ui/statics/static-recursive.rs:2:37: 2:38
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:2:37: 2:38
                                         // + literal: Const { ty: *mut *const u8, val: Value(Scalar(alloc1)) }
        _2 = &(*_3);                     // scope 1 at ui/statics/static-recursive.rs:2:36: 2:38
        _1 = &raw const (*_2);           // scope 1 at ui/statics/static-recursive.rs:2:36: 2:38
        _0 = move _1 as *const u8 (PtrToPtr); // scope 1 at ui/statics/static-recursive.rs:2:36: 2:71
        StorageDead(_1);                 // scope 1 at ui/statics/static-recursive.rs:2:70: 2:71
        StorageDead(_2);                 // scope 0 at ui/statics/static-recursive.rs:2:72: 2:73
        return;                          // scope 0 at ui/statics/static-recursive.rs:2:1: 2:74
    }
}

alloc1 (static: S, size: 8, align: 8) {
    ╾───────alloc1────────╼                         │ ╾──────╼
}

static L1: StaticDoubleLinked = {
    let mut _0: StaticDoubleLinked;      // return place in scope 0 at ui/statics/static-recursive.rs:11:12: 11:30
    let mut _1: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
    let _2: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
    let _3: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:11:59: 11:61
    let mut _4: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
    let _5: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
    let _6: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:11:70: 11:72

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
        StorageLive(_2);                 // scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
        StorageLive(_3);                 // scope 0 at ui/statics/static-recursive.rs:11:59: 11:61
        _3 = const {alloc2: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:11:59: 11:61
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:11:59: 11:61
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc2)) }
        _2 = &(*_3);                     // scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
        _1 = &(*_2);                     // scope 0 at ui/statics/static-recursive.rs:11:58: 11:61
        StorageLive(_4);                 // scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
        StorageLive(_5);                 // scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
        StorageLive(_6);                 // scope 0 at ui/statics/static-recursive.rs:11:70: 11:72
        _6 = const {alloc3: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:11:70: 11:72
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:11:70: 11:72
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc3)) }
        _5 = &(*_6);                     // scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
        _4 = &(*_5);                     // scope 0 at ui/statics/static-recursive.rs:11:69: 11:72
        _0 = StaticDoubleLinked { prev: move _1, next: move _4, data: const 1_i32, head: const true }; // scope 0 at ui/statics/static-recursive.rs:11:33: 11:94
        StorageDead(_5);                 // scope 0 at ui/statics/static-recursive.rs:11:93: 11:94
        StorageDead(_4);                 // scope 0 at ui/statics/static-recursive.rs:11:93: 11:94
        StorageDead(_2);                 // scope 0 at ui/statics/static-recursive.rs:11:93: 11:94
        StorageDead(_1);                 // scope 0 at ui/statics/static-recursive.rs:11:93: 11:94
        return;                          // scope 0 at ui/statics/static-recursive.rs:11:1: 11:95
    }
}

alloc3 (static: L2, size: 24, align: 8) {
    0x00 │ ╾───────alloc4────────╼ ╾───────alloc2────────╼ │ ╾──────╼╾──────╼
    0x10 │ 02 00 00 00 00 __ __ __                         │ .....░░░
}

alloc4 (static: L1, size: 24, align: 8) {
    0x00 │ ╾───────alloc2────────╼ ╾───────alloc3────────╼ │ ╾──────╼╾──────╼
    0x10 │ 01 00 00 00 01 __ __ __                         │ .....░░░
}

alloc2 (static: L3, size: 24, align: 8) {
    0x00 │ ╾───────alloc3────────╼ ╾───────alloc4────────╼ │ ╾──────╼╾──────╼
    0x10 │ 03 00 00 00 00 __ __ __                         │ .....░░░
}

static L2: StaticDoubleLinked = {
    let mut _0: StaticDoubleLinked;      // return place in scope 0 at ui/statics/static-recursive.rs:12:12: 12:30
    let mut _1: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
    let _2: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
    let _3: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:12:59: 12:61
    let mut _4: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
    let _5: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
    let _6: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:12:70: 12:72

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
        StorageLive(_2);                 // scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
        StorageLive(_3);                 // scope 0 at ui/statics/static-recursive.rs:12:59: 12:61
        _3 = const {alloc4: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:12:59: 12:61
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:12:59: 12:61
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc4)) }
        _2 = &(*_3);                     // scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
        _1 = &(*_2);                     // scope 0 at ui/statics/static-recursive.rs:12:58: 12:61
        StorageLive(_4);                 // scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
        StorageLive(_5);                 // scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
        StorageLive(_6);                 // scope 0 at ui/statics/static-recursive.rs:12:70: 12:72
        _6 = const {alloc2: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:12:70: 12:72
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:12:70: 12:72
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc2)) }
        _5 = &(*_6);                     // scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
        _4 = &(*_5);                     // scope 0 at ui/statics/static-recursive.rs:12:69: 12:72
        _0 = StaticDoubleLinked { prev: move _1, next: move _4, data: const 2_i32, head: const false }; // scope 0 at ui/statics/static-recursive.rs:12:33: 12:95
        StorageDead(_5);                 // scope 0 at ui/statics/static-recursive.rs:12:94: 12:95
        StorageDead(_4);                 // scope 0 at ui/statics/static-recursive.rs:12:94: 12:95
        StorageDead(_2);                 // scope 0 at ui/statics/static-recursive.rs:12:94: 12:95
        StorageDead(_1);                 // scope 0 at ui/statics/static-recursive.rs:12:94: 12:95
        return;                          // scope 0 at ui/statics/static-recursive.rs:12:1: 12:96
    }
}

alloc4 (static: L1, size: 24, align: 8) {
    0x00 │ ╾───────alloc2────────╼ ╾───────alloc3────────╼ │ ╾──────╼╾──────╼
    0x10 │ 01 00 00 00 01 __ __ __                         │ .....░░░
}

alloc3 (static: L2, size: 24, align: 8) {
    0x00 │ ╾───────alloc4────────╼ ╾───────alloc2────────╼ │ ╾──────╼╾──────╼
    0x10 │ 02 00 00 00 00 __ __ __                         │ .....░░░
}

alloc2 (static: L3, size: 24, align: 8) {
    0x00 │ ╾───────alloc3────────╼ ╾───────alloc4────────╼ │ ╾──────╼╾──────╼
    0x10 │ 03 00 00 00 00 __ __ __                         │ .....░░░
}

static L3: StaticDoubleLinked = {
    let mut _0: StaticDoubleLinked;      // return place in scope 0 at ui/statics/static-recursive.rs:13:12: 13:30
    let mut _1: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
    let _2: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
    let _3: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:13:59: 13:61
    let mut _4: &StaticDoubleLinked;     // in scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
    let _5: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
    let _6: &StaticDoubleLinked;         // in scope 0 at ui/statics/static-recursive.rs:13:70: 13:72

    bb0: {
        StorageLive(_1);                 // scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
        StorageLive(_2);                 // scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
        StorageLive(_3);                 // scope 0 at ui/statics/static-recursive.rs:13:59: 13:61
        _3 = const {alloc3: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:13:59: 13:61
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:13:59: 13:61
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc3)) }
        _2 = &(*_3);                     // scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
        _1 = &(*_2);                     // scope 0 at ui/statics/static-recursive.rs:13:58: 13:61
        StorageLive(_4);                 // scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
        StorageLive(_5);                 // scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
        StorageLive(_6);                 // scope 0 at ui/statics/static-recursive.rs:13:70: 13:72
        _6 = const {alloc4: &StaticDoubleLinked}; // scope 0 at ui/statics/static-recursive.rs:13:70: 13:72
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:13:70: 13:72
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc4)) }
        _5 = &(*_6);                     // scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
        _4 = &(*_5);                     // scope 0 at ui/statics/static-recursive.rs:13:69: 13:72
        _0 = StaticDoubleLinked { prev: move _1, next: move _4, data: const 3_i32, head: const false }; // scope 0 at ui/statics/static-recursive.rs:13:33: 13:95
        StorageDead(_5);                 // scope 0 at ui/statics/static-recursive.rs:13:94: 13:95
        StorageDead(_4);                 // scope 0 at ui/statics/static-recursive.rs:13:94: 13:95
        StorageDead(_2);                 // scope 0 at ui/statics/static-recursive.rs:13:94: 13:95
        StorageDead(_1);                 // scope 0 at ui/statics/static-recursive.rs:13:94: 13:95
        return;                          // scope 0 at ui/statics/static-recursive.rs:13:1: 13:96
    }
}

alloc4 (static: L1, size: 24, align: 8) {
    0x00 │ ╾───────alloc2────────╼ ╾───────alloc3────────╼ │ ╾──────╼╾──────╼
    0x10 │ 01 00 00 00 01 __ __ __                         │ .....░░░
}

alloc2 (static: L3, size: 24, align: 8) {
    0x00 │ ╾───────alloc3────────╼ ╾───────alloc4────────╼ │ ╾──────╼╾──────╼
    0x10 │ 03 00 00 00 00 __ __ __                         │ .....░░░
}

alloc3 (static: L2, size: 24, align: 8) {
    0x00 │ ╾───────alloc4────────╼ ╾───────alloc2────────╼ │ ╾──────╼╾──────╼
    0x10 │ 02 00 00 00 00 __ __ __                         │ .....░░░
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/statics/static-recursive.rs:16:15: 16:15
    let mut _1: (&*const u8, &*const u8); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _2: &*const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _3: *mut *const u8;              // in scope 0 at ui/statics/static-recursive.rs:17:25: 17:26
    let mut _4: &*const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let _5: *const *const u8;            // in scope 0 at ui/statics/static-recursive.rs:17:29: 17:52
    let mut _6: *const u8;               // in scope 0 at ui/statics/static-recursive.rs:17:30: 17:31
    let mut _7: *mut *const u8;          // in scope 0 at ui/statics/static-recursive.rs:17:30: 17:31
    let mut _10: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _11: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _12: *const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _13: *const u8;              // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _15: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _16: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _17: &*const u8;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _18: &*const u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _19: &*const u8;             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _20: &*const u8;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _21: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _22: std::vec::Vec<i32>;     // in scope 0 at ui/statics/static-recursive.rs:19:9: 19:21
    let _24: &StaticDoubleLinked;        // in scope 0 at ui/statics/static-recursive.rs:20:20: 20:22
    let _25: ();                         // in scope 0 at ui/statics/static-recursive.rs:22:9: 22:32
    let mut _26: &mut std::vec::Vec<i32>; // in scope 0 at ui/statics/static-recursive.rs:22:9: 22:32
    let mut _27: i32;                    // in scope 0 at ui/statics/static-recursive.rs:22:23: 22:31
    let mut _28: &StaticDoubleLinked;    // in scope 0 at ui/statics/static-recursive.rs:23:15: 23:23
    let mut _29: bool;                   // in scope 0 at ui/statics/static-recursive.rs:24:12: 24:20
    let mut _30: (&&std::vec::Vec<i32>, &&[i32; 3]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _31: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _32: &std::vec::Vec<i32>;        // in scope 0 at ui/statics/static-recursive.rs:26:16: 26:25
    let mut _33: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _36: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _37: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _38: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _39: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _41: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _42: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _43: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _44: &&std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _45: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _46: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _47: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _50: &StaticDoubleLinked;        // in scope 0 at ui/statics/static-recursive.rs:29:20: 29:22
    let mut _51: &StaticDoubleLinked;    // in scope 0 at ui/statics/static-recursive.rs:31:15: 31:23
    let _52: ();                         // in scope 0 at ui/statics/static-recursive.rs:32:9: 32:32
    let mut _53: &mut std::vec::Vec<i32>; // in scope 0 at ui/statics/static-recursive.rs:32:9: 32:32
    let mut _54: i32;                    // in scope 0 at ui/statics/static-recursive.rs:32:23: 32:31
    let mut _55: bool;                   // in scope 0 at ui/statics/static-recursive.rs:33:12: 33:20
    let mut _56: (&&std::vec::Vec<i32>, &&[i32; 3]); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _57: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _58: &std::vec::Vec<i32>;        // in scope 0 at ui/statics/static-recursive.rs:35:16: 35:25
    let mut _59: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _62: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _63: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _64: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _65: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _67: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _68: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _69: &&std::vec::Vec<i32>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _70: &&std::vec::Vec<i32>;       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _71: &&[i32; 3];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _72: &&[i32; 3];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _73: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let mut _76: &StaticDoubleLinked;    // in scope 0 at ui/statics/static-recursive.rs:20:9: 20:16
    let mut _77: &StaticDoubleLinked;    // in scope 0 at ui/statics/static-recursive.rs:29:9: 29:16
    scope 1 {
        let _8: &*const u8;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _9: &*const u8;              // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        scope 2 {
            debug left_val => _8;        // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _9;       // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _14: core::panicking::AssertKind; // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 3 {
                debug kind => _14;       // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }
    scope 4 {
        debug test_vec => _22;           // in scope 4 at ui/statics/static-recursive.rs:19:9: 19:21
        let mut _23: &StaticDoubleLinked; // in scope 4 at ui/statics/static-recursive.rs:20:9: 20:16
        scope 5 {
            debug cur => _23;            // in scope 5 at ui/statics/static-recursive.rs:20:9: 20:16
            let _34: &&std::vec::Vec<i32>; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _35: &&[i32; 3];         // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _48: std::vec::Vec<i32>; // in scope 5 at ui/statics/static-recursive.rs:28:9: 28:21
            let mut _75: &&[i32; 3];     // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 6 {
                debug left_val => _34;   // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _35;  // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _40: core::panicking::AssertKind; // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 7 {
                    debug kind => _40;   // in scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
            scope 8 {
                debug test_vec => _48;   // in scope 8 at ui/statics/static-recursive.rs:28:9: 28:21
                let mut _49: &StaticDoubleLinked; // in scope 8 at ui/statics/static-recursive.rs:29:9: 29:16
                scope 9 {
                    debug cur => _49;    // in scope 9 at ui/statics/static-recursive.rs:29:9: 29:16
                    let _60: &&std::vec::Vec<i32>; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                    let _61: &&[i32; 3]; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                    let mut _74: &&[i32; 3]; // in scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                    scope 10 {
                        debug left_val => _60; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                        debug right_val => _61; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                        let _66: core::panicking::AssertKind; // in scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        scope 11 {
                            debug kind => _66; // in scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _3 = const {alloc1: *mut *const u8}; // scope 1 at ui/statics/static-recursive.rs:17:25: 17:26
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:17:25: 17:26
                                         // + literal: Const { ty: *mut *const u8, val: Value(Scalar(alloc1)) }
        _2 = &(*_3);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _7 = const {alloc1: *mut *const u8}; // scope 1 at ui/statics/static-recursive.rs:17:30: 17:31
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:17:30: 17:31
                                         // + literal: Const { ty: *mut *const u8, val: Value(Scalar(alloc1)) }
        _6 = (*_7);                      // scope 1 at ui/statics/static-recursive.rs:17:30: 17:31
        _5 = move _6 as *const *const u8 (PtrToPtr); // scope 1 at ui/statics/static-recursive.rs:17:29: 17:52
        _4 = &(*_5);                     // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _1 = (move _2, move _4);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _8 = (_1.0: &*const u8);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _9 = (_1.1: &*const u8);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _12 = (*_8);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _13 = (*_9);                     // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _11 = Eq(move _12, move _13);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _10 = Not(move _11);             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _10) -> [0: bb2, otherwise: bb1]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb1: {
        _14 = const core::panicking::AssertKind::Eq; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _16 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = _8;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _17 = _18;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _20 = _9;                        // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _19 = _20;                       // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = Option::<Arguments<'_>>::None; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _15 = core::panicking::assert_failed::<*const u8, *const u8>(move _16, move _17, move _19, move _21); // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a *const u8, &'b *const u8, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<*const u8, *const u8>}, val: Value(<ZST>) }
    }

    bb2: {
        _22 = Vec::<i32>::new() -> bb3;  // scope 0 at ui/statics/static-recursive.rs:19:24: 19:34
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:19:24: 19:32
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb3: {
        _24 = const {alloc4: &StaticDoubleLinked}; // scope 4 at ui/statics/static-recursive.rs:20:20: 20:22
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:20:20: 20:22
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc4)) }
        _23 = _24;                       // scope 4 at ui/statics/static-recursive.rs:20:19: 20:22
        goto -> bb4;                     // scope 5 at ui/statics/static-recursive.rs:21:5: 25:6
    }

    bb4: {
        _26 = &mut _22;                  // scope 5 at ui/statics/static-recursive.rs:22:9: 22:32
        _27 = ((*_23).2: i32);           // scope 5 at ui/statics/static-recursive.rs:22:23: 22:31
        _25 = Vec::<i32>::push(move _26, move _27) -> [return: bb5, unwind: bb20]; // scope 5 at ui/statics/static-recursive.rs:22:9: 22:32
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:22:18: 22:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>, i32) {Vec::<i32>::push}, val: Value(<ZST>) }
    }

    bb5: {
        _76 = deref_copy ((*_23).1: &StaticDoubleLinked); // scope 5 at ui/statics/static-recursive.rs:23:15: 23:23
        _28 = _76;                       // scope 5 at ui/statics/static-recursive.rs:23:15: 23:23
        _23 = move _28;                  // scope 5 at ui/statics/static-recursive.rs:23:9: 23:23
        _29 = ((*_23).3: bool);          // scope 5 at ui/statics/static-recursive.rs:24:12: 24:20
        switchInt(move _29) -> [0: bb4, otherwise: bb6]; // scope 5 at ui/statics/static-recursive.rs:24:12: 24:20
    }

    bb6: {
        _32 = &_22;                      // scope 5 at ui/statics/static-recursive.rs:26:16: 26:25
        _31 = &_32;                      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _75 = const _;                   // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(main, [], Some(promoted[1])) }
        _33 = _75;                       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _30 = (move _31, move _33);      // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _34 = (_30.0: &&std::vec::Vec<i32>); // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _35 = (_30.1: &&[i32; 3]);       // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _38 = _34;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _39 = _35;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _37 = <&Vec<i32> as PartialEq<&[i32; 3]>>::eq(move _38, move _39) -> [return: bb7, unwind: bb20]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Vec<i32>, &'b &[i32; 3]) -> bool {<&Vec<i32> as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb7: {
        _36 = Not(move _37);             // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _36) -> [0: bb9, otherwise: bb8]; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb8: {
        _40 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _42 = const core::panicking::AssertKind::Eq; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _44 = _34;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _43 = _44;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _46 = _35;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _45 = _46;                       // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _47 = Option::<Arguments<'_>>::None; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _41 = core::panicking::assert_failed::<&Vec<i32>, &[i32; 3]>(move _42, move _43, move _45, move _47) -> bb20; // scope 7 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &Vec<i32>, &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&Vec<i32>, &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb9: {
        _48 = Vec::<i32>::new() -> [return: bb10, unwind: bb20]; // scope 5 at ui/statics/static-recursive.rs:28:24: 28:34
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:28:24: 28:32
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn() -> Vec<i32> {Vec::<i32>::new}, val: Value(<ZST>) }
    }

    bb10: {
        _50 = const {alloc4: &StaticDoubleLinked}; // scope 8 at ui/statics/static-recursive.rs:29:20: 29:22
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:29:20: 29:22
                                         // + literal: Const { ty: &StaticDoubleLinked, val: Value(Scalar(alloc4)) }
        _49 = _50;                       // scope 8 at ui/statics/static-recursive.rs:29:19: 29:22
        goto -> bb11;                    // scope 9 at ui/statics/static-recursive.rs:30:5: 34:6
    }

    bb11: {
        _77 = deref_copy ((*_49).0: &StaticDoubleLinked); // scope 9 at ui/statics/static-recursive.rs:31:15: 31:23
        _51 = _77;                       // scope 9 at ui/statics/static-recursive.rs:31:15: 31:23
        _49 = move _51;                  // scope 9 at ui/statics/static-recursive.rs:31:9: 31:23
        _53 = &mut _48;                  // scope 9 at ui/statics/static-recursive.rs:32:9: 32:32
        _54 = ((*_49).2: i32);           // scope 9 at ui/statics/static-recursive.rs:32:23: 32:31
        _52 = Vec::<i32>::push(move _53, move _54) -> [return: bb12, unwind: bb19]; // scope 9 at ui/statics/static-recursive.rs:32:9: 32:32
                                         // mir::Constant
                                         // + span: ui/statics/static-recursive.rs:32:18: 32:22
                                         // + literal: Const { ty: for<'a> fn(&'a mut Vec<i32>, i32) {Vec::<i32>::push}, val: Value(<ZST>) }
    }

    bb12: {
        _55 = ((*_49).3: bool);          // scope 9 at ui/statics/static-recursive.rs:33:12: 33:20
        switchInt(move _55) -> [0: bb11, otherwise: bb13]; // scope 9 at ui/statics/static-recursive.rs:33:12: 33:20
    }

    bb13: {
        _58 = &_48;                      // scope 9 at ui/statics/static-recursive.rs:35:16: 35:25
        _57 = &_58;                      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _74 = const _;                   // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &&[i32; 3], val: Unevaluated(main, [], Some(promoted[0])) }
        _59 = _74;                       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _56 = (move _57, move _59);      // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _60 = (_56.0: &&std::vec::Vec<i32>); // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _61 = (_56.1: &&[i32; 3]);       // scope 9 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _64 = _60;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _65 = _61;                       // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _63 = <&Vec<i32> as PartialEq<&[i32; 3]>>::eq(move _64, move _65) -> [return: bb14, unwind: bb19]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
                                         // + literal: Const { ty: for<'a, 'b> fn(&'a &Vec<i32>, &'b &[i32; 3]) -> bool {<&Vec<i32> as PartialEq<&[i32; 3]>>::eq}, val: Value(<ZST>) }
    }

    bb14: {
        _62 = Not(move _63);             // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _62) -> [0: bb16, otherwise: bb15]; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb15: {
        _66 = const core::panicking::AssertKind::Eq; // scope 10 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _68 = const core::panicking::AssertKind::Eq; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _70 = _60;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _69 = _70;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _72 = _61;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _71 = _72;                       // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _73 = Option::<Arguments<'_>>::None; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _67 = core::panicking::assert_failed::<&Vec<i32>, &[i32; 3]>(move _68, move _69, move _71, move _73) -> bb19; // scope 11 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a &Vec<i32>, &'b &[i32; 3], Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<&Vec<i32>, &[i32; 3]>}, val: Value(<ZST>) }
    }

    bb16: {
        drop(_48) -> [return: bb17, unwind: bb20]; // scope 5 at ui/statics/static-recursive.rs:36:1: 36:2
    }

    bb17: {
        drop(_22) -> bb18;               // scope 0 at ui/statics/static-recursive.rs:36:1: 36:2
    }

    bb18: {
        return;                          // scope 0 at ui/statics/static-recursive.rs:36:2: 36:2
    }

    bb19 (cleanup): {
        drop(_48) -> bb20;               // scope 5 at ui/statics/static-recursive.rs:36:1: 36:2
    }

    bb20 (cleanup): {
        drop(_22) -> bb21;               // scope 0 at ui/statics/static-recursive.rs:36:1: 36:2
    }

    bb21 (cleanup): {
        resume;                          // scope 0 at ui/statics/static-recursive.rs:16:1: 36:2
    }
}

alloc4 (static: L1, size: 24, align: 8) {
    0x00 │ ╾───────alloc2────────╼ ╾───────alloc3────────╼ │ ╾──────╼╾──────╼
    0x10 │ 01 00 00 00 01 __ __ __                         │ .....░░░
}

alloc2 (static: L3, size: 24, align: 8) {
    0x00 │ ╾───────alloc3────────╼ ╾───────alloc4────────╼ │ ╾──────╼╾──────╼
    0x10 │ 03 00 00 00 00 __ __ __                         │ .....░░░
}

alloc3 (static: L2, size: 24, align: 8) {
    0x00 │ ╾───────alloc4────────╼ ╾───────alloc2────────╼ │ ╾──────╼╾──────╼
    0x10 │ 02 00 00 00 00 __ __ __                         │ .....░░░
}

alloc1 (static: S, size: 8, align: 8) {
    ╾───────alloc1────────╼                         │ ╾──────╼
}

promoted[0] in main: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/statics/static-recursive.rs:35:27: 35:35
    let mut _2: [i32; 3];                // in scope 0 at ui/statics/static-recursive.rs:35:28: 35:35

    bb0: {
        _2 = [const 3_i32, const 2_i32, const 1_i32]; // scope 0 at ui/statics/static-recursive.rs:35:28: 35:35
        _1 = &_2;                        // scope 0 at ui/statics/static-recursive.rs:35:27: 35:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &&[i32; 3] = {
    let mut _0: &&[i32; 3];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: &[i32; 3];               // in scope 0 at ui/statics/static-recursive.rs:26:27: 26:35
    let mut _2: [i32; 3];                // in scope 0 at ui/statics/static-recursive.rs:26:28: 26:35

    bb0: {
        _2 = [const 1_i32, const 2_i32, const 3_i32]; // scope 0 at ui/statics/static-recursive.rs:26:28: 26:35
        _1 = &_2;                        // scope 0 at ui/statics/static-recursive.rs:26:27: 26:35
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
