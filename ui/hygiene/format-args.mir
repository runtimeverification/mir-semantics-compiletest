// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
static arg0: () = {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/format-args.rs:6:14: 6:16

    bb0: {
        _0 = ();                         // scope 0 at ui/hygiene/format-args.rs:6:19: 6:21
        return;                          // scope 0 at ui/hygiene/format-args.rs:6:1: 6:22
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/format-args.rs:8:11: 8:11
    let _1: std::fmt::Arguments<'_>;     // in scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
    let mut _2: &[&str];                 // in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
    let mut _3: &[&str; 2];              // in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
    let _4: &[&str; 2];                  // in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
    let mut _5: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
    let mut _6: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
    let _7: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
    let _8: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
    let mut _9: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    let mut _10: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    let _11: &i32;                       // in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    let mut _12: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    let mut _13: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    let _14: &i32;                       // in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    let _15: std::fmt::Arguments<'_>;    // in scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
    let mut _16: &[&str];                // in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    let mut _17: &[&str; 3];             // in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    let _18: &[&str; 3];                 // in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    let mut _19: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
    let mut _20: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
    let _21: &[core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
    let _22: [core::fmt::ArgumentV1<'_>; 2]; // in scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
    let mut _23: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    let mut _24: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    let _25: &i32;                       // in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    let mut _26: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    let mut _27: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    let _28: &i32;                       // in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    let mut _29: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    let mut _30: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    let mut _31: &[&str; 3];             // in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    let mut _32: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    let mut _33: &i32;                   // in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    let mut _34: &[&str; 2];             // in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27

    bb0: {
        _34 = const _;                   // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:18: 10:27
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[5])) }
        _4 = _34;                        // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
        _3 = _4;                         // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
        _2 = move _3 as &[&str] (Pointer(Unsize)); // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
        _33 = const _;                   // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:29: 10:30
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[4])) }
        _11 = _33;                       // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
        _10 = _11;                       // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
        _9 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _10) -> bb1; // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:29: 10:30
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb1: {
        _32 = const _;                   // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:32: 10:33
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[3])) }
        _14 = _32;                       // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
        _13 = _14;                       // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
        _12 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _13) -> bb2; // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:32: 10:33
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = [move _9, move _12];        // scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
        _7 = &_8;                        // scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
        _6 = _7;                         // scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
        _5 = move _6 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
        _1 = Arguments::<'_>::new_v1(move _2, move _5) -> bb3; // scope 0 at ui/hygiene/format-args.rs:10:5: 10:34
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:5: 10:34
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb3: {
        _31 = const _;                   // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:21: 11:30
                                         // + literal: Const { ty: &[&str; 3], val: Unevaluated(main, [], Some(promoted[2])) }
        _18 = _31;                       // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
        _17 = _18;                       // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
        _16 = move _17 as &[&str] (Pointer(Unsize)); // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
        _30 = const _;                   // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:32: 11:33
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[1])) }
        _25 = _30;                       // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
        _24 = _25;                       // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
        _23 = core::fmt::ArgumentV1::<'_>::new_display::<i32>(move _24) -> bb4; // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:32: 11:33
                                         // + user_ty: UserType(4)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<i32>}, val: Value(<ZST>) }
    }

    bb4: {
        _29 = const _;                   // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:35: 11:36
                                         // + literal: Const { ty: &i32, val: Unevaluated(main, [], Some(promoted[0])) }
        _28 = _29;                       // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
        _27 = _28;                       // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
        _26 = core::fmt::ArgumentV1::<'_>::new_debug::<i32>(move _27) -> bb5; // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:35: 11:36
                                         // + user_ty: UserType(5)
                                         // + literal: Const { ty: for<'b> fn(&'b i32) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_debug::<i32>}, val: Value(<ZST>) }
    }

    bb5: {
        _22 = [move _23, move _26];      // scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
        _21 = &_22;                      // scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
        _20 = _21;                       // scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
        _19 = move _20 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
        _15 = Arguments::<'_>::new_v1(move _16, move _19) -> bb6; // scope 0 at ui/hygiene/format-args.rs:11:5: 11:37
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:5: 11:37
                                         // + user_ty: UserType(3)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/hygiene/format-args.rs:12:2: 12:2
    }
}

promoted[0] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    let mut _1: i32;                     // in scope 0 at ui/hygiene/format-args.rs:11:35: 11:36

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
        return;                          // scope 0 at ui/hygiene/format-args.rs:11:35: 11:36
    }
}

promoted[1] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    let mut _1: i32;                     // in scope 0 at ui/hygiene/format-args.rs:11:32: 11:33

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
        return;                          // scope 0 at ui/hygiene/format-args.rs:11:32: 11:33
    }
}

promoted[2] in main: &[&str; 3] = {
    let mut _0: &[&str; 3];              // return place in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    let mut _1: [&str; 3];               // in scope 0 at ui/hygiene/format-args.rs:11:21: 11:30

    bb0: {
        _1 = [const "", const " ", const "\n"]; // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:21: 11:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:21: 11:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:11:21: 11:30
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
        return;                          // scope 0 at ui/hygiene/format-args.rs:11:21: 11:30
    }
}

promoted[3] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    let mut _1: i32;                     // in scope 0 at ui/hygiene/format-args.rs:10:32: 10:33

    bb0: {
        _1 = const 1_i32;                // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
        return;                          // scope 0 at ui/hygiene/format-args.rs:10:32: 10:33
    }
}

promoted[4] in main: &i32 = {
    let mut _0: &i32;                    // return place in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    let mut _1: i32;                     // in scope 0 at ui/hygiene/format-args.rs:10:29: 10:30

    bb0: {
        _1 = const 0_i32;                // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
        return;                          // scope 0 at ui/hygiene/format-args.rs:10:29: 10:30
    }
}

promoted[5] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
    let mut _1: [&str; 2];               // in scope 0 at ui/hygiene/format-args.rs:10:18: 10:27

    bb0: {
        _1 = [const "", const " "];      // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:18: 10:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/hygiene/format-args.rs:10:18: 10:27
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
        return;                          // scope 0 at ui/hygiene/format-args.rs:10:18: 10:27
    }
}

static arg1: () = {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/format-args.rs:9:18: 9:20

    bb0: {
        _0 = ();                         // scope 0 at ui/hygiene/format-args.rs:9:23: 9:25
        return;                          // scope 0 at ui/hygiene/format-args.rs:9:5: 9:26
    }
}
