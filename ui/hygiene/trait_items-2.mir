// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/trait_items-2.rs:17:11: 17:11
    let mut _1: u32;                     // in scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
    let mut _2: &();                     // in scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
    let mut _3: i32;                     // in scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:25
    let mut _4: &();                     // in scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:25
    let mut _5: i32;                     // in scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:24
    let mut _6: &();                     // in scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:24
    let mut _9: &();                     // in scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
    scope 1 {
        let mut _8: &();                 // in scope 1 at ui/hygiene/trait_items-2.rs:14:18: 14:25
        scope 2 {
            let mut _7: &();             // in scope 2 at ui/hygiene/trait_items-2.rs:19:18: 19:24
            scope 3 {
            }
        }
    }

    bb0: {
        _9 = const _;                    // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:13:18: 13:24
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[2])) }
        _2 = _9;                         // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
        _1 = <() as T>::f(move _2) -> bb1; // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:13:21: 13:22
                                         // + literal: Const { ty: for<'a> fn(&'a ()) -> u32 {<() as T>::f}, val: Value(<ZST>) }
    }

    bb1: {
        _8 = const _;                    // scope 1 at ui/hygiene/trait_items-2.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:14:18: 14:25
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[1])) }
        _4 = _8;                         // scope 1 at ui/hygiene/trait_items-2.rs:14:18: 14:25
        _3 = <() as T>::f(move _4) -> bb2; // scope 1 at ui/hygiene/trait_items-2.rs:14:18: 14:25
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:18:11: 18:12
                                         // + literal: Const { ty: for<'a> fn(&'a ()) -> i32 {<() as T>::f}, val: Value(<ZST>) }
    }

    bb2: {
        _7 = const _;                    // scope 2 at ui/hygiene/trait_items-2.rs:19:18: 19:24
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:19:18: 19:24
                                         // + literal: Const { ty: &(), val: Unevaluated(main, [], Some(promoted[0])) }
        _6 = _7;                         // scope 2 at ui/hygiene/trait_items-2.rs:19:18: 19:24
        _5 = <() as T>::f(move _6) -> bb3; // scope 2 at ui/hygiene/trait_items-2.rs:19:18: 19:24
                                         // mir::Constant
                                         // + span: ui/hygiene/trait_items-2.rs:19:21: 19:22
                                         // + literal: Const { ty: for<'a> fn(&'a ()) -> i32 {<() as T>::f}, val: Value(<ZST>) }
    }

    bb3: {
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:20:2: 20:2
    }
}

promoted[0] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:24
    let mut _1: ();                      // in scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:20

    bb0: {
        _1 = ();                         // scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:20
        _0 = &_1;                        // scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:24
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:19:18: 19:24
    }
}

promoted[1] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:25
    let mut _1: ();                      // in scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:20

    bb0: {
        _1 = ();                         // scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:20
        _0 = &_1;                        // scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:25
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:14:18: 14:25
    }
}

promoted[2] in main: &() = {
    let mut _0: &();                     // return place in scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
    let mut _1: ();                      // in scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:20

    bb0: {
        _1 = ();                         // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:20
        _0 = &_1;                        // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:13:18: 13:24
    }
}

fn T::f(_1: &Self) -> u32 {
    debug self => _1;                    // in scope 0 at ui/hygiene/trait_items-2.rs:8:14: 8:19
    let mut _0: u32;                     // return place in scope 0 at ui/hygiene/trait_items-2.rs:8:24: 8:27

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/hygiene/trait_items-2.rs:8:30: 8:31
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:8:33: 8:33
    }
}

fn T::f(_1: &Self) -> i32 {
    debug self => _1;                    // in scope 0 at ui/hygiene/trait_items-2.rs:9:15: 9:20
    let mut _0: i32;                     // return place in scope 0 at ui/hygiene/trait_items-2.rs:9:25: 9:28

    bb0: {
        _0 = const 0_i32;                // scope 0 at ui/hygiene/trait_items-2.rs:9:31: 9:32
        return;                          // scope 0 at ui/hygiene/trait_items-2.rs:9:34: 9:34
    }
}
