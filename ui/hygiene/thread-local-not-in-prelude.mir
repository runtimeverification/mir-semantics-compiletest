// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
const A: LocalKey<usize> = {
    let mut _0: std::thread::LocalKey<usize>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:40: 365:68
    let mut _1: for<'a> unsafe fn(core::option::Option<&'a mut core::option::Option<usize>>) -> core::option::Option<&usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
    scope 1 {
    }

    bb0: {
        StorageLive(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
        _1 = __getit as for<'a> unsafe fn(core::option::Option<&'a mut core::option::Option<usize>>) -> core::option::Option<&usize> (Pointer(ReifyFnPointer)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:47: 360:54
                                         // + literal: Const { ty: for<'a> unsafe fn(Option<&'a mut Option<usize>>) -> Option<&'static usize> {__getit}, val: Value(<ZST>) }
        ConstEvalCounter;                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:55
        _0 = LocalKey::<usize>::new(move _1) -> bb1; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:55
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:17: 360:46
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: unsafe fn(for<'a> unsafe fn(Option<&'a mut Option<usize>>) -> Option<&'static usize>) -> LocalKey<usize> {LocalKey::<usize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        StorageDead(_1);                 // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:360:54: 360:55
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:365:22: 366:63
    }
}

fn __init() -> usize {
    let mut _0: usize;                   // return place in scope 0 at ui/hygiene/thread-local-not-in-prelude.rs:6:30: 6:35

    bb0: {
        _0 = const 30_usize;             // scope 0 at ui/hygiene/thread-local-not-in-prelude.rs:6:38: 6:40
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:294:40: 294:40
    }
}

fn __getit(_1: Option<&mut Option<usize>>) -> Option<&usize> {
    debug init => _1;                    // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:320:17: 320:21
    let mut _0: core::option::Option<&usize>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:321:18: 321:53
    let mut _2: &std::thread::__FastLocalKeyInner<usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
    let _3: &std::thread::__FastLocalKeyInner<usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 346:26
    let mut _4: [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 355:22
    scope 1 {
        scope 2 {
        }
    }

    bb0: {
        _3 = &/*tls*/ __KEY;             // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 346:26
        _2 = _3;                         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
        _4 = [closure@/home/burak/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/std/src/thread/local.rs:346:31: 346:38] { init: move _1 }; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 355:22
                                         // closure
                                         // + def_id: DefId(0:10 ~ thread_local_not_in_prelude[0eeb]::A::__getit::{closure#0})
                                         // + substs: [
                                         //     i32,
                                         //     extern "rust-call" fn(()) -> usize,
                                         //     (core::option::Option<&mut core::option::Option<usize>>,),
                                         // ]
        _0 = __FastLocalKeyInner::<usize>::get::<[closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]>(move _2, move _4) -> bb1; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:21: 355:23
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:27: 346:30
                                         // + literal: Const { ty: for<'a> unsafe fn(&'a __FastLocalKeyInner<usize>, [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]) -> Option<&'static usize> {__FastLocalKeyInner::<usize>::get::<[closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:357:14: 357:14
    }
}

static __KEY: __FastLocalKeyInner<usize> = {
    let mut _0: std::thread::__FastLocalKeyInner<usize>; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:331:31: 331:70

    bb0: {
        ConstEvalCounter;                // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:63
        _0 = __FastLocalKeyInner::<usize>::new() -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:63
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:332:21: 332:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() -> __FastLocalKeyInner<usize> {__FastLocalKeyInner::<usize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:331:17: 332:64
    }
}

fn __getit::{closure#0}(_1: [closure@/rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:31: 346:38]) -> usize {
    debug init => (_1.0: core::option::Option<&mut core::option::Option<usize>>); // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:320:17: 320:21
    let mut _0: usize;                   // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:346:39: 346:39
    let mut _2: isize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
    let mut _4: core::option::Option<usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
    let mut _5: &mut core::option::Option<usize>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
    let mut _6: isize;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
    let _8: !;                           // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
    let mut _9: core::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _10: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _11: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let _12: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _13: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _14: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _15: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let _16: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
    let mut _17: core::fmt::ArgumentV1<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _18: &core::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _19: &core::fmt::Arguments<'_>;  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _20: core::fmt::Arguments<'_>;   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _21: &[&str];                // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _22: &[&str; 1];             // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let _23: &[&str; 1];                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _24: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _25: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let _26: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    scope 1 {
        debug init => _3;                // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        let _3: &mut core::option::Option<usize>; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        let mut _27: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        let mut _28: &[&str; 1];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        let mut _29: &[&str; 1];         // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        scope 2 {
            debug value => _7;           // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:65: 348:70
            let _7: usize;               // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:65: 348:70
        }
    }

    bb0: {
        _2 = discriminant((_1.0: core::option::Option<&mut core::option::Option<usize>>)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
        switchInt(move _2) -> [1: bb1, otherwise: bb8]; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:32: 347:66
    }

    bb1: {
        _3 = move (((_1.0: core::option::Option<&mut core::option::Option<usize>>) as Some).0: &mut core::option::Option<usize>); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:347:61: 347:65
        _5 = &mut (*_3);                 // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
        _4 = Option::<usize>::take(move _5) -> bb2; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:74: 348:85
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:79: 348:83
                                         // + literal: Const { ty: for<'a> fn(&'a mut Option<usize>) -> Option<usize> {Option::<usize>::take}, val: Value(<ZST>) }
    }

    bb2: {
        _6 = discriminant(_4);           // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
        switchInt(move _6) -> [1: bb3, otherwise: bb4]; // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:36: 348:71
    }

    bb3: {
        _7 = ((_4 as Some).0: usize);    // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:348:65: 348:70
        _0 = _7;                         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:349:40: 349:45
        goto -> bb9;                     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:355:22: 355:22
    }

    bb4: {
        _29 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[2])) }
        _12 = _29;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _11 = _12;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _10 = move _11 as &[&str] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        _28 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[1])) }
        _23 = _28;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _22 = _23;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _21 = move _22 as &[&str] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        _27 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + literal: Const { ty: &[ArgumentV1<'_>; 0], val: Unevaluated(__getit::{closure#0}, [<closure_kind>, <closure_signature>, <upvars>], Some(promoted[0])) }
        _26 = _27;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _25 = _26;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _24 = move _25 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _20 = Arguments::<'_>::new_v1(move _21, move _24) -> bb5; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb5: {
        _19 = &_20;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _18 = _19;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _17 = ArgumentV1::<'_>::new_display::<Arguments<'_>>(move _18) -> bb6; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: for<'b> fn(&'b Arguments<'_>) -> ArgumentV1<'b> {ArgumentV1::<'_>::new_display::<Arguments<'_>>}, val: Value(<ZST>) }
    }

    bb6: {
        _16 = [move _17];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _15 = &_16;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _14 = _15;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _13 = move _14 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
        _9 = Arguments::<'_>::new_v1(move _10, move _13) -> bb7; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:38: 57:72
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb7: {
        _8 = panic_fmt(move _9);         // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:73
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:57:9: 57:37
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) -> ! {panic_fmt}, val: Value(<ZST>) }
    }

    bb8: {
        _0 = __init() -> bb9;            // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:354:25: 354:33
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:354:25: 354:31
                                         // + literal: Const { ty: fn() -> usize {__init}, val: Value(<ZST>) }
    }

    bb9: {
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:355:22: 355:22
    }
}

promoted[0] in __getit::{closure#0}: &[ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:72: 89:100
    }
}

promoted[1] in __getit::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77

    bb0: {
        _1 = [const "missing default value"]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/thread/local.rs:351:54: 351:77
    }
}

promoted[2] in __getit::{closure#0}: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    let mut _1: [&str; 1];               // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70

    bb0: {
        _1 = [const "internal error: entered unreachable code: "]; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/panic.rs:89:24: 89:70
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/thread-local-not-in-prelude.rs:8:11: 8:11

    bb0: {
        return;                          // scope 0 at ui/hygiene/thread-local-not-in-prelude.rs:9:2: 9:2
    }
}
