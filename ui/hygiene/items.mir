// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/hygiene/items.rs:24:11: 24:11
    let mut _1: u32;                     // in scope 0 at ui/hygiene/items.rs:17:18: 17:26
    let mut _2: u64;                     // in scope 0 at ui/hygiene/items.rs:18:23: 18:27
    let mut _3: i32;                     // in scope 0 at ui/hygiene/items.rs:19:18: 19:27
    let mut _4: i64;                     // in scope 0 at ui/hygiene/items.rs:20:24: 20:28
    let mut _5: i64;                     // in scope 0 at ui/hygiene/items.rs:25:16: 25:24
    let mut _6: i64;                     // in scope 0 at ui/hygiene/items.rs:26:18: 26:26
    scope 1 {
        scope 2 {
            scope 3 {
                scope 4 {
                    scope 5 {
                        scope 6 {
                        }
                    }
                }
            }
        }
    }

    bb0: {
        _1 = main::foo::f() -> bb1;      // scope 0 at ui/hygiene/items.rs:17:18: 17:26
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:17:18: 17:24
                                         // + literal: Const { ty: fn() -> u32 {main::foo::f}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = main::foo::f() -> bb2;      // scope 1 at ui/hygiene/items.rs:18:23: 18:27
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:18:18: 18:25
                                         // + literal: Const { ty: fn() -> u64 {main::foo::f}, val: Value(<ZST>) }
    }

    bb2: {
        _3 = main::foo::f() -> bb3;      // scope 2 at ui/hygiene/items.rs:19:18: 19:27
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:19:18: 19:25
                                         // + literal: Const { ty: fn() -> i32 {main::foo::f}, val: Value(<ZST>) }
    }

    bb3: {
        _4 = main::foo::f() -> bb4;      // scope 3 at ui/hygiene/items.rs:20:24: 20:28
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:20:18: 20:26
                                         // + literal: Const { ty: fn() -> i64 {main::foo::f}, val: Value(<ZST>) }
    }

    bb4: {
        _5 = main::foo::f() -> bb5;      // scope 4 at ui/hygiene/items.rs:25:16: 25:24
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:25:16: 25:22
                                         // + literal: Const { ty: fn() -> i64 {main::foo::f}, val: Value(<ZST>) }
    }

    bb5: {
        _6 = main::foo::f() -> bb6;      // scope 5 at ui/hygiene/items.rs:26:18: 26:26
                                         // mir::Constant
                                         // + span: ui/hygiene/items.rs:26:18: 26:24
                                         // + literal: Const { ty: fn() -> i64 {main::foo::f}, val: Value(<ZST>) }
    }

    bb6: {
        return;                          // scope 0 at ui/hygiene/items.rs:27:2: 27:2
    }
}

fn main::foo::f() -> u32 {
    let mut _0: u32;                     // return place in scope 0 at ui/hygiene/items.rs:8:23: 8:26

    bb0: {
        _0 = const 0_u32;                // scope 0 at ui/hygiene/items.rs:8:29: 8:30
        return;                          // scope 0 at ui/hygiene/items.rs:8:32: 8:32
    }
}

fn main::foo::f() -> u64 {
    let mut _0: u64;                     // return place in scope 0 at ui/hygiene/items.rs:9:24: 9:27

    bb0: {
        _0 = const 0_u64;                // scope 0 at ui/hygiene/items.rs:9:30: 9:31
        return;                          // scope 0 at ui/hygiene/items.rs:9:33: 9:33
    }
}

fn main::foo::f() -> i32 {
    let mut _0: i32;                     // return place in scope 0 at ui/hygiene/items.rs:13:23: 13:26

    bb0: {
        _0 = const 0_i32;                // scope 0 at ui/hygiene/items.rs:13:29: 13:30
        return;                          // scope 0 at ui/hygiene/items.rs:13:32: 13:32
    }
}

fn main::foo::f() -> i64 {
    let mut _0: i64;                     // return place in scope 0 at ui/hygiene/items.rs:14:24: 14:27

    bb0: {
        _0 = const 0_i64;                // scope 0 at ui/hygiene/items.rs:14:30: 14:31
        return;                          // scope 0 at ui/hygiene/items.rs:14:34: 14:34
    }
}
