// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/never-type/never-result.rs:10:11: 10:11
    let _1: std::result::Result<u32, !>; // in scope 0 at ui/never-type/never-result.rs:11:9: 11:10
    scope 1 {
        debug x => _1;                   // in scope 1 at ui/never-type/never-result.rs:11:9: 11:10
        let _2: u32;                     // in scope 1 at ui/never-type/never-result.rs:13:12: 13:13
        let _3: !;                       // in scope 1 at ui/never-type/never-result.rs:14:13: 14:14
        scope 2 {
            debug z => _2;               // in scope 2 at ui/never-type/never-result.rs:13:12: 13:13
        }
        scope 3 {
            debug y => _3;               // in scope 3 at ui/never-type/never-result.rs:14:13: 14:14
            let _4: u32;                 // in scope 3 at ui/never-type/never-result.rs:15:17: 15:18
            scope 4 {
                debug q => _4;           // in scope 4 at ui/never-type/never-result.rs:15:17: 15:18
                let _5: i32;             // in scope 4 at ui/never-type/never-result.rs:16:17: 16:18
                scope 5 {
                    debug w => _5;       // in scope 5 at ui/never-type/never-result.rs:16:17: 16:18
                    let _6: std::string::String; // in scope 5 at ui/never-type/never-result.rs:17:17: 17:18
                    scope 6 {
                        debug e => _6;   // in scope 6 at ui/never-type/never-result.rs:17:17: 17:18
                    }
                }
            }
        }
    }

    bb0: {
        _1 = const Result::<u32, !>::Ok(123_u32); // scope 0 at ui/never-type/never-result.rs:11:29: 11:36
                                         // mir::Constant
                                         // + span: ui/never-type/never-result.rs:11:29: 11:36
                                         // + literal: Const { ty: Result<u32, !>, val: Value(Scalar(0x0000007b)) }
        _2 = ((_1 as Ok).0: u32);        // scope 1 at ui/never-type/never-result.rs:13:12: 13:13
        return;                          // scope 0 at ui/never-type/never-result.rs:21:2: 21:2
    }
}
