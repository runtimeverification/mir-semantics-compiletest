// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/never-type/never-type-arg.rs:9:1: 9:26>::eq(_1: &Wub, _2: &!) -> bool {
    debug self => _1;                    // in scope 0 at ui/never-type/never-type-arg.rs:10:11: 10:16
    debug other => _2;                   // in scope 0 at ui/never-type/never-type-arg.rs:10:18: 10:23
    let mut _0: bool;                    // return place in scope 0 at ui/never-type/never-type-arg.rs:10:32: 10:36

    bb0: {
        unreachable;                     // scope 0 at ui/never-type/never-type-arg.rs:11:9: 11:15
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/never-type/never-type-arg.rs:15:11: 15:11
    let mut _1: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
    scope 1 {
    }

    bb0: {
        _1 = begin_panic::<&str>(const "oh no!"); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:38
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:22:9: 22:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: ui/never-type/never-type-arg.rs:16:27: 16:35
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}

promoted[0] in main: &Wub = {
    let mut _0: &Wub;                    // return place in scope 0 at ui/never-type/never-type-arg.rs:16:13: 16:16
    let mut _1: Wub;                     // in scope 0 at ui/never-type/never-type-arg.rs:16:13: 16:16

    bb0: {
        _1 = Wub;                        // scope 0 at ui/never-type/never-type-arg.rs:16:13: 16:16
        _0 = &_1;                        // scope 0 at ui/never-type/never-type-arg.rs:16:13: 16:16
        return;                          // scope 0 at ui/never-type/never-type-arg.rs:16:13: 16:16
    }
}
