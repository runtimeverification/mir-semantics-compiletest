// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/never-type/issue-5500-1.rs:11:11: 11:11
    let _1: usize;                       // in scope 0 at ui/never-type/issue-5500-1.rs:12:9: 12:10
    let mut _3: &usize;                  // in scope 0 at ui/never-type/issue-5500-1.rs:13:39: 13:41
    let _4: &usize;                      // in scope 0 at ui/never-type/issue-5500-1.rs:13:39: 13:41
    let mut _5: !;                       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
    scope 1 {
        debug a => _1;                   // in scope 1 at ui/never-type/issue-5500-1.rs:12:9: 12:10
        let _2: TrieMapIterator<'_>;     // in scope 1 at ui/never-type/issue-5500-1.rs:13:9: 13:14
        scope 2 {
            debug _iter => _2;           // in scope 2 at ui/never-type/issue-5500-1.rs:13:9: 13:14
        }
    }

    bb0: {
        _1 = const 5_usize;              // scope 0 at ui/never-type/issue-5500-1.rs:12:13: 12:14
        _4 = &_1;                        // scope 1 at ui/never-type/issue-5500-1.rs:13:39: 13:41
        _3 = _4;                         // scope 1 at ui/never-type/issue-5500-1.rs:13:39: 13:41
        _2 = TrieMapIterator::<'_> { node: move _3 }; // scope 1 at ui/never-type/issue-5500-1.rs:13:17: 13:42
        _5 = begin_panic::<&str>(const "explicit panic"); // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:50
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:9: 19:32
                                         // + literal: Const { ty: fn(&str) -> ! {begin_panic::<&str>}, val: Value(<ZST>) }
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/panic.rs:19:33: 19:49
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
    }
}
