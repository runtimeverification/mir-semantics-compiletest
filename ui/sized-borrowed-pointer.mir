// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bar() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-borrowed-pointer.rs:8:20: 8:20

    bb0: {
        return;                          // scope 0 at ui/sized-borrowed-pointer.rs:8:23: 8:23
    }
}

fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-borrowed-pointer.rs:9:13: 9:13

    bb0: {
        _0 = bar::<&T>() -> bb1;         // scope 0 at ui/sized-borrowed-pointer.rs:9:15: 9:26
                                         // mir::Constant
                                         // + span: ui/sized-borrowed-pointer.rs:9:15: 9:24
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn() {bar::<&T>}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/sized-borrowed-pointer.rs:9:28: 9:28
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/sized-borrowed-pointer.rs:10:15: 10:15

    bb0: {
        return;                          // scope 0 at ui/sized-borrowed-pointer.rs:10:18: 10:18
    }
}
