// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn <impl at ui/resource-destruct.rs:10:1: 10:38>::drop(_1: &mut shrinky_pointer<'_>) -> () {
    debug self => _1;                    // in scope 0 at ui/resource-destruct.rs:11:13: 11:22
    let mut _0: ();                      // return place in scope 0 at ui/resource-destruct.rs:11:24: 11:24
    let _2: ();                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _3: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _4: &[&str];                 // in scope 0 at ui/resource-destruct.rs:12:18: 12:26
    let mut _5: &[&str; 1];              // in scope 0 at ui/resource-destruct.rs:12:18: 12:26
    let _6: &[&str; 1];                  // in scope 0 at ui/resource-destruct.rs:12:18: 12:26
    let mut _7: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _8: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _9: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _10: ();                         // in scope 0 at ui/resource-destruct.rs:12:29: 12:57
    let mut _11: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:12:29: 12:57
    let mut _12: isize;                  // in scope 0 at ui/resource-destruct.rs:12:40: 12:56
    let mut _13: isize;                  // in scope 0 at ui/resource-destruct.rs:12:40: 12:52
    let mut _14: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:12:40: 12:52
    let mut _15: (isize, bool);          // in scope 0 at ui/resource-destruct.rs:12:40: 12:56
    let mut _16: &[core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _17: &[&str; 1];             // in scope 0 at ui/resource-destruct.rs:12:18: 12:26
    let mut _18: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:11:13: 11:22
    let mut _19: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:11:13: 11:22

    bb0: {
        _17 = const _;                   // scope 0 at ui/resource-destruct.rs:12:18: 12:26
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:12:18: 12:26
                                         // + literal: Const { ty: &[&str; 1], val: Unevaluated(<shrinky_pointer<'a> as Drop>::drop, [ReErased], Some(promoted[1])) }
        _6 = _17;                        // scope 0 at ui/resource-destruct.rs:12:18: 12:26
        _5 = _6;                         // scope 0 at ui/resource-destruct.rs:12:18: 12:26
        _4 = move _5 as &[&str] (Pointer(Unsize)); // scope 0 at ui/resource-destruct.rs:12:18: 12:26
        _16 = const _;                   // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + literal: Const { ty: &[core::fmt::ArgumentV1<'_>; 0], val: Unevaluated(<shrinky_pointer<'a> as Drop>::drop, [ReErased], Some(promoted[0])) }
        _9 = _16;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _8 = _9;                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _7 = move _8 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _3 = Arguments::<'_>::new_v1(move _4, move _7) -> bb1; // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb1: {
        _2 = _print(move _3) -> bb2;     // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb2: {
        _18 = deref_copy ((*_1).0: &std::cell::Cell<isize>); // scope 0 at ui/resource-destruct.rs:12:29: 12:57
        _11 = _18;                       // scope 0 at ui/resource-destruct.rs:12:29: 12:57
        _19 = deref_copy ((*_1).0: &std::cell::Cell<isize>); // scope 0 at ui/resource-destruct.rs:12:40: 12:52
        _14 = _19;                       // scope 0 at ui/resource-destruct.rs:12:40: 12:52
        _13 = Cell::<isize>::get(move _14) -> bb3; // scope 0 at ui/resource-destruct.rs:12:40: 12:52
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:12:47: 12:50
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>) -> isize {Cell::<isize>::get}, val: Value(<ZST>) }
    }

    bb3: {
        _15 = CheckedSub(_13, const 1_isize); // scope 0 at ui/resource-destruct.rs:12:40: 12:56
        assert(!move (_15.1: bool), "attempt to compute `{} - {}`, which would overflow", move _13, const 1_isize) -> bb4; // scope 0 at ui/resource-destruct.rs:12:40: 12:56
    }

    bb4: {
        _12 = move (_15.0: isize);       // scope 0 at ui/resource-destruct.rs:12:40: 12:56
        _10 = Cell::<isize>::set(move _11, move _12) -> bb5; // scope 0 at ui/resource-destruct.rs:12:29: 12:57
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:12:36: 12:39
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>, isize) {Cell::<isize>::set}, val: Value(<ZST>) }
    }

    bb5: {
        return;                          // scope 0 at ui/resource-destruct.rs:13:6: 13:6
    }
}

promoted[0] in <impl at ui/resource-destruct.rs:10:1: 10:38>::drop: &[core::fmt::ArgumentV1<'_>; 0] = {
    let mut _0: &[core::fmt::ArgumentV1<'_>; 0]; // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _1: [core::fmt::ArgumentV1<'_>; 0]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61

    bb0: {
        _1 = [];                         // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    }
}

promoted[1] in <impl at ui/resource-destruct.rs:10:1: 10:38>::drop: &[&str; 1] = {
    let mut _0: &[&str; 1];              // return place in scope 0 at ui/resource-destruct.rs:12:18: 12:26
    let mut _1: [&str; 1];               // in scope 0 at ui/resource-destruct.rs:12:18: 12:26

    bb0: {
        _1 = [const "Hello!\n"];         // scope 0 at ui/resource-destruct.rs:12:18: 12:26
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:12:18: 12:26
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/resource-destruct.rs:12:18: 12:26
        return;                          // scope 0 at ui/resource-destruct.rs:12:18: 12:26
    }
}

fn <impl at ui/resource-destruct.rs:16:1: 16:29>::look_at(_1: &shrinky_pointer<'_>) -> isize {
    debug self => _1;                    // in scope 0 at ui/resource-destruct.rs:17:20: 17:25
    let mut _0: isize;                   // return place in scope 0 at ui/resource-destruct.rs:17:30: 17:35
    let mut _2: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:17:45: 17:57
    let mut _3: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:17:20: 17:25

    bb0: {
        _3 = deref_copy ((*_1).0: &std::cell::Cell<isize>); // scope 0 at ui/resource-destruct.rs:17:45: 17:57
        _2 = _3;                         // scope 0 at ui/resource-destruct.rs:17:45: 17:57
        _0 = Cell::<isize>::get(move _2) -> bb1; // scope 0 at ui/resource-destruct.rs:17:45: 17:57
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:17:52: 17:55
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>) -> isize {Cell::<isize>::get}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/resource-destruct.rs:17:60: 17:60
    }
}

fn shrinky_pointer(_1: &Cell<isize>) -> shrinky_pointer<'_> {
    debug i => _1;                       // in scope 0 at ui/resource-destruct.rs:20:20: 20:21
    let mut _0: shrinky_pointer<'_>;     // return place in scope 0 at ui/resource-destruct.rs:20:40: 20:55
    let mut _2: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:22:12: 22:13

    bb0: {
        _2 = _1;                         // scope 0 at ui/resource-destruct.rs:22:12: 22:13
        _0 = shrinky_pointer::<'_> { i: move _2 }; // scope 0 at ui/resource-destruct.rs:21:5: 23:6
        return;                          // scope 0 at ui/resource-destruct.rs:24:2: 24:2
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/resource-destruct.rs:26:15: 26:15
    let _1: &std::cell::Cell<isize>;     // in scope 0 at ui/resource-destruct.rs:27:9: 27:17
    let _2: std::cell::Cell<isize>;      // in scope 0 at ui/resource-destruct.rs:27:21: 27:34
    let mut _4: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:28:32: 28:40
    let mut _5: (&isize, &isize);        // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _6: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _7: isize;                       // in scope 0 at ui/resource-destruct.rs:28:54: 28:66
    let mut _8: &shrinky_pointer<'_>;    // in scope 0 at ui/resource-destruct.rs:28:54: 28:66
    let mut _9: &isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _12: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _13: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _14: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _15: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _17: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _18: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _19: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _20: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _21: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _22: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _23: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    let _24: ();                         // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
    let mut _25: std::fmt::Arguments<'_>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _26: &[&str];                // in scope 0 at ui/resource-destruct.rs:29:14: 29:29
    let mut _27: &[&str; 2];             // in scope 0 at ui/resource-destruct.rs:29:14: 29:29
    let _28: &[&str; 2];                 // in scope 0 at ui/resource-destruct.rs:29:14: 29:29
    let mut _29: &[core::fmt::ArgumentV1<'_>]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _30: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _31: &[core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let _32: [core::fmt::ArgumentV1<'_>; 1]; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
    let mut _33: core::fmt::ArgumentV1<'_>; // in scope 0 at ui/resource-destruct.rs:29:31: 29:45
    let mut _34: &isize;                 // in scope 0 at ui/resource-destruct.rs:29:31: 29:45
    let _35: &isize;                     // in scope 0 at ui/resource-destruct.rs:29:31: 29:45
    let _36: isize;                      // in scope 0 at ui/resource-destruct.rs:29:31: 29:45
    let mut _37: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:29:31: 29:45
    let mut _38: (&isize, &isize);       // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
    let mut _39: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
    let _40: isize;                      // in scope 0 at ui/resource-destruct.rs:30:16: 30:30
    let mut _41: &std::cell::Cell<isize>; // in scope 0 at ui/resource-destruct.rs:30:16: 30:30
    let mut _42: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _45: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    let mut _46: bool;                   // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
    let mut _47: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
    let mut _48: isize;                  // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
    let _50: !;                          // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
    let mut _51: core::panicking::AssertKind; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
    let mut _52: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let _53: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
    let mut _54: &isize;                 // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let _55: &isize;                     // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
    let mut _56: std::option::Option<std::fmt::Arguments<'_>>; // in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
    scope 1 {
        debug my_total => _1;            // in scope 1 at ui/resource-destruct.rs:27:9: 27:17
        let _3: shrinky_pointer<'_>;     // in scope 1 at ui/resource-destruct.rs:28:11: 28:13
        let _43: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        let _44: &isize;                 // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        let mut _57: &isize;             // in scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        let mut _58: &[&str; 2];         // in scope 1 at ui/resource-destruct.rs:29:14: 29:29
        scope 2 {
            debug pt => _3;              // in scope 2 at ui/resource-destruct.rs:28:11: 28:13
            let _10: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            let _11: &isize;             // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let mut _59: &isize;         // in scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
            scope 3 {
                debug left_val => _10;   // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
                debug right_val => _11;  // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
                let _16: core::panicking::AssertKind; // in scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                scope 4 {
                    debug kind => _16;   // in scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
                }
            }
        }
        scope 5 {
            debug left_val => _43;       // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
            debug right_val => _44;      // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
            let _49: core::panicking::AssertKind; // in scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            scope 6 {
                debug kind => _49;       // in scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:25: 41:29
            }
        }
    }

    bb0: {
        _2 = Cell::<isize>::new(const 10_isize) -> bb1; // scope 0 at ui/resource-destruct.rs:27:21: 27:34
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:27:21: 27:30
                                         // + user_ty: UserType(0)
                                         // + literal: Const { ty: fn(isize) -> Cell<isize> {Cell::<isize>::new}, val: Value(<ZST>) }
    }

    bb1: {
        _1 = &_2;                        // scope 0 at ui/resource-destruct.rs:27:20: 27:34
        _4 = _1;                         // scope 1 at ui/resource-destruct.rs:28:32: 28:40
        _3 = shrinky_pointer(move _4) -> bb2; // scope 1 at ui/resource-destruct.rs:28:16: 28:41
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:28:16: 28:31
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>) -> shrinky_pointer<'a> {shrinky_pointer}, val: Value(<ZST>) }
    }

    bb2: {
        _8 = &_3;                        // scope 2 at ui/resource-destruct.rs:28:54: 28:66
        _7 = shrinky_pointer::<'_>::look_at(move _8) -> [return: bb3, unwind: bb14]; // scope 2 at ui/resource-destruct.rs:28:54: 28:66
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:28:57: 28:64
                                         // + literal: Const { ty: for<'a> fn(&'a shrinky_pointer<'_>) -> isize {shrinky_pointer::<'_>::look_at}, val: Value(<ZST>) }
    }

    bb3: {
        _6 = &_7;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _59 = const _;                   // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[2])) }
        _9 = _59;                        // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _5 = (move _6, move _9);         // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _10 = (_5.0: &isize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _11 = (_5.1: &isize);            // scope 2 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _14 = (*_10);                    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _15 = const 10_isize;            // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _13 = Eq(move _14, move _15);    // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _12 = Not(move _13);             // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _12) -> [0: bb5, otherwise: bb4]; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb4: {
        _16 = const core::panicking::AssertKind::Eq; // scope 3 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _18 = const core::panicking::AssertKind::Eq; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _20 = _10;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _19 = _20;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _22 = _11;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _21 = _22;                       // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _23 = Option::<Arguments<'_>>::None; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _17 = core::panicking::assert_failed::<isize, isize>(move _18, move _19, move _21, move _23) -> bb14; // scope 4 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb5: {
        drop(_3) -> bb6;                 // scope 1 at ui/resource-destruct.rs:28:73: 28:74
    }

    bb6: {
        _58 = const _;                   // scope 1 at ui/resource-destruct.rs:29:14: 29:29
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:29:14: 29:29
                                         // + literal: Const { ty: &[&str; 2], val: Unevaluated(main, [], Some(promoted[1])) }
        _28 = _58;                       // scope 1 at ui/resource-destruct.rs:29:14: 29:29
        _27 = _28;                       // scope 1 at ui/resource-destruct.rs:29:14: 29:29
        _26 = move _27 as &[&str] (Pointer(Unsize)); // scope 1 at ui/resource-destruct.rs:29:14: 29:29
        _37 = _1;                        // scope 1 at ui/resource-destruct.rs:29:31: 29:45
        _36 = Cell::<isize>::get(move _37) -> bb7; // scope 1 at ui/resource-destruct.rs:29:31: 29:45
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:29:40: 29:43
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>) -> isize {Cell::<isize>::get}, val: Value(<ZST>) }
    }

    bb7: {
        _35 = &_36;                      // scope 1 at ui/resource-destruct.rs:29:31: 29:45
        _34 = _35;                       // scope 1 at ui/resource-destruct.rs:29:31: 29:45
        _33 = core::fmt::ArgumentV1::<'_>::new_display::<isize>(move _34) -> bb8; // scope 1 at ui/resource-destruct.rs:29:31: 29:45
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:29:31: 29:45
                                         // + user_ty: UserType(2)
                                         // + literal: Const { ty: for<'b> fn(&'b isize) -> core::fmt::ArgumentV1<'b> {core::fmt::ArgumentV1::<'_>::new_display::<isize>}, val: Value(<ZST>) }
    }

    bb8: {
        _32 = [move _33];                // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _31 = &_32;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _30 = _31;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _29 = move _30 as &[core::fmt::ArgumentV1<'_>] (Pointer(Unsize)); // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
        _25 = Arguments::<'_>::new_v1(move _26, move _29) -> bb9; // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:28: 137:61
                                         // + user_ty: UserType(1)
                                         // + literal: Const { ty: fn(&[&'static str], &[core::fmt::ArgumentV1<'_>]) -> Arguments<'_> {Arguments::<'_>::new_v1}, val: Value(<ZST>) }
    }

    bb9: {
        _24 = _print(move _25) -> bb10;  // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:62
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/std/src/macros.rs:137:9: 137:27
                                         // + literal: Const { ty: for<'a> fn(Arguments<'a>) {_print}, val: Value(<ZST>) }
    }

    bb10: {
        _41 = _1;                        // scope 1 at ui/resource-destruct.rs:30:16: 30:30
        _40 = Cell::<isize>::get(move _41) -> bb11; // scope 1 at ui/resource-destruct.rs:30:16: 30:30
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:30:25: 30:28
                                         // + literal: Const { ty: for<'a> fn(&'a Cell<isize>) -> isize {Cell::<isize>::get}, val: Value(<ZST>) }
    }

    bb11: {
        _39 = &_40;                      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:16: 38:22
        _57 = const _;                   // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
                                         // + literal: Const { ty: &isize, val: Unevaluated(main, [], Some(promoted[0])) }
        _42 = _57;                       // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        _38 = (move _39, move _42);      // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:15: 38:32
        _43 = (_38.0: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:14: 39:22
        _44 = (_38.1: &isize);           // scope 1 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:39:24: 39:33
        _47 = (*_43);                    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:22: 40:31
        _48 = const 9_isize;             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:35: 40:45
        _46 = Eq(move _47, move _48);    // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:21: 40:46
        _45 = Not(move _46);             // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
        switchInt(move _45) -> [0: bb13, otherwise: bb12]; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:40:20: 40:46
    }

    bb12: {
        _49 = const core::panicking::AssertKind::Eq; // scope 5 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:41:32: 41:65
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _51 = const core::panicking::AssertKind::Eq; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:54: 45:58
                                         // + literal: Const { ty: core::panicking::AssertKind, val: Value(Scalar(0x00)) }
        _53 = _43;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _52 = _53;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:60: 45:70
        _55 = _44;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _54 = _55;                       // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:72: 45:83
        _56 = Option::<Arguments<'_>>::None; // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:85: 45:113
        _50 = core::panicking::assert_failed::<isize, isize>(move _51, move _52, move _54, move _56); // scope 6 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:114
                                         // mir::Constant
                                         // + span: /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:45:21: 45:53
                                         // + literal: Const { ty: for<'a, 'b, 'c> fn(core::panicking::AssertKind, &'a isize, &'b isize, Option<Arguments<'c>>) -> ! {core::panicking::assert_failed::<isize, isize>}, val: Value(<ZST>) }
    }

    bb13: {
        return;                          // scope 0 at ui/resource-destruct.rs:31:2: 31:2
    }

    bb14 (cleanup): {
        drop(_3) -> bb15;                // scope 1 at ui/resource-destruct.rs:28:73: 28:74
    }

    bb15 (cleanup): {
        resume;                          // scope 0 at ui/resource-destruct.rs:26:1: 31:2
    }
}

promoted[0] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/resource-destruct.rs:30:32: 30:33

    bb0: {
        _1 = const 9_isize;              // scope 0 at ui/resource-destruct.rs:30:32: 30:33
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}

promoted[1] in main: &[&str; 2] = {
    let mut _0: &[&str; 2];              // return place in scope 0 at ui/resource-destruct.rs:29:14: 29:29
    let mut _1: [&str; 2];               // in scope 0 at ui/resource-destruct.rs:29:14: 29:29

    bb0: {
        _1 = [const "my_total = ", const "\n"]; // scope 0 at ui/resource-destruct.rs:29:14: 29:29
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:29:14: 29:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
                                         // mir::Constant
                                         // + span: ui/resource-destruct.rs:29:14: 29:29
                                         // + literal: Const { ty: &str, val: Value(Slice(..)) }
        _0 = &_1;                        // scope 0 at ui/resource-destruct.rs:29:14: 29:29
        return;                          // scope 0 at ui/resource-destruct.rs:29:14: 29:29
    }
}

promoted[2] in main: &isize = {
    let mut _0: &isize;                  // return place in scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    let mut _1: isize;                   // in scope 0 at ui/resource-destruct.rs:28:68: 28:70

    bb0: {
        _1 = const 10_isize;             // scope 0 at ui/resource-destruct.rs:28:68: 28:70
        _0 = &_1;                        // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
        return;                          // scope 0 at /rustc/bd39bbb4bb92df439bf6d85470e296cc6a47ffbd/library/core/src/macros/mod.rs:38:24: 38:31
    }
}
