// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/attrs-resolution.rs:13:11: 13:11
    let _1: FooEnum;                     // in scope 0 at ui/attrs-resolution.rs:14:9: 14:21
    scope 1 {
        debug foo_enum_bar => _1;        // in scope 1 at ui/attrs-resolution.rs:14:9: 14:21
        let _2: i32;                     // in scope 1 at ui/attrs-resolution.rs:16:22: 16:23
        let _3: FooStruct;               // in scope 1 at ui/attrs-resolution.rs:20:9: 20:19
        scope 2 {
            debug x => _2;               // in scope 2 at ui/attrs-resolution.rs:16:22: 16:23
        }
        scope 3 {
            debug foo_struct => _3;      // in scope 3 at ui/attrs-resolution.rs:20:9: 20:19
            let _4: i32;                 // in scope 3 at ui/attrs-resolution.rs:23:30: 23:33
            let _5: FooStruct;           // in scope 3 at ui/attrs-resolution.rs:33:9: 33:29
            scope 4 {
                debug bar => _4;         // in scope 4 at ui/attrs-resolution.rs:23:30: 23:33
            }
            scope 5 {
                debug _another_foo_strunct => _5; // in scope 5 at ui/attrs-resolution.rs:33:9: 33:29
            }
        }
    }

    bb0: {
        _1 = const FooEnum::Bar(1_i32);  // scope 0 at ui/attrs-resolution.rs:14:24: 14:39
                                         // mir::Constant
                                         // + span: ui/attrs-resolution.rs:14:24: 14:39
                                         // + literal: Const { ty: FooEnum, val: Value(Scalar(0x00000001)) }
        _2 = const 1_i32;                // scope 1 at ui/attrs-resolution.rs:16:22: 16:23
        _3 = const FooStruct {{ bar: 1_i32 }}; // scope 1 at ui/attrs-resolution.rs:20:22: 20:42
                                         // mir::Constant
                                         // + span: ui/attrs-resolution.rs:20:22: 20:42
                                         // + literal: Const { ty: FooStruct, val: Value(Scalar(0x00000001)) }
        _4 = const 1_i32;                // scope 3 at ui/attrs-resolution.rs:23:30: 23:33
        _5 = const FooStruct {{ bar: 1_i32 }}; // scope 3 at ui/attrs-resolution.rs:33:32: 36:6
                                         // mir::Constant
                                         // + span: ui/attrs-resolution.rs:33:32: 36:6
                                         // + literal: Const { ty: FooStruct, val: Value(Scalar(0x00000001)) }
        return;                          // scope 0 at ui/attrs-resolution.rs:37:2: 37:2
    }
}

fn FooEnum::Bar(_1: i32) -> FooEnum {
    let mut _0: FooEnum;                 // return place in scope 0 at ui/attrs-resolution.rs:5:5: 5:8

    bb0: {
        _0 = FooEnum::Bar(move _1);      // scope 0 at ui/attrs-resolution.rs:5:5: 5:8
        return;                          // scope 0 at ui/attrs-resolution.rs:5:5: 5:8
    }
}

// MIR FOR CTFE
fn FooEnum::Bar(_1: i32) -> FooEnum {
    let mut _0: FooEnum;                 // return place in scope 0 at ui/attrs-resolution.rs:5:5: 5:8

    bb0: {
        _0 = FooEnum::Bar(move _1);      // scope 0 at ui/attrs-resolution.rs:5:5: 5:8
        return;                          // scope 0 at ui/attrs-resolution.rs:5:5: 5:8
    }
}
