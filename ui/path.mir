// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn bar(_1: usize) -> () {
    debug _offset => _1;                 // in scope 0 at ui/path.rs:5:16: 5:23
    let mut _0: ();                      // return place in scope 0 at ui/path.rs:5:32: 5:32

    bb0: {
        return;                          // scope 0 at ui/path.rs:5:35: 5:35
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/path.rs:8:15: 8:15
    let _1: ();                          // in scope 0 at ui/path.rs:8:17: 8:28

    bb0: {
        _1 = bar(const 0_usize) -> bb1;  // scope 0 at ui/path.rs:8:17: 8:28
                                         // mir::Constant
                                         // + span: ui/path.rs:8:17: 8:25
                                         // + literal: Const { ty: fn(usize) {bar}, val: Value(<ZST>) }
    }

    bb1: {
        return;                          // scope 0 at ui/path.rs:8:31: 8:31
    }
}
