// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
S::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/dropck/dropck_fn_type.rs:7:26: 7:27

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/dropck/dropck_fn_type.rs:7:26: 7:27
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:7:26: 7:27
    }
}

<impl at ui/dropck/dropck_fn_type.rs:9:1: 9:39>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/dropck/dropck_fn_type.rs:9:22: 9:23

    bb0: {
        _0 = const 1_usize;              // scope 0 at ui/dropck/dropck_fn_type.rs:9:22: 9:23
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:9:22: 9:23
    }
}

fn <impl at ui/dropck/dropck_fn_type.rs:9:1: 9:39>::drop(_1: &mut S<F>) -> () {
    debug self => _1;                    // in scope 0 at ui/dropck/dropck_fn_type.rs:10:13: 10:22
    let mut _0: ();                      // return place in scope 0 at ui/dropck/dropck_fn_type.rs:10:24: 10:24

    bb0: {
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:10:26: 10:26
    }
}

P::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/dropck/dropck_fn_type.rs:14:32: 14:34

    bb0: {
        _0 = const 10_usize;             // scope 0 at ui/dropck/dropck_fn_type.rs:14:32: 14:34
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:14:32: 14:34
    }
}

<impl at ui/dropck/dropck_fn_type.rs:16:1: 16:49>::{constant#0}: usize = {
    let mut _0: usize;                   // return place in scope 0 at ui/dropck/dropck_fn_type.rs:16:28: 16:30

    bb0: {
        _0 = const 10_usize;             // scope 0 at ui/dropck/dropck_fn_type.rs:16:28: 16:30
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:16:28: 16:30
    }
}

fn <impl at ui/dropck/dropck_fn_type.rs:16:1: 16:49>::drop(_1: &mut P<A, F>) -> () {
    debug self => _1;                    // in scope 0 at ui/dropck/dropck_fn_type.rs:17:13: 17:22
    let mut _0: ();                      // return place in scope 0 at ui/dropck/dropck_fn_type.rs:17:24: 17:24

    bb0: {
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:17:26: 17:26
    }
}

fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/dropck/dropck_fn_type.rs:20:11: 20:11

    bb0: {
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:20:13: 20:13
    }
}

fn S(_1: F) -> S<F> {
    let mut _0: S<F>;                    // return place in scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29

    bb0: {
        _0 = S::<F>(move _1);            // scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29
    }
}

// MIR FOR CTFE
fn S(_1: F) -> S<F> {
    let mut _0: S<F>;                    // return place in scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29

    bb0: {
        _0 = S::<F>(move _1);            // scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:7:1: 7:29
    }
}

fn P(_1: F) -> P<A, F> {
    let mut _0: P<A, F>;                 // return place in scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36

    bb0: {
        _0 = P::<A, F>(move _1);         // scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36
    }
}

// MIR FOR CTFE
fn P(_1: F) -> P<A, F> {
    let mut _0: P<A, F>;                 // return place in scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36

    bb0: {
        _0 = P::<A, F>(move _1);         // scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36
        return;                          // scope 0 at ui/dropck/dropck_fn_type.rs:14:1: 14:36
    }
}
