// WARNING: This output format is intended for human consumers only
// and is subject to change without notice. Knock yourself out.
fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at ui/half-open-range-patterns/slice_pattern_syntax_problem2.rs:3:11: 3:11
    let _1: [i32; 8];                    // in scope 0 at ui/half-open-range-patterns/slice_pattern_syntax_problem2.rs:4:9: 4:11
    scope 1 {
        debug xs => _1;                  // in scope 1 at ui/half-open-range-patterns/slice_pattern_syntax_problem2.rs:4:9: 4:11
        scope 2 {
        }
    }

    bb0: {
        _1 = [const 13_i32, const 1_i32, const 5_i32, const 2_i32, const 3_i32, const 1_i32, const 21_i32, const 8_i32]; // scope 0 at ui/half-open-range-patterns/slice_pattern_syntax_problem2.rs:4:14: 4:40
        return;                          // scope 0 at ui/half-open-range-patterns/slice_pattern_syntax_problem2.rs:10:2: 10:2
    }
}
